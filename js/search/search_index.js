var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.408,1,1.94]],["body/controllers/AppController.html",[0,2.11,1,2.252,2,1.127,3,0.331,4,0.289,5,0.211,6,2.042,7,1.118,8,2.907,9,0.421,10,1.349,11,1.745,12,3.769,13,2.962,14,4.621,15,1.762,16,1.363,17,2.127,18,0.037,19,2.467,20,2.042,21,3.824,22,2.555,23,2.962,24,2.467,25,3.653,26,3.274,27,3.486,28,3.653,29,3.653,30,1.087,31,2.467,32,3.653,33,3.824,34,1.349,35,0.838,36,0.374,37,1.228,38,1.849,39,1.443,40,2.467,41,2.467,42,2.467,43,3.579,44,4.621,45,2.555,46,2.467,47,2.467,48,2.962,49,1.807,50,2.252,51,2.555,52,0.599,53,1.585,54,2.042,55,0.637,56,2.333,57,2.042,58,2.962,59,3.769,60,1.127,61,2.042,62,1.246,63,1.585,64,1.552,65,2.962,66,2.962,67,1.385,68,1.552,69,1.552,70,0.331,71,0.175,72,1.118,73,1.483,74,1.228,75,3.486,76,2.872,77,3.486,78,1.197,79,2.467,80,2.467,81,2.467,82,0.846,83,0.47,84,2.467,85,2.467,86,2.467,87,2.467,88,2.042,89,2.467,90,2.042,91,1.246,92,2.042,93,0.014,94,0.021,95,0.014]],["title/modules/AppModule.html",[83,0.587,96,1.731]],["body/modules/AppModule.html",[1,2.781,2,1.739,3,0.592,4,0.315,5,0.326,18,0.037,52,0.688,55,0.695,56,2.66,57,2.226,67,1.51,68,1.693,69,1.693,70,0.361,71,0.191,78,0.764,83,0.842,93,0.016,94,0.022,95,0.016,96,3.32,97,1.115,98,1.115,99,1.51,100,1.51,101,1.51,102,2.019,103,1.358,104,2.226,105,2.226,106,2.226,107,2.957,108,2.794,109,2.66,110,2.848,111,2.138,112,1.51,113,1.228,114,2.69,115,3.024,116,2.019,117,3.808,118,2.226,119,2.226,120,2.69,121,2.226,122,3.808,123,1.693,124,2.226,125,1.539,126,1.51,127,2.69,128,2.226,129,2.69,130,2.69,131,1.51,132,2.69,133,2.69,134,1.923,135,2.396,136,2.69,137,2.69,138,2.69,139,2.232,140,2.69,141,2.69,142,2.69,143,4.421,144,3.978,145,3.808,146,3.808,147,2.195,148,2.138,149,3.808,150,1.501,151,3.808,152,3.808,153,2.69,154,3.808,155,2.69,156,1.921,157,2.69,158,2.69,159,2.69,160,2.69,161,2.69,162,2.69,163,2.69,164,2.69,165,2.69,166,2.69,167,2.69,168,2.69]],["title/injectables/AppService.html",[56,1.557,169,1.162]],["body/injectables/AppService.html",[3,0.46,4,0.402,5,0.294,7,0.856,9,0.585,10,1.694,16,1.294,18,0.037,30,1.161,34,1.293,35,0.803,36,0.521,37,1.177,39,1.404,48,3.72,49,2.861,51,3.209,52,0.587,53,1.542,55,0.886,56,2.27,70,0.46,71,0.244,72,1.661,73,1.863,74,1.177,78,0.975,93,0.02,94,0.026,95,0.02,116,1.567,125,1.569,126,1.926,134,1.733,147,2.588,169,1.694,170,1.926,171,2.84,172,5.32,173,3.431,174,3.789,175,3.431,176,3.154,177,2.523,178,3.431,179,2.828,180,3.431,181,0.975,182,5.014,183,3.431,184,3.431,185,2.159]],["title/controllers/AuthController.html",[0,1.408,186,1.94]],["body/controllers/AuthController.html",[0,1.996,2,1.204,3,0.353,4,0.309,5,0.226,7,1.13,9,0.45,10,1.415,11,2.168,17,1.896,18,0.037,26,2.107,28,3.401,30,0.969,32,3.401,34,1.415,35,0.879,36,0.57,37,1.288,39,1.172,45,1.883,52,0.613,53,1.634,55,0.681,59,3.844,60,1.204,63,1.727,64,1.659,70,0.353,71,0.187,72,1.172,73,1.556,74,1.288,76,2.937,78,1.067,82,0.904,91,2.405,93,0.015,94,0.022,95,0.015,147,1.714,148,2.107,181,1.067,186,2.362,187,2.182,188,2.182,189,2.637,190,3.387,191,3.929,192,3.942,193,2.637,194,2.826,195,2.637,196,4.764,197,3.754,198,4.764,199,3.754,200,4.764,201,4.764,202,2.637,203,2.642,204,3.942,205,2.637,206,2.542,207,2.637,208,4.764,209,2.637,210,2.637,211,2.182,212,2.542,213,2.182,214,2.182,215,2.637,216,2.637,217,2.637,218,2.637,219,3.754,220,2.637,221,2.637,222,3.754,223,2.637,224,2.637,225,2.637]],["title/modules/AuthModule.html",[83,0.587,107,1.731]],["body/modules/AuthModule.html",[2,1.971,3,0.432,4,0.378,5,0.276,11,1.337,18,0.037,52,0.685,55,0.833,62,1.629,70,0.432,71,0.229,78,0.917,83,0.926,93,0.019,94,0.025,95,0.019,97,1.337,98,1.337,99,1.811,100,1.811,101,1.811,102,2.221,103,2.179,107,3.371,108,2.872,109,2.812,111,2.423,112,1.811,113,1.473,115,3.059,124,2.67,125,1.475,126,1.811,128,2.67,134,1.629,135,2.03,186,3.059,212,2.812,213,2.67,226,2.67,227,3.226,228,2.67,229,3.126,230,3.226,231,3.226,232,2.303,233,2.67,234,3.226,235,3.226,236,3.571,237,3.571,238,2.423,239,3.226,240,2.67,241,2.67,242,3.226,243,4.316,244,3.226,245,3.226]],["title/injectables/AuthService.html",[169,1.162,212,1.557]],["body/injectables/AuthService.html",[3,0.279,4,0.244,5,0.178,7,0.726,9,0.355,10,1.19,11,1.993,16,1.329,18,0.038,30,1.18,34,1.603,35,0.995,36,0.73,37,1.459,38,1.19,39,1.19,52,0.563,53,1.714,55,0.538,63,1.808,64,1.31,70,0.279,71,0.148,72,1.328,73,2.184,74,1.65,78,1.083,82,1.568,91,1.052,93,0.012,94,0.019,95,0.012,125,1.497,126,1.169,144,2.612,147,2.196,148,2.14,150,0.651,169,1.19,170,1.169,181,1.299,190,1.986,191,2.254,194,2.566,203,2.429,204,1.724,212,1.594,214,1.724,232,1.487,238,2.387,246,1.724,247,1.441,248,3.812,249,3.812,250,3.157,251,3.157,252,2.083,253,5.147,254,3.157,255,2.083,256,2.387,257,2.083,258,2.254,259,3.157,260,3.026,261,3.157,262,3.157,263,2.083,264,3.157,265,3.98,266,4.361,267,3.157,268,3.157,269,3.157,270,2.083,271,3.157,272,1.986,273,2.612,274,2.254,275,3.812,276,2.612,277,2.612,278,2.083,279,3.157,280,2.083,281,1.724,282,2.254,283,1.772,284,1.986,285,2.083,286,2.083,287,2.083,288,2.083,289,2.083,290,2.083,291,4.571,292,2.083,293,3.812,294,3.782,295,3.157,296,2.612,297,3.812,298,2.721,299,2.083,300,1.724,301,2.083,302,2.083,303,2.083,304,2.083,305,1.169,306,1.487,307,1.724,308,2.083]],["title/modules/ConfigModule.html",[83,0.587,108,1.557]],["body/modules/ConfigModule.html",[3,0.552,4,0.482,5,0.353,18,0.037,52,0.591,55,1.064,70,0.552,71,0.293,83,1.039,93,0.024,94,0.03,95,0.024,97,1.707,98,1.707,99,2.313,100,2.313,101,2.313,102,2.305,103,2.756,108,2.947,111,2.834,112,2.313,113,1.881,125,1.726,150,1.287,309,3.409,310,3.409,311,4.12,312,4.12,313,3.409,314,4.12,315,4.12]],["title/classes/ConfigService.html",[71,0.219,125,0.876]],["body/classes/ConfigService.html",[3,0.307,4,0.268,5,0.427,7,0.436,9,0.39,10,1.277,16,1.526,18,0.037,30,1.228,34,1.68,35,1.043,36,0.722,37,1.529,39,1.61,49,2.251,50,3.46,52,0.472,53,1.383,70,0.454,71,0.163,72,1.26,73,2.065,74,1.383,76,1.285,78,1.146,93,0.013,94,0.02,95,0.013,125,0.963,147,1.547,150,0.715,156,2.88,176,2.537,177,2.671,181,1.146,185,1.44,247,1.547,272,2.804,305,1.285,316,1.285,317,1.634,318,3.621,319,3.388,320,2.88,321,3.388,322,2.804,323,3.388,324,2.804,325,3.183,326,2.804,327,2.804,328,2.502,329,2.804,330,2.289,331,2.419,332,3.78,333,2.419,334,2.804,335,2.131,336,2.804,337,2.289,338,2.419,339,3.183,340,2.804,341,2.804,342,2.88,343,3.338,344,2.131,345,2.804,346,2.289,347,2.804,348,2.804,349,2.804,350,2.804,351,2.419,352,2.804,353,1.711,354,2.804,355,1.894,356,1.634,357,2.804,358,1.634,359,2.804,360,1.634,361,0.948,362,1.894,363,1.894,364,1.894,365,1.285,366,1.634,367,1.894,368,1.894,369,1.894,370,1.894,371,1.634,372,1.894,373,1.634,374,1.894,375,1.894,376,1.894,377,1.634,378,1.634,379,1.894,380,1.634,381,1.894,382,1.634,383,1.894,384,1.44,385,2.419,386,1.894,387,2.804,388,1.894,389,1.894,390,1.894,391,1.894,392,1.894]],["title/interfaces/EnvConfig.html",[318,1.94,361,1.278]],["body/interfaces/EnvConfig.html",[3,0.373,4,0.326,5,0.418,7,0.53,16,1.525,18,0.037,30,0.718,39,1.406,49,1.969,50,3.232,52,0.527,53,1.544,70,0.523,71,0.198,72,0.869,73,1.616,74,0.955,76,1.562,78,1.279,93,0.016,94,0.023,95,0.016,125,0.791,147,1.271,150,0.869,156,3.215,176,2.453,177,2.527,181,1.279,185,1.751,272,2.453,305,1.562,317,1.987,318,3.51,320,1.987,322,2.303,324,2.303,325,2.784,326,2.303,327,2.303,328,2.189,329,2.303,331,1.987,332,3.904,333,1.987,334,3.07,335,1.751,336,2.303,338,1.987,339,2.784,340,2.453,341,2.303,342,2.784,343,3.227,344,1.751,345,2.303,347,2.303,348,2.303,349,2.303,350,2.303,351,1.987,352,2.303,353,1.405,354,2.303,355,2.303,356,1.987,357,3.227,358,1.987,359,3.227,360,2.784,361,1.153,362,2.303,363,2.303,364,2.303,365,1.562,366,1.987,367,2.303,368,2.303,369,2.303,370,2.303,371,1.987,372,2.303,373,1.987,374,2.303,375,2.303,376,2.303,377,1.987,378,1.987,379,2.303,380,1.987,381,2.303,382,1.987,383,2.303,384,1.751,385,2.784,386,2.303,387,3.227,388,2.303,389,2.303,390,2.303,391,2.303,392,2.303,393,1.751,394,2.783,395,2.783]],["title/interfaces/IProfile.html",[256,1.731,361,1.278]],["body/interfaces/IProfile.html",[3,0.383,4,0.335,5,0.245,7,0.544,9,0.488,16,1.597,18,0.037,35,1.289,36,0.911,38,2.076,52,0.335,70,0.533,74,1.89,82,1.694,93,0.017,94,0.023,95,0.017,131,3.093,139,2.62,150,0.893,181,0.812,247,1.815,256,2.231,282,3.525,283,3.093,284,3.264,353,1.444,361,1.185,365,2.564,393,1.799,396,2.041,397,3.106,398,4.294,399,2.838,400,4.831,401,2.782,402,4.569,403,3.289,404,2.838,405,2.62,406,2.366]],["title/injectables/JwtStrategy.html",[169,1.162,229,1.731]],["body/injectables/JwtStrategy.html",[3,0.42,4,0.367,5,0.269,7,0.806,9,0.535,10,1.595,11,1.986,18,0.037,26,2.377,30,1.093,34,1.595,35,0.991,36,0.643,37,1.452,39,0.979,52,0.628,53,1.761,55,0.81,62,1.584,63,1.996,64,1.973,70,0.42,71,0.34,72,1.603,73,1.299,74,1.452,93,0.018,94,0.025,95,0.018,125,1.632,126,1.76,148,2.377,169,1.595,170,1.76,179,1.973,181,0.891,229,2.377,238,2.881,241,2.595,260,3.372,277,2.595,282,2.239,338,3.023,366,3.422,385,2.239,399,2.239,407,2.595,408,4.794,409,3.136,410,3.136,411,3.136,412,5.524,413,5.133,414,3.136,415,4.234,416,4.234,417,4.234,418,4.234,419,3.136,420,2.595,421,3.136,422,3.136,423,3.136,424,3.136,425,3.136,426,3.136,427,4.234,428,4.234,429,4.234]],["title/classes/LoginPayload.html",[71,0.219,194,1.731]],["body/classes/LoginPayload.html",[3,0.506,4,0.442,5,0.324,7,0.719,9,0.644,16,1.424,17,2.415,18,0.037,30,1.235,36,0.726,38,2.144,52,0.56,60,1.725,70,0.506,71,0.392,93,0.022,94,0.028,95,0.022,139,2.415,191,3.415,194,2.685,247,2.184,316,2.121,401,2.874,405,2.415,430,3.127,431,4.783,432,3.415,433,3.127,434,3.778,435,3.938,436,2.697,437,3.778,438,3.747,439,3.415,440,3.747,441,2.697,442,2.377,443,2.697]],["title/classes/PatchProfilePayload.html",[71,0.219,444,1.731]],["body/classes/PatchProfilePayload.html",[3,0.448,4,0.392,5,0.287,7,0.637,9,0.57,16,1.504,17,2.66,18,0.037,30,1.36,35,1.282,36,0.799,38,2.064,52,0.518,60,1.527,70,0.448,71,0.374,82,1.516,93,0.02,94,0.026,95,0.02,139,1.689,203,2.232,247,2.018,283,3.075,316,1.878,340,2.104,401,2.766,405,1.689,432,2.388,435,4.159,436,2.388,438,3.91,439,3.156,440,4.017,441,2.388,442,2.104,443,2.388,444,2.481,445,2.768,446,3.658,447,3.345,448,3.345,449,3.345,450,3.658,451,3.658,452,3.345,453,3.345,454,3.345,455,3.345,456,3.658,457,2.768]],["title/controllers/ProfileController.html",[0,1.408,458,1.94]],["body/controllers/ProfileController.html",[0,1.808,2,1.013,3,0.297,4,0.26,5,0.19,7,1.099,8,2.083,9,0.378,10,1.248,11,2.222,12,3.956,13,2.74,15,1.585,16,1.318,17,2,18,0.037,20,1.837,21,4.077,22,3.135,23,3.634,25,3.517,26,3.15,27,3.277,28,3.517,29,3.517,30,1.022,32,2.364,33,3.634,34,1.492,35,0.927,36,0.601,37,1.358,38,2.088,39,1.237,45,1.585,52,0.577,53,1.611,54,1.837,55,0.573,58,2.74,59,3.644,60,1.013,61,1.837,62,1.121,63,1.506,65,2.74,66,3.277,67,1.246,68,1.396,69,1.396,70,0.297,71,0.158,72,0.693,74,0.761,75,3.277,76,2.765,77,3.277,78,1.125,82,2.068,88,2.74,90,1.837,91,2,92,1.837,93,0.013,94,0.019,95,0.013,150,0.693,181,0.631,188,1.837,203,2,206,1.121,211,1.837,305,1.246,335,2.083,444,2.465,446,4.077,458,2.083,459,1.837,460,2.219,461,3.311,462,2.219,463,3.311,464,2.219,465,2.219,466,2.219,467,4.926,468,2.219,469,2.74,470,2.219,471,2.219,472,2.74,473,2.219,474,2.74,475,2.74,476,2.74,477,1.837,478,1.837,479,2.219,480,2.219,481,2.219,482,2.219,483,2.219,484,2.219,485,1.837,486,2.219,487,2.219,488,2.219]],["title/modules/ProfileModule.html",[83,0.587,109,1.557]],["body/modules/ProfileModule.html",[2,2.163,3,0.499,4,0.436,5,0.319,18,0.037,35,0.871,52,0.678,55,0.96,62,1.879,63,2.103,70,0.499,71,0.264,82,1.787,83,0.992,93,0.022,94,0.028,95,0.022,97,1.542,98,1.542,99,2.088,100,2.088,101,2.088,102,2.379,103,2.631,109,2.971,111,2.659,112,2.088,113,1.699,115,2.34,121,3.079,123,2.34,233,3.079,236,3.079,237,3.079,238,2.088,365,2.088,458,3.278,477,3.079,489,3.079,490,3.079,491,3.079,492,3.72,493,3.079,494,3.72,495,3.72]],["title/injectables/ProfileService.html",[63,1.058,169,1.162]],["body/injectables/ProfileService.html",[3,0.258,4,0.226,5,0.165,7,0.567,9,0.329,10,1.122,11,1.933,12,2.595,15,2.125,16,1.503,18,0.037,25,1.377,29,1.377,30,1.256,34,1.833,35,1.175,36,0.738,37,1.668,38,2.216,39,1.457,52,0.604,53,1.723,55,0.498,63,1.021,70,0.258,71,0.137,72,1.276,73,0.799,74,0.662,78,1.382,82,1.974,91,1.503,93,0.011,94,0.017,95,0.011,123,1.213,131,1.083,147,1.359,148,2.04,150,1.276,169,1.122,170,1.083,181,1.161,203,2.602,206,2.23,256,1.083,258,2.125,273,1.596,274,2.917,284,1.213,298,2.125,305,2.04,306,2.125,307,1.596,331,3.331,397,1.213,401,2.536,403,2.463,404,2.125,444,2.479,472,2.463,474,2.463,475,2.463,476,3.008,478,1.596,493,1.596,496,1.596,497,2.463,498,2.976,499,2.976,500,1.929,501,4.416,502,1.929,503,3.635,504,2.976,505,1.929,506,3.862,507,1.929,508,2.976,509,3.008,510,2.976,511,1.929,512,2.976,513,1.929,514,2.976,515,2.976,516,1.929,517,2.976,518,1.929,519,2.976,520,2.463,521,1.929,522,1.929,523,2.976,524,1.929,525,1.596,526,1.929,527,1.929,528,1.929,529,1.929,530,2.463,531,2.976,532,1.929,533,2.976,534,1.929,535,1.929,536,1.929,537,1.929,538,1.596,539,2.976,540,1.596,541,1.929,542,1.929,543,1.929,544,1.929,545,1.596,546,1.929,547,1.929,548,1.929,549,1.929,550,1.929,551,1.596,552,1.929,553,1.929,554,1.929,555,1.929,556,1.929,557,1.929,558,1.929,559,1.929,560,1.929,561,1.929,562,1.929,563,1.596,564,1.929,565,1.929,566,1.929,567,1.929,568,1.929,569,1.929,570,1.929]],["title/classes/RegisterPayload.html",[71,0.219,206,1.557]],["body/classes/RegisterPayload.html",[3,0.438,4,0.383,5,0.28,7,0.623,9,0.558,16,1.496,17,2.636,18,0.037,30,1.348,35,1.272,36,0.792,38,2.048,52,0.51,60,1.493,70,0.438,71,0.371,93,0.019,94,0.026,95,0.019,139,2.636,192,3.603,203,2.199,206,2.199,247,1.988,283,3.052,316,1.835,340,2.057,401,2.745,405,2.636,432,3.727,433,2.706,435,4.138,436,2.334,438,3.881,439,3.109,440,3.992,441,2.334,442,2.057,443,2.334,450,3.603,451,3.603,456,3.603,457,2.706,571,2.706,572,3.27,573,3.27,574,3.27,575,3.27,576,3.27,577,3.27]],["title/modules/WinstonModule.html",[83,0.587,110,1.731]],["body/modules/WinstonModule.html",[3,0.448,4,0.392,5,0.287,10,1.26,18,0.037,30,1.141,34,1.666,35,1.035,36,0.671,37,1.516,39,1.38,52,0.58,53,1.516,55,0.863,70,0.448,71,0.237,72,1.645,78,1.256,83,1.122,93,0.02,94,0.026,95,0.02,97,1.386,102,2.569,103,2.232,110,2.957,115,2.104,116,2.261,181,1.256,320,3.761,384,2.104,578,3.345,579,3.345,580,4.42,581,3.314,582,3.345,583,4.42,584,3.075,585,5.477,586,4.42,587,3.345,588,2.957,589,3.345,590,3.658,591,4.42,592,3.345,593,2.388,594,2.388,595,3.345,596,4.42,597,3.345,598,3.345,599,3.345]],["title/interfaces/WinstonModuleAsyncOptions.html",[361,1.278,588,1.731]],["body/interfaces/WinstonModuleAsyncOptions.html",[3,0.496,4,0.433,5,0.317,7,0.705,9,0.631,18,0.037,36,0.789,37,1.619,39,1.474,52,0.553,70,0.633,83,1.042,93,0.022,94,0.028,95,0.022,102,2.156,116,2.583,134,2.92,135,3.444,174,2.329,179,2.97,247,2.156,353,2.384,361,1.534,393,2.329,399,3.371,506,3.063,581,2.97,584,3.175,588,2.65,590,3.907,600,2.643,601,4.721,602,4.721,603,4.721,604,3.701,605,3.701,606,3.371,607,3.701]],["title/coverage.html",[608,2.989]],["body/coverage.html",[0,2.154,1,1.911,5,0.26,6,2.514,18,0.037,36,0.461,56,1.534,63,1.042,71,0.36,82,1.042,83,0.578,93,0.018,94,0.024,95,0.018,125,0.863,131,1.705,150,0.949,169,1.909,171,2.514,186,1.911,187,2.514,194,1.705,206,1.534,212,1.534,229,1.705,246,2.514,256,1.705,317,2.959,318,1.911,344,3.808,361,1.954,396,2.959,407,2.514,430,2.514,444,1.705,445,2.514,458,1.911,459,2.514,496,2.514,571,2.514,588,1.705,593,2.169,594,2.169,600,2.169,608,2.169,609,2.169,610,2.514,611,3.038,612,2.514,613,5.187,614,6.081,615,4.144,616,2.169,617,5.302,618,4.144,619,4.144,620,3.038,621,3.038,622,3.429,623,2.514,624,2.514,625,3.429,626,4.634,627,2.514,628,2.514,629,2.514,630,2.514,631,2.514,632,2.514,633,2.514,634,2.514,635,2.514,636,3.038,637,3.038]],["title/dependencies.html",[98,1.534,638,2.586]],["body/dependencies.html",[5,0.305,18,0.037,55,0.918,60,1.624,62,1.796,67,1.997,68,2.238,69,2.238,71,0.327,93,0.021,94,0.027,95,0.021,98,1.474,116,2.101,118,2.944,119,2.944,123,2.238,232,2.539,238,1.997,356,2.539,358,2.539,397,2.238,404,2.539,420,3.808,442,2.238,520,2.944,639,3.557,640,5.394,641,3.557,642,3.557,643,3.557,644,3.557,645,3.808,646,3.642,647,4.464,648,3.557,649,3.557,650,3.557,651,3.557,652,3.557,653,3.557,654,3.557,655,3.557,656,3.808,657,3.808,658,3.557,659,2.944,660,3.557,661,3.557,662,3.808,663,3.557,664,3.557,665,3.557,666,3.557,667,3.557,668,3.557,669,3.557,670,3.557,671,3.557,672,3.557,673,3.557,674,3.557,675,3.557,676,3.557,677,3.557,678,2.539,679,3.557,680,2.944,681,3.557,682,3.557,683,3.557]],["title/miscellaneous/enumerations.html",[684,1.306,685,3.064]],["body/miscellaneous/enumerations.html",[9,0.797,18,0.035,93,0.027,94,0.032,95,0.027,334,3.425,525,4.505,616,3.337,684,2.36,685,3.869,686,3.869,687,5.444,688,5.444]],["title/index.html",[9,0.441,689,2.14,690,2.14]],["body/index.html",[4,0.193,5,0.281,7,0.313,8,2.991,16,0.678,18,0.036,36,0.249,49,2.066,50,2.062,51,2.34,52,0.479,67,2.448,83,0.779,91,1.326,93,0.01,94,0.015,95,0.01,96,0.923,98,1.897,113,1.497,116,1.199,125,0.746,134,0.83,150,0.513,174,1.652,176,1.034,177,2.296,181,0.746,185,1.034,190,1.034,240,1.36,258,1.174,260,1.034,265,1.36,266,2.173,274,1.174,276,1.36,281,2.173,294,1.36,296,1.36,298,1.874,300,1.36,306,2.921,325,1.174,328,0.923,332,1.174,339,1.174,342,2.672,344,1.034,353,1.326,360,1.174,371,1.174,373,1.174,378,1.174,380,1.174,382,1.174,405,1.326,485,3.097,497,1.36,530,2.712,538,2.173,540,1.36,545,1.36,563,1.36,584,1.474,608,1.874,609,1.874,613,2.712,645,2.712,646,3.665,647,4.45,656,3.097,657,3.385,659,3.097,662,2.712,678,1.174,680,2.712,691,1.644,692,1.644,693,3.743,694,2.625,695,1.644,696,1.644,697,1.644,698,1.644,699,2.625,700,1.644,701,1.644,702,2.625,703,1.644,704,3.743,705,2.625,706,2.625,707,1.644,708,1.644,709,4.091,710,3.278,711,1.644,712,1.644,713,3.278,714,1.644,715,1.644,716,1.644,717,5.378,718,3.278,719,3.278,720,3.743,721,1.644,722,2.625,723,2.625,724,1.644,725,1.644,726,1.644,727,1.644,728,1.36,729,1.36,730,3.097,731,1.644,732,3.278,733,1.644,734,2.625,735,1.644,736,1.644,737,3.278,738,2.625,739,3.788,740,1.644,741,2.625,742,1.644,743,3.278,744,1.644,745,1.644,746,3.278,747,1.36,748,3.743,749,1.644,750,1.644,751,4.091,752,2.625,753,1.644,754,1.644,755,1.644,756,1.644,757,2.625,758,1.644,759,5.026,760,3.743,761,3.278,762,1.644,763,3.278,764,4.578,765,2.625,766,1.644,767,2.625,768,2.625,769,1.644,770,1.644,771,1.644,772,1.644,773,1.644,774,1.644,775,1.644,776,1.644,777,2.625,778,3.278,779,1.644,780,1.644,781,1.644,782,1.644,783,1.644,784,1.644,785,1.644,786,2.625,787,1.644,788,1.644,789,1.644,790,1.644,791,1.644,792,1.644,793,1.644,794,2.712,795,1.644,796,1.644,797,1.644,798,1.644,799,1.644,800,1.644,801,1.644,802,1.644,803,1.644,804,1.644,805,1.644,806,1.644,807,1.644,808,1.644,809,1.644,810,2.625,811,1.644,812,2.34,813,1.644,814,1.644,815,1.644,816,2.625,817,2.625,818,1.644,819,2.625,820,1.644,821,1.644,822,1.644,823,2.625,824,1.644,825,2.625,826,1.644,827,1.644,828,2.625,829,1.644,830,1.644,831,2.625,832,1.644,833,2.625,834,1.644,835,1.644,836,1.644,837,2.625,838,1.644,839,1.644,840,1.644,841,1.644,842,1.644,843,2.712,844,1.644,845,1.644,846,1.644,847,1.644,848,1.644,849,1.644,850,1.644,851,1.644,852,1.644,853,1.644,854,2.625,855,2.625,856,2.625,857,1.644,858,1.644,859,1.644,860,1.644,861,2.625,862,3.743,863,3.743,864,2.625,865,2.625,866,1.644,867,1.644,868,1.644,869,3.278,870,1.644,871,1.644,872,3.278,873,1.644,874,1.644,875,1.644,876,1.644,877,1.644,878,1.644,879,1.644,880,1.644,881,1.36,882,1.644,883,1.644,884,1.644,885,2.712,886,2.173,887,1.644,888,1.644,889,1.644,890,1.644,891,1.644,892,1.644,893,1.644,894,1.644,895,1.644,896,1.644,897,1.644,898,1.644,899,1.644,900,1.644,901,1.644,902,1.644,903,1.644,904,1.644,905,1.644,906,1.644,907,1.644,908,2.173,909,2.625,910,1.644,911,1.644,912,1.644,913,1.644,914,1.644,915,1.644,916,1.644,917,1.644,918,1.644,919,1.174,920,1.644]],["title/license.html",[689,2.14,690,2.14,919,1.846]],["body/license.html",[18,0.028,22,2.67,93,0.022,94,0.028,95,0.022,113,1.707,272,2.352,333,2.67,351,3.393,469,3.095,509,3.095,609,2.67,646,2.67,728,3.095,729,3.095,730,3.095,747,4.322,812,3.393,881,3.095,908,3.932,919,2.67,921,5.223,922,3.739,923,3.739,924,3.739,925,4.752,926,3.739,927,3.739,928,3.739,929,3.739,930,3.739,931,3.739,932,4.752,933,6.019,934,3.739,935,3.739,936,3.739,937,3.739,938,3.739,939,3.739,940,3.739,941,3.739,942,3.739,943,3.739,944,4.752,945,3.739,946,3.739,947,3.739,948,3.739,949,3.739,950,3.739,951,4.752,952,4.752,953,3.739,954,3.739,955,3.739,956,3.739,957,3.739,958,3.739,959,3.739,960,3.739,961,3.739,962,3.739,963,3.739,964,3.739,965,3.739,966,3.739,967,3.739,968,3.739,969,3.739,970,3.739,971,3.739,972,3.739,973,3.739,974,3.739,975,3.739,976,3.739]],["title/modules.html",[97,1.735]],["body/modules.html",[18,0.031,93,0.027,94,0.031,95,0.027,96,2.543,97,1.877,107,2.543,108,2.287,109,2.287,110,2.543,843,4.859,977,5.872,978,5.872,979,5.991,980,4.53,981,4.53]],["title/overview.html",[982,3.464]],["body/overview.html",[2,1.669,18,0.036,56,2.609,63,2.01,83,0.696,93,0.021,94,0.027,95,0.021,96,3.434,97,1.514,98,1.514,99,2.052,100,2.052,101,2.052,102,1.669,103,1.846,104,3.025,105,3.025,106,3.025,107,3.415,108,2.845,109,2.959,110,2.901,111,2.629,112,2.052,113,1.669,125,1.548,170,2.052,212,2.609,226,3.025,228,3.025,229,2.901,309,3.025,310,3.025,316,2.052,393,2.299,489,3.025,490,3.025,491,3.025,982,3.025,983,3.655,984,4.683,985,4.683]],["title/miscellaneous/typealiases.html",[684,1.306,986,3.703]],["body/miscellaneous/typealiases.html",[9,0.808,18,0.032,36,0.719,93,0.028,94,0.032,95,0.028,174,2.979,581,3.45,584,2.658,600,3.381,606,3.381,684,2.391,987,4.736,988,4.736]],["title/miscellaneous/variables.html",[328,2.079,684,1.306]],["body/miscellaneous/variables.html",[7,0.657,8,2.573,9,0.4,11,0.971,16,1.492,18,0.037,26,1.316,35,0.807,36,0.904,38,0.883,49,1.184,72,1.077,78,0.98,82,1.403,83,0.779,93,0.014,94,0.02,95,0.014,116,2.059,131,2.531,134,1.741,135,2.573,139,2.427,150,1.277,177,1.936,179,1.475,181,0.98,190,1.475,260,1.475,283,1.316,284,1.475,313,3.385,328,1.316,334,3.637,335,1.475,353,2.961,365,1.936,377,1.674,384,1.475,396,1.674,397,1.475,398,2.853,400,2.853,401,1.184,405,2.427,406,1.94,551,1.94,581,2.169,584,2.296,588,1.316,593,2.462,594,2.462,606,1.674,610,1.94,612,1.94,616,1.674,622,1.94,623,3.732,624,3.732,625,1.94,626,1.94,627,3.385,628,3.385,629,2.853,630,2.853,631,2.853,632,2.853,633,2.853,634,1.94,635,2.853,678,1.674,684,1.184,686,1.94,739,1.94,794,3.385,812,1.674,885,2.853,886,4.411,989,2.344,990,3.448,991,2.344,992,2.344,993,5.195,994,3.448,995,2.344,996,2.344,997,2.344,998,2.344,999,2.344,1000,2.344,1001,2.344,1002,2.344,1003,2.344,1004,2.344,1005,2.344,1006,4.806,1007,2.344,1008,2.344,1009,3.448,1010,3.448,1011,2.344,1012,2.344,1013,2.344,1014,3.448,1015,2.344,1016,2.344,1017,2.344,1018,2.344,1019,2.344,1020,2.344,1021,2.344,1022,2.344,1023,2.344,1024,2.344,1025,2.344,1026,2.344,1027,2.344,1028,2.344]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["0.1.13",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["0.10.1",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["0.2.19",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["1.0",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["1.19.2",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":613,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["14d",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["16.1.4",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["201",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["2018",{"_index":923,"title":{},"body":{"license.html":{}}}],["20m",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["2400",{"_index":801,"title":{},"body":{"index.html":{}}}],["3",{"_index":984,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["4",{"_index":985,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":802,"title":{},"body":{"index.html":{}}}],["400",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["401",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["404",{"_index":556,"title":{},"body":{"injectables/ProfileService.html":{}}}],["5",{"_index":983,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["5.7.1",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["8.1.0",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["8080",{"_index":883,"title":{},"body":{"index.html":{}}}],["9/9",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":769,"title":{},"body":{"index.html":{}}}],["_id",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{}}}],["above",{"_index":950,"title":{},"body":{"license.html":{}}}],["abstraction",{"_index":897,"title":{},"body":{"index.html":{}}}],["access",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ProfileController.html":{},"dependencies.html":{}}}],["accesscontrolmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["accesscontrolmodule.forroles(roles",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["account",{"_index":536,"title":{},"body":{"injectables/ProfileService.html":{}}}],["acguard",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["acguard)@useroles({resource",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["action",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{},"license.html":{}}}],["acts",{"_index":896,"title":{},"body":{"index.html":{}}}],["addbearerauth(swagger_api_auth_name",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":543,"title":{},"body":{"injectables/ProfileService.html":{}}}],["admin_delete_profiles",{"_index":688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["again",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["against",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["aliases",{"_index":987,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alphanumeric",{"_index":798,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":913,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":942,"title":{},"body":{"license.html":{}}}],["angular",{"_index":702,"title":{},"body":{"index.html":{}}}],["another",{"_index":539,"title":{},"body":{"injectables/ProfileService.html":{}}}],["any'})@apiresponse({status",{"_index":463,"title":{},"body":{"controllers/ProfileController.html":{}}}],["any'})@delete('/api/profile/:username')@apiresponse({status",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["api",{"_index":886,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api/auth",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/docs",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/profile",{"_index":460,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apibearerauth",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["apimodelproperty",{"_index":438,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["apimodelproperty()@isemail()@isnotempty",{"_index":447,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["apimodelproperty()@isnotempty()@minlength(8",{"_index":453,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["apimodelproperty()@matches(/^[a",{"_index":449,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["apimodelproperty({required",{"_index":432,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["apiresponse",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["apis",{"_index":890,"title":{},"body":{"index.html":{}}}],["apiusetags",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["apiusetags(\"authentication",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiusetags(\"profile",{"_index":479,"title":{},"body":{"controllers/ProfileController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["app.register(fastifyratelimiter",{"_index":830,"title":{},"body":{"index.html":{}}}],["app.register(headers",{"_index":829,"title":{},"body":{"index.html":{}}}],["app.roles",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app.use",{"_index":836,"title":{},"body":{"index.html":{}}}],["app.use(headers",{"_index":835,"title":{},"body":{"index.html":{}}}],["app/app.roles",{"_index":526,"title":{},"body":{"injectables/ProfileService.html":{}}}],["app_env",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["app_url",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":699,"title":{},"body":{"index.html":{}}}],["applied",{"_index":352,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["appmodule",{"_index":96,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["approles",{"_index":525,"title":{},"body":{"injectables/ProfileService.html":{},"miscellaneous/enumerations.html":{}}}],["approles.admin_delete_profiles",{"_index":557,"title":{},"body":{"injectables/ProfileService.html":{}}}],["appservice",{"_index":56,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appurl",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["args",{"_index":607,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["arising",{"_index":975,"title":{},"body":{"license.html":{}}}],["array",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":542,"title":{},"body":{"injectables/ProfileService.html":{}}}],["associated",{"_index":333,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":590,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["atlas",{"_index":726,"title":{},"body":{"index.html":{}}}],["auth.controller",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":186,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["authmodule",{"_index":107,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":920,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":966,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":212,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":541,"title":{},"body":{"injectables/ProfileService.html":{}}}],["available",{"_index":981,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["backend",{"_index":708,"title":{},"body":{"index.html":{}}}],["backers",{"_index":914,"title":{},"body":{"index.html":{}}}],["bad",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception",{"_index":476,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["base",{"_index":790,"title":{},"body":{"index.html":{}}}],["based",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["basis",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["being",{"_index":848,"title":{},"body":{"index.html":{}}}],["below",{"_index":743,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":809,"title":{},"body":{"index.html":{}}}],["between",{"_index":816,"title":{},"body":{"index.html":{}}}],["bloated",{"_index":846,"title":{},"body":{"index.html":{}}}],["body",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["boilerplate",{"_index":704,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":343,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["bootstrap",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["both",{"_index":738,"title":{},"body":{"index.html":{}}}],["box",{"_index":713,"title":{},"body":{"index.html":{}}}],["browse",{"_index":979,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":977,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":694,"title":{},"body":{"index.html":{}}}],["c",{"_index":922,"title":{},"body":{"license.html":{}}}],["callback",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["change",{"_index":815,"title":{},"body":{"index.html":{}}}],["changed",{"_index":811,"title":{},"body":{"index.html":{}}}],["charge",{"_index":929,"title":{},"body":{"license.html":{}}}],["check",{"_index":386,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["checks",{"_index":338,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["choose",{"_index":538,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["choosing",{"_index":806,"title":{},"body":{"index.html":{}}}],["claim",{"_index":969,"title":{},"body":{"license.html":{}}}],["class",{"_index":71,"title":{"classes/ConfigService.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":316,"title":{},"body":{"classes/ConfigService.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"overview.html":{}}}],["cloud",{"_index":724,"title":{},"body":{"index.html":{}}}],["cluster",{"_index":725,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":309,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":310,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":489,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":490,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_providers",{"_index":491,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["code",{"_index":819,"title":{},"body":{"index.html":{}}}],["collection",{"_index":804,"title":{},"body":{"index.html":{}}}],["comes",{"_index":709,"title":{},"body":{"index.html":{}}}],["command",{"_index":751,"title":{},"body":{"index.html":{}}}],["completed",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["completed'})@apiresponse({status",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["compose",{"_index":737,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":949,"title":{},"body":{"license.html":{}}}],["config",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["config.service",{"_index":312,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["config/config.service",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":108,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":125,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["configservice(\".env",{"_index":315,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get(\"db_url",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"webtoken_expiration_time",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get(\"webtoken_secret_key",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.isenv(\"dev",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.validateinput(config",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["configuration",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":906,"title":{},"body":{"index.html":{}}}],["configureopenapi",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conflict",{"_index":770,"title":{},"body":{"index.html":{}}}],["connection",{"_index":728,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":828,"title":{},"body":{"index.html":{}}}],["const",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["constructor(config",{"_index":173,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(configservice",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(filepath",{"_index":322,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["constructor(jwtservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":481,"title":{},"body":{"controllers/ProfileController.html":{}}}],["constructor(profilemodel",{"_index":500,"title":{},"body":{"injectables/ProfileService.html":{}}}],["contain",{"_index":326,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["container",{"_index":776,"title":{},"body":{"index.html":{}}}],["contract",{"_index":972,"title":{},"body":{"license.html":{}}}],["control",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ProfileController.html":{},"dependencies.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["controller(\"api/auth",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"api/profile",{"_index":480,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["copies",{"_index":944,"title":{},"body":{"license.html":{}}}],["copy",{"_index":932,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":921,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":608,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cp",{"_index":749,"title":{},"body":{"index.html":{}}}],["create",{"_index":497,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["create(payload",{"_index":504,"title":{},"body":{"injectables/ProfileService.html":{}}}],["created",{"_index":546,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createdprofile",{"_index":547,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createdprofile.save",{"_index":558,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createlogger(loggeropts",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["createtoken",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(undefined",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["createwinstonasyncproviders",{"_index":593,"title":{},"body":{"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwinstonasyncproviders(options",{"_index":598,"title":{},"body":{"modules/WinstonModule.html":{}}}],["createwinstonproviders",{"_index":594,"title":{},"body":{"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwinstonproviders(options",{"_index":597,"title":{},"body":{"modules/WinstonModule.html":{}}}],["crypto",{"_index":520,"title":{},"body":{"injectables/ProfileService.html":{},"dependencies.html":{}}}],["crypto.createhmac(\"sha256",{"_index":533,"title":{},"body":{"injectables/ProfileService.html":{}}}],["current",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currently",{"_index":537,"title":{},"body":{"injectables/ProfileService.html":{}}}],["d",{"_index":555,"title":{},"body":{"injectables/ProfileService.html":{}}}],["daily",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["damages",{"_index":970,"title":{},"body":{"license.html":{}}}],["data",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["databases",{"_index":900,"title":{},"body":{"index.html":{}}}],["date",{"_index":400,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["date%.log",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["date.now",{"_index":406,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["datepattern",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["db_url",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["dd",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":934,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":976,"title":{},"body":{"license.html":{}}}],["debug",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["declarations",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["declaring",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"classes/RegisterPayload.html":{}}}],["dedicated",{"_index":892,"title":{},"body":{"index.html":{}}}],["default",{"_index":353,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default(\"dev",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["default_read",{"_index":687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["defaultmeta",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["defined",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{}}}],["delete",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["delete(\"/api/profile/:username",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["delete(\":username",{"_index":488,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete(':username')@useguards(undefined",{"_index":462,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete(@param(\"username",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["delete(username",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["deleted",{"_index":569,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deletes",{"_index":508,"title":{},"body":{"injectables/ProfileService.html":{}}}],["demand",{"_index":874,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":98,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploying",{"_index":746,"title":{},"body":{"index.html":{}}}],["describe",{"_index":888,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":733,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":822,"title":{},"body":{"index.html":{}}}],["details",{"_index":903,"title":{},"body":{"index.html":{}}}],["determines",{"_index":788,"title":{},"body":{"index.html":{}}}],["dev",{"_index":789,"title":{},"body":{"index.html":{}}}],["development",{"_index":765,"title":{},"body":{"index.html":{}}}],["directory",{"_index":774,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":940,"title":{},"body":{"license.html":{}}}],["docker",{"_index":717,"title":{},"body":{"index.html":{}}}],["docs",{"_index":872,"title":{},"body":{"index.html":{}}}],["document",{"_index":398,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":609,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentbuilder",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["done",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dotenv",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["dto",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dynamicmodule",{"_index":585,"title":{},"body":{"modules/WinstonModule.html":{}}}],["e2e",{"_index":864,"title":{},"body":{"index.html":{}}}],["each",{"_index":545,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["edit",{"_index":474,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["edit(payload",{"_index":510,"title":{},"body":{"injectables/ProfileService.html":{}}}],["efficient",{"_index":695,"title":{},"body":{"index.html":{}}}],["email",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["encrypt/decrypt",{"_index":795,"title":{},"body":{"index.html":{}}}],["end",{"_index":880,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ensures",{"_index":347,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["enumerations",{"_index":685,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":342,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["env.example",{"_index":750,"title":{},"body":{"index.html":{}}}],["envconfig",{"_index":318,"title":{"interfaces/EnvConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["environment",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["envvarsschema",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["envvarsschema.validate",{"_index":388,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error(`config",{"_index":389,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error.message",{"_index":390,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["especially",{"_index":847,"title":{},"body":{"index.html":{}}}],["event",{"_index":965,"title":{},"body":{"license.html":{}}}],["exec",{"_index":530,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["execute",{"_index":773,"title":{},"body":{"index.html":{}}}],["executing",{"_index":787,"title":{},"body":{"index.html":{}}}],["exist",{"_index":562,"title":{},"body":{"injectables/ProfileService.html":{}}}],["existing",{"_index":753,"title":{},"body":{"index.html":{}}}],["exists",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["exp",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["expire",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["expires",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["expiresprettyprint",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["exports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"overview.html":{}}}],["exposed",{"_index":767,"title":{},"body":{"index.html":{}}}],["express",{"_index":646,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["extends",{"_index":399,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["extractjwt",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factory",{"_index":603,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["failed",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["fastify",{"_index":647,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fastifyadapter",{"_index":823,"title":{},"body":{"index.html":{}}}],["fastifyratelimiter",{"_index":826,"title":{},"body":{"index.html":{}}}],["features",{"_index":712,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":467,"title":{},"body":{"controllers/ProfileController.html":{}}}],["fetches",{"_index":331,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{}}}],["field",{"_index":435,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["filename",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["filepath",{"_index":324,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["files",{"_index":881,"title":{},"body":{"index.html":{},"license.html":{}}}],["findone",{"_index":532,"title":{},"body":{"injectables/ProfileService.html":{}}}],["fitness",{"_index":962,"title":{},"body":{"license.html":{}}}],["folder",{"_index":878,"title":{},"body":{"index.html":{}}}],["follow",{"_index":740,"title":{},"body":{"index.html":{}}}],["following",{"_index":730,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["formats",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["forroot",{"_index":579,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forroot(options",{"_index":580,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forrootasync",{"_index":586,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forrootasync(options",{"_index":587,"title":{},"body":{"modules/WinstonModule.html":{}}}],["found",{"_index":485,"title":{},"body":{"controllers/ProfileController.html":{},"index.html":{}}}],["framework",{"_index":693,"title":{},"body":{"index.html":{}}}],["free",{"_index":928,"title":{},"body":{"license.html":{}}}],["front",{"_index":879,"title":{},"body":{"index.html":{}}}],["fs",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["function",{"_index":602,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["furnished",{"_index":947,"title":{},"body":{"license.html":{}}}],["further",{"_index":902,"title":{},"body":{"index.html":{}}}],["generate",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["generated",{"_index":873,"title":{},"body":{"index.html":{}}}],["get(\"/api/profile",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\":username",{"_index":482,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/api/profile')@useguards(undefined)@apiresponse({status",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':username')@useguards(undefined)@apiresponse({status",{"_index":466,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get()@useguards(undefined)@apiresponse({status",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["get(id",{"_index":512,"title":{},"body":{"injectables/ProfileService.html":{}}}],["get(key",{"_index":329,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["getbyusername",{"_index":498,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusername(username",{"_index":515,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusernameandpass",{"_index":499,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusernameandpass(username",{"_index":517,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["getprofile(@param(\"username",{"_index":483,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(username",{"_index":465,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getstring",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":689,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":870,"title":{},"body":{"index.html":{}}}],["given",{"_index":335,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"controllers/ProfileController.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":591,"title":{},"body":{"modules/WinstonModule.html":{}}}],["grab",{"_index":727,"title":{},"body":{"index.html":{}}}],["granted",{"_index":927,"title":{},"body":{"license.html":{}}}],["graph",{"_index":980,"title":{},"body":{"modules.html":{}}}],["gravatar",{"_index":404,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["gravatar.url(payload.email",{"_index":549,"title":{},"body":{"injectables/ProfileService.html":{}}}],["grow",{"_index":910,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["hashed",{"_index":519,"title":{},"body":{"injectables/ProfileService.html":{}}}],["header",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":825,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":700,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":659,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["here",{"_index":918,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":926,"title":{},"body":{"license.html":{}}}],["holders",{"_index":967,"title":{},"body":{"license.html":{}}}],["hosting",{"_index":882,"title":{},"body":{"index.html":{}}}],["hour",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["hours",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["http",{"_index":551,"title":{},"body":{"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:27017",{"_index":783,"title":{},"body":{"index.html":{}}}],["http://localhost:9000",{"_index":782,"title":{},"body":{"index.html":{}}}],["https",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["iat",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":514,"title":{},"body":{"injectables/ProfileService.html":{}}}],["identifier",{"_index":610,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["images",{"_index":779,"title":{},"body":{"index.html":{}}}],["implied",{"_index":958,"title":{},"body":{"license.html":{}}}],["import",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{}}}],["imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{}}}],["included",{"_index":953,"title":{},"body":{"license.html":{}}}],["including",{"_index":351,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":394,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["indicating",{"_index":799,"title":{},"body":{"index.html":{}}}],["inestapplication",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["information",{"_index":475,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["inject",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inject(\"winston",{"_index":180,"title":{},"body":{"injectables/AppService.html":{}}}],["injectable",{"_index":169,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["injectables",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["injected",{"_index":327,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["injecting",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectmodel",{"_index":521,"title":{},"body":{"injectables/ProfileService.html":{}}}],["injectmodel(\"profile",{"_index":527,"title":{},"body":{"injectables/ProfileService.html":{}}}],["inspired",{"_index":701,"title":{},"body":{"index.html":{}}}],["install",{"_index":758,"title":{},"body":{"index.html":{}}}],["instead",{"_index":813,"title":{},"body":{"index.html":{}}}],["interface",{"_index":361,"title":{"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":393,"title":{},"body":{"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":522,"title":{},"body":{"injectables/ProfileService.html":{}}}],["ip",{"_index":838,"title":{},"body":{"index.html":{}}}],["iprofile",{"_index":256,"title":{"interfaces/IProfile.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["isalphanumeric",{"_index":439,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["isemail",{"_index":456,"title":{},"body":{"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["isenv",{"_index":319,"title":{},"body":{"classes/ConfigService.html":{}}}],["isenv(env",{"_index":336,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["isnotempty",{"_index":440,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["it's",{"_index":800,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":350,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.number().default(1800",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.object",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.objectschema",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().regex(/^mongodb",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().required",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().uri",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["join",{"_index":916,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":229,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":332,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["kind",{"_index":957,"title":{},"body":{"license.html":{}}}],["layer",{"_index":898,"title":{},"body":{"index.html":{}}}],["leave",{"_index":845,"title":{},"body":{"index.html":{}}}],["legend",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["level",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":971,"title":{},"body":{"license.html":{}}}],["liable",{"_index":968,"title":{},"body":{"license.html":{}}}],["license",{"_index":919,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":909,"title":{},"body":{"index.html":{}}}],["limit",{"_index":657,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["limitation",{"_index":936,"title":{},"body":{"license.html":{}}}],["limited",{"_index":959,"title":{},"body":{"license.html":{}}}],["line",{"_index":731,"title":{},"body":{"index.html":{}}}],["lines",{"_index":818,"title":{},"body":{"index.html":{}}}],["loads",{"_index":775,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":757,"title":{},"body":{"index.html":{}}}],["locally",{"_index":721,"title":{},"body":{"index.html":{}}}],["location",{"_index":894,"title":{},"body":{"index.html":{}}}],["logger",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loggeroptions",{"_index":606,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loggeropts",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":710,"title":{},"body":{"index.html":{}}}],["login",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginPayload.html":{}}}],["login(@body",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginpayload",{"_index":194,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginPayload.html":{},"coverage.html":{}}}],["logs",{"_index":905,"title":{},"body":{"index.html":{}}}],["logs/application",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["logs/error.log",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["made",{"_index":705,"title":{},"body":{"index.html":{}}}],["main",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["main.ts",{"_index":820,"title":{},"body":{"index.html":{}}}],["mainly",{"_index":791,"title":{},"body":{"index.html":{}}}],["make",{"_index":718,"title":{},"body":{"index.html":{}}}],["manually",{"_index":745,"title":{},"body":{"index.html":{}}}],["mapping",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["matches",{"_index":340,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["matches(/^[a",{"_index":457,"title":{},"body":{"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["matching",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor((ntime",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["math.floor(ntime",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["max",{"_index":831,"title":{},"body":{"index.html":{}}}],["maxfiles",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["maxsize",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["merchantability",{"_index":961,"title":{},"body":{"license.html":{}}}],["merge",{"_index":938,"title":{},"body":{"license.html":{}}}],["message",{"_index":568,"title":{},"body":{"injectables/ProfileService.html":{}}}],["meta",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["minlength",{"_index":441,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["minlength(8",{"_index":443,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["mins",{"_index":803,"title":{},"body":{"index.html":{}}}],["minute",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["minutes",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["miscellaneous",{"_index":684,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":908,"title":{},"body":{"index.html":{},"license.html":{}}}],["mm",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":501,"title":{},"body":{"injectables/ProfileService.html":{}}}],["modify",{"_index":729,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":83,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulemetadata",{"_index":604,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["modules",{"_index":97,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/payload/register.payload",{"_index":524,"title":{},"body":{"injectables/ProfileService.html":{}}}],["mongo",{"_index":723,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":720,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":397,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{}}}],["mongoosemodule.forfeature",{"_index":495,"title":{},"body":{"modules/ProfileModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleasyncoptions",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":917,"title":{},"body":{"index.html":{}}}],["moved",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["moving",{"_index":844,"title":{},"body":{"index.html":{}}}],["msanvarov",{"_index":924,"title":{},"body":{"license.html":{}}}],["name",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":348,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["nest",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ProfileController.html":{},"dependencies.html":{},"index.html":{}}}],["nestfactory.create",{"_index":827,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":834,"title":{},"body":{"index.html":{}}}],["nestfastifyapplication",{"_index":824,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":605,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["nestjs/core",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":645,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/swagger",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"classes/RegisterPayload.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":692,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":716,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":964,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":523,"title":{},"body":{"injectables/ProfileService.html":{}}}],["note",{"_index":841,"title":{},"body":{"index.html":{}}}],["notice",{"_index":951,"title":{},"body":{"license.html":{}}}],["npm",{"_index":759,"title":{},"body":{"index.html":{}}}],["ntime",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["number(time",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":325,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["obtaining",{"_index":931,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":853,"title":{},"body":{"index.html":{}}}],["offers",{"_index":807,"title":{},"body":{"index.html":{}}}],["one",{"_index":540,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["ones",{"_index":821,"title":{},"body":{"index.html":{}}}],["open",{"_index":885,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["operating",{"_index":736,"title":{},"body":{"index.html":{}}}],["operations",{"_index":899,"title":{},"body":{"index.html":{}}}],["optional",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["options",{"_index":584,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.imports",{"_index":599,"title":{},"body":{"modules/WinstonModule.html":{}}}],["options.inject",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.usefactory",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otherwise",{"_index":974,"title":{},"body":{"license.html":{}}}],["out",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlined",{"_index":742,"title":{},"body":{"index.html":{}}}],["over",{"_index":810,"title":{},"body":{"index.html":{}}}],["overview",{"_index":982,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":638,"title":{"dependencies.html":{}},"body":{}}],["package.jsoncomes",{"_index":842,"title":{},"body":{"index.html":{}}}],["pages",{"_index":871,"title":{},"body":{"index.html":{}}}],["param",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["parameter",{"_index":341,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["param{req",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["parse",{"_index":355,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["parse(fs.readfilesync(filepath",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["particular",{"_index":469,"title":{},"body":{"controllers/ProfileController.html":{},"license.html":{}}}],["passport",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["passportmodule.register",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["passportstrategy",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":401,"title":{},"body":{"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["password).digest(\"hex",{"_index":534,"title":{},"body":{"injectables/ProfileService.html":{}}}],["patch",{"_index":446,"title":{},"body":{"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{}}}],["patch()@useguards(undefined)@useroles({resource",{"_index":471,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patchprofile",{"_index":461,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patchprofile(@body",{"_index":486,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patchprofile(payload",{"_index":470,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patchprofilepayload",{"_index":444,"title":{"classes/PatchProfilePayload.html":{}},"body":{"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["paylaod",{"_index":431,"title":{},"body":{"classes/LoginPayload.html":{}}}],["payload",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{}}}],["payload.password",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.password).digest(\"hex",{"_index":548,"title":{},"body":{"injectables/ProfileService.html":{}}}],["payload.username",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload/login.payload",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["payload/patch.profile.payload",{"_index":478,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["payload/register.payload",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["per",{"_index":840,"title":{},"body":{"index.html":{}}}],["performance",{"_index":808,"title":{},"body":{"index.html":{}}}],["permission",{"_index":925,"title":{},"body":{"license.html":{}}}],["permit",{"_index":945,"title":{},"body":{"license.html":{}}}],["person",{"_index":930,"title":{},"body":{"license.html":{}}}],["personal",{"_index":754,"title":{},"body":{"index.html":{}}}],["persons",{"_index":946,"title":{},"body":{"license.html":{}}}],["pg",{"_index":554,"title":{},"body":{"injectables/ProfileService.html":{}}}],["pick",{"_index":601,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["please",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["port",{"_index":768,"title":{},"body":{"index.html":{}}}],["portions",{"_index":955,"title":{},"body":{"license.html":{}}}],["possession",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["post",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apiresponse({status",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiresponse({status",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["pre",{"_index":762,"title":{},"body":{"index.html":{}}}],["preferred",{"_index":735,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["prerequisites",{"_index":715,"title":{},"body":{"index.html":{}}}],["prettyprintseconds",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["prettyprintseconds(time",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["private",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["proceed",{"_index":814,"title":{},"body":{"index.html":{}}}],["prod",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["produce",{"_index":877,"title":{},"body":{"index.html":{}}}],["production",{"_index":763,"title":{},"body":{"index.html":{}}}],["profile",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profile.controller",{"_index":494,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.deletedcount",{"_index":567,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile.model",{"_index":493,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["profile.service",{"_index":477,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.model",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile/profile.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["profile/profile.service",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["profilecontroller",{"_index":458,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodel",{"_index":503,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profilemodule",{"_index":109,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profiles",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["profileservice",{"_index":63,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":691,"title":{},"body":{"index.html":{}}}],["project",{"_index":778,"title":{},"body":{"index.html":{}}}],["promise",{"_index":506,"title":{},"body":{"injectables/ProfileService.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["properties",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["protocol",{"_index":550,"title":{},"body":{"injectables/ProfileService.html":{}}}],["prototype",{"_index":707,"title":{},"body":{"index.html":{}}}],["provide",{"_index":313,"title":{},"body":{"modules/ConfigModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":509,"title":{},"body":{"injectables/ProfileService.html":{},"license.html":{}}}],["provider",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"overview.html":{}}}],["provides",{"_index":891,"title":{},"body":{"index.html":{}}}],["public",{"_index":596,"title":{},"body":{"modules/WinstonModule.html":{}}}],["publish",{"_index":939,"title":{},"body":{"license.html":{}}}],["purge",{"_index":854,"title":{},"body":{"index.html":{}}}],["purger",{"_index":851,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":963,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":706,"title":{},"body":{"index.html":{}}}],["r",{"_index":553,"title":{},"body":{"injectables/ProfileService.html":{}}}],["random",{"_index":797,"title":{},"body":{"index.html":{}}}],["rate",{"_index":656,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ratelimiter",{"_index":833,"title":{},"body":{"index.html":{}}}],["react",{"_index":771,"title":{},"body":{"index.html":{}}}],["read",{"_index":786,"title":{},"body":{"index.html":{}}}],["readable",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["received",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["received'})@apiresponse({status",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["recommended",{"_index":850,"title":{},"body":{"index.html":{}}}],["records",{"_index":570,"title":{},"body":{"injectables/ProfileService.html":{}}}],["reflect",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterPayload.html":{}}}],["register(@body",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerpayload",{"_index":206,"title":{"classes/RegisterPayload.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"coverage.html":{}}}],["registration",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["relational",{"_index":895,"title":{},"body":{"index.html":{}}}],["remove",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["removed",{"_index":793,"title":{},"body":{"index.html":{}}}],["removing",{"_index":855,"title":{},"body":{"index.html":{}}}],["replace",{"_index":752,"title":{},"body":{"index.html":{}}}],["represents",{"_index":384,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["req",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"miscellaneous/variables.html":{}}}],["request'})@apiresponse({status",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":839,"title":{},"body":{"index.html":{}}}],["required",{"_index":405,"title":{},"body":{"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["resolve",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["resource",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["respectively",{"_index":784,"title":{},"body":{"index.html":{}}}],["restful",{"_index":889,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":935,"title":{},"body":{"license.html":{}}}],["result",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["rights",{"_index":937,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["rm",{"_index":856,"title":{},"body":{"index.html":{}}}],["role",{"_index":544,"title":{},"body":{"injectables/ProfileService.html":{}}}],["roles",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesbuilder",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":172,"title":{},"body":{"injectables/AppService.html":{}}}],["rotate",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["rotatefile",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["routes",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":764,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":552,"title":{},"body":{"injectables/ProfileService.html":{}}}],["save",{"_index":859,"title":{},"body":{"index.html":{}}}],["saveif",{"_index":858,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":696,"title":{},"body":{"index.html":{}}}],["schema",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"modules/ProfileModule.html":{},"miscellaneous/variables.html":{}}}],["schema.types.objectid",{"_index":402,"title":{},"body":{"interfaces/IProfile.html":{}}}],["scheme",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["schemes",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["seconds",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["secret",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["secretorkey",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":711,"title":{},"body":{"index.html":{}}}],["sell",{"_index":943,"title":{},"body":{"license.html":{}}}],["server",{"_index":697,"title":{},"body":{"index.html":{}}}],["service",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{}}}],["set",{"_index":339,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["setdescription(swagger_api_description",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setschemes(...swagger_api_schemes",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":755,"title":{},"body":{"index.html":{}}}],["settitle(swagger_api_name",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":734,"title":{},"body":{"index.html":{}}}],["setversion(swagger_api_current_version",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":952,"title":{},"body":{"license.html":{}}}],["short",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showcase",{"_index":792,"title":{},"body":{"index.html":{}}}],["side",{"_index":698,"title":{},"body":{"index.html":{}}}],["signed",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["simply",{"_index":875,"title":{},"body":{"index.html":{}}}],["software",{"_index":933,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{}}}],["specification",{"_index":887,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":912,"title":{},"body":{"index.html":{}}}],["src/.../app.roles.ts",{"_index":686,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.hmr.ts",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profile.model.ts",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston.constants.ts",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston.interfaces.ts",{"_index":988,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../winston.providers.ts",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.hmr.ts",{"_index":612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/modules/app/app.controller.ts:32",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.controller.ts:46",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.controller.ts:63",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.module.ts",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/app/app.roles.ts",{"_index":616,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/modules/app/app.service.ts",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/app/app.service.ts:24",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/app/app.service.ts:9",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:32",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:45",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:17",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:37",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:49",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:64",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:12",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:33",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/payload/login.payload.ts",{"_index":430,"title":{},"body":{"classes/LoginPayload.html":{},"coverage.html":{}}}],["src/modules/auth/payload/login.payload.ts:16",{"_index":437,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/payload/login.payload.ts:26",{"_index":434,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts",{"_index":571,"title":{},"body":{"classes/RegisterPayload.html":{},"coverage.html":{}}}],["src/modules/auth/payload/register.payload.ts:22",{"_index":573,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:32",{"_index":577,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:42",{"_index":575,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:52",{"_index":576,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/config/config.module.ts",{"_index":311,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/modules/config/config.service.ts",{"_index":317,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["src/modules/config/config.service.ts:19",{"_index":323,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:34",{"_index":346,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:68",{"_index":330,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:77",{"_index":337,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:8",{"_index":395,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts",{"_index":445,"title":{},"body":{"classes/PatchProfilePayload.html":{},"coverage.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts:20",{"_index":448,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts:30",{"_index":455,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts:38",{"_index":452,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts:46",{"_index":454,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["src/modules/profile/profile.controller.ts",{"_index":459,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/modules/profile/profile.controller.ts:38",{"_index":468,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:61",{"_index":473,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:78",{"_index":464,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.model.ts",{"_index":396,"title":{},"body":{"interfaces/IProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/profile/profile.module.ts",{"_index":492,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/modules/profile/profile.service.ts",{"_index":496,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/modules/profile/profile.service.ts:108",{"_index":507,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:20",{"_index":502,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:33",{"_index":513,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:41",{"_index":516,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:50",{"_index":518,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:63",{"_index":505,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:90",{"_index":511,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/winston/winston.constants.ts",{"_index":622,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/winston/winston.interfaces.ts",{"_index":600,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/winston/winston.module.ts",{"_index":578,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.module.ts:21",{"_index":582,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.module.ts:35",{"_index":589,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.providers.ts",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/constants.ts",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/index.ts",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv",{"_index":756,"title":{},"body":{"index.html":{}}}],["stack",{"_index":781,"title":{},"body":{"index.html":{}}}],["start",{"_index":761,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":766,"title":{},"body":{"index.html":{}}}],["started",{"_index":690,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":780,"title":{},"body":{"index.html":{}}}],["statements",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":320,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"modules/WinstonModule.html":{}}}],["status",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"controllers/ProfileController.html":{}}}],["steps",{"_index":741,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":948,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":941,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":954,"title":{},"body":{"license.html":{}}}],["super",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":843,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":719,"title":{},"body":{"index.html":{}}}],["svg",{"_index":978,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":662,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swagger_api_auth_location",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_auth_name",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_current_version",{"_index":629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_description",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_name",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_root",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_schemes",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(swagger_api_root",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":563,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["table",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":863,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":867,"title":{},"body":{"index.html":{}}}],["test:covnon",{"_index":866,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":865,"title":{},"body":{"index.html":{}}}],["testing",{"_index":860,"title":{},"body":{"index.html":{}}}],["tests",{"_index":862,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":911,"title":{},"body":{"index.html":{}}}],["then(profile",{"_index":566,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.appservice.root",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.createtoken(user",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get(\"app_url",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["this.configservice.get(\"webtoken_expiration_time",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.envconfig",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.envconfig.app_env",{"_index":392,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.envconfig[key",{"_index":391,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.expiration",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbyusername(payload.username",{"_index":535,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.getbyusername(username",{"_index":564,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.jwtservice.sign",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.info(\"logging",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["this.prettyprintseconds(this.expiration",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.profilemodel",{"_index":531,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.deleteone",{"_index":565,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.findbyid(id).exec",{"_index":528,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.findone",{"_index":529,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.updateone",{"_index":560,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profileservice.create(payload",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.profileservice.delete(username",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["this.profileservice.edit(payload",{"_index":487,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getbyusername(username",{"_index":484,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getbyusernameandpass",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["thus",{"_index":849,"title":{},"body":{"index.html":{}}}],["time",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["timediff",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["timewindow",{"_index":832,"title":{},"body":{"index.html":{}}}],["token",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":796,"title":{},"body":{"index.html":{}}}],["tort",{"_index":973,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["true})@isalphanumeric()@isnotempty",{"_index":436,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@isemail()@isnotempty",{"_index":572,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["true})@isnotempty()@minlength(8",{"_index":433,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@matches(/^[a",{"_index":574,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["try",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["two",{"_index":817,"title":{},"body":{"index.html":{}}}],["type",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":986,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedocs",{"_index":869,"title":{},"body":{"index.html":{}}}],["typeorm",{"_index":680,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["types",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/express",{"_index":857,"title":{},"body":{"index.html":{}}}],["typing",{"_index":876,"title":{},"body":{"index.html":{}}}],["ui",{"_index":678,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unit",{"_index":861,"title":{},"body":{"index.html":{}}}],["unused",{"_index":852,"title":{},"body":{"index.html":{}}}],["up",{"_index":777,"title":{},"body":{"index.html":{}}}],["update",{"_index":472,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["updatedprofile",{"_index":559,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatedprofile.nmodified",{"_index":561,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uri",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["use",{"_index":812,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":794,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["useguards(authguard",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["useguards(undefined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["usenewurlparser",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["username",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["useroles",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["useunifiedtopology",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":314,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":748,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":722,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":403,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/ProfileService.html":{}}}],["valid",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["valid(\"dev",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validate",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["validate(undefined",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":349,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validatedenvconfig",{"_index":387,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validateinput",{"_index":321,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput(envconfig",{"_index":345,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validates",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(payload",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":385,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["validator",{"_index":442,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"dependencies.html":{}}}],["value",{"_index":334,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":354,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["variable",{"_index":344,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{},"index.html":{}}}],["variables",{"_index":328,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":901,"title":{},"body":{"index.html":{}}}],["vue",{"_index":772,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":960,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":956,"title":{},"body":{"license.html":{}}}],["web",{"_index":739,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpack",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webtoken_expiration_time",{"_index":380,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["webtoken_secret_key",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["whether",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["windowms",{"_index":837,"title":{},"body":{"index.html":{}}}],["winson",{"_index":583,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["winston.format.json",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.simple",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.interfaces",{"_index":592,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston.providers",{"_index":595,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston.transports.console",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["winston/winston.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_options",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["winston_module_provider",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmodule",{"_index":110,"title":{"modules/WinstonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["winstonmodule.forrootasync",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmoduleasyncoptions",{"_index":588,"title":{"interfaces/WinstonModuleAsyncOptions.html":{}},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmoduleoptions",{"_index":581,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":747,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":893,"title":{},"body":{"index.html":{}}}],["x1f3d7",{"_index":805,"title":{},"body":{"index.html":{}}}],["x1f433",{"_index":732,"title":{},"body":{"index.html":{}}}],["x1f465",{"_index":907,"title":{},"body":{"index.html":{}}}],["x1f4a1",{"_index":868,"title":{},"body":{"index.html":{}}}],["x1f4da",{"_index":703,"title":{},"body":{"index.html":{}}}],["x1f4dd",{"_index":884,"title":{},"body":{"index.html":{}}}],["x1f50a",{"_index":904,"title":{},"body":{"index.html":{}}}],["x1f512",{"_index":785,"title":{},"body":{"index.html":{}}}],["x1f680",{"_index":744,"title":{},"body":{"index.html":{}}}],["x1f6e0",{"_index":714,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":760,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":915,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["z",{"_index":451,"title":{},"body":{"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["za",{"_index":450,"title":{},"body":{"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["zippedarchive",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                App Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                getProfile\n                            \n                            \n                                getString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, ACGuard)@UseRoles({resource: 'profiles', action: 'delete', possession: 'any'})@Delete('/api/profile/:username')@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:63\n                \n            \n\n\n            \n                \n                    Delete route to remove profiles from app\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the username to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/api/profile')@UseGuards(undefined)@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:46\n                \n            \n\n\n            \n                \n                    Debug route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request body\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getString\n                        \n                        \n                    \n                \n            \n            \n                \ngetString()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:32\n                \n            \n\n\n            \n                \n                    Main route\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the application environment url\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, Req, UseGuards } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\nimport { ApiBearerAuth, ApiResponse } from \"@nestjs/swagger\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { ProfileService } from \"../profile/profile.service\";\nimport { ACGuard, UseRoles } from \"nest-access-control\";\n\n/**\n * App Controller\n */\n@Controller()\n@ApiBearerAuth()\nexport class AppController {\n  /**\n   * Constructor\n   * @param appService\n   * @param profileService\n   */\n  constructor(\n    private readonly appService: AppService,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  /**\n   * Main route\n   * @returns {string} the application environment url\n   */\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  getString(): string {\n    return this.appService.root();\n  }\n\n  // These routes can be moved to the profile module.\n\n  /**\n   * Debug route\n   * @param{Req} req the request body\n   */\n  @Get(\"/api/profile\")\n  @UseGuards(AuthGuard())\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  getProfile(@Req() req) {\n    return req.user;\n  }\n\n  /**\n   * Delete route to remove profiles from app\n   * @param {string} username the username to remove\n   */\n  @UseGuards(AuthGuard(), ACGuard)\n  @UseRoles({\n    resource: \"profiles\",\n    action: \"delete\",\n    possession: \"any\",\n  })\n  @Delete(\"/api/profile/:username\")\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  async delete(@Param(\"username\") username: string) {\n    return await this.profileService.delete(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            WinstonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as winston from \"winston\";\nimport * as rotateFile from \"winston-daily-rotate-file\";\nimport { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { MongooseModule, MongooseModuleAsyncOptions } from \"@nestjs/mongoose\";\nimport { ConfigModule } from \"../config/config.module\";\nimport { ConfigService } from \"../config/config.service\";\nimport { AuthModule } from \"../auth/auth.module\";\nimport { ProfileModule } from \"../profile/profile.module\";\nimport { WinstonModule } from \"../winston/winston.module\";\nimport { AccessControlModule } from \"nest-access-control\";\nimport { roles } from \"./app.roles\";\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) =>\n        ({\n          uri: configService.get(\"DB_URL\"),\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n        } as MongooseModuleAsyncOptions),\n    }),\n    WinstonModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return configService.isEnv(\"dev\")\n          ? {\n              level: \"info\",\n              format: winston.format.json(),\n              defaultMeta: { service: \"user-service\" },\n              transports: [\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n              ],\n            }\n          : {\n              level: \"info\",\n              format: winston.format.json(),\n              defaultMeta: { service: \"user-service\" },\n              transports: [\n                new winston.transports.File({\n                  filename: \"logs/error.log\",\n                  level: \"error\",\n                }),\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n                new rotateFile({\n                  filename: \"logs/application-%DATE%.log\",\n                  datePattern: \"YYYY-MM-DD\",\n                  zippedArchive: true,\n                  maxSize: \"20m\",\n                  maxFiles: \"14d\",\n                }),\n              ],\n            };\n      },\n    }),\n    AccessControlModule.forRoles(roles),\n    ConfigModule,\n    AuthModule,\n    ProfileModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Application Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/modules/app/app.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration service\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                logger service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/app/app.service.ts:24\n                \n            \n\n\n            \n                \n                    Main application method\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the application url\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigService } from \"../config/config.service\";\nimport { Logger } from \"winston\";\n\n/**\n * Application Service\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Constructor\n   * @param {ConfigService} config configuration service\n   * @param {Logger} logger logger service\n   */\n  constructor(\n    private config: ConfigService,\n    @Inject(\"winston\") private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Main application method\n   * @returns {string} the application url\n   */\n  root(): string {\n    const appURL = this.config.get(\"APP_URL\");\n    this.logger.info(\"Logging the APP_URL -> \" + appURL);\n    return appURL;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n            \n                Description\n            \n            \n                Authentication Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: LoginPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiResponse({status: 201, description: 'Login Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n                    Authentication route to login\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the login dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiResponse({status: 201, description: 'Registration Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:45\n                \n            \n\n\n            \n                \n                    Authentication route to register\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the registration dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Body, Post } from \"@nestjs/common\";\nimport { ApiResponse, ApiUseTags } from \"@nestjs/swagger\";\nimport { AuthService } from \"./auth.service\";\nimport { LoginPayload } from \"./payload/login.payload\";\nimport { RegisterPayload } from \"./payload/register.payload\";\nimport { ProfileService } from \"../profile/profile.service\";\n\n/**\n * Authentication Controller\n */\n@Controller(\"api/auth\")\n@ApiUseTags(\"authentication\")\nexport class AuthController {\n  /**\n   * Constructor\n   * @param {AuthService} authService authentication service\n   * @param {ProfileService} profileService profile service\n   */\n  constructor(\n    private readonly authService: AuthService,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  /**\n   * Authentication route to login\n   * @param {LoginPayload} payload the login dto\n   */\n  @Post(\"login\")\n  @ApiResponse({ status: 201, description: \"Login Completed\" })\n  @ApiResponse({ status: 400, description: \"Bad Request\" })\n  @ApiResponse({ status: 401, description: \"Unauthorized\" })\n  async login(@Body() payload: LoginPayload) {\n    const user = await this.authService.validateUser(payload);\n    return await this.authService.createToken(user);\n  }\n\n  /**\n   * Authentication route to register\n   * @param {RegisterPayload} payload the registration dto\n   */\n  @Post(\"register\")\n  @ApiResponse({ status: 201, description: \"Registration Completed\" })\n  @ApiResponse({ status: 400, description: \"Bad Request\" })\n  @ApiResponse({ status: 401, description: \"Unauthorized\" })\n  async register(@Body() payload: RegisterPayload) {\n    const user = await this.profileService.create(payload);\n    return await this.authService.createToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            ProfileModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { ConfigModule } from \"../config/config.module\";\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileModule } from \"../profile/profile.module\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtStrategy } from \"./jwt.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [\n    ProfileModule,\n    ConfigModule,\n    PassportModule.register({ defaultStrategy: \"jwt\" }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get(\"WEBTOKEN_SECRET_KEY\"),\n          signOptions: {\n            ...(configService.get(\"WEBTOKEN_EXPIRATION_TIME\")\n              ? {\n                  expiresIn: Number(\n                    configService.get(\"WEBTOKEN_EXPIRATION_TIME\"),\n                  ),\n                }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule.register({ defaultStrategy: \"jwt\" })],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Authentication Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                expiration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Private\n                                prettyPrintSeconds\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                jwt service\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                profile service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(undefined: IProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:37\n                \n            \n\n\n            \n                \n                    Creates a signed jwt token based on payload\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            prettyPrintSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    prettyPrintSeconds(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:49\n                \n            \n\n\n            \n                \n                    Formats the time in seconds into human-readable format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(payload: LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:64\n                \n            \n\n\n            \n                \n                    Validates whether or not the profile exists in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        login payload to authenticate with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                        Time in seconds when the token is to expire\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileService } from \"../profile/profile.service\";\nimport { IProfile } from \"../profile/profile.model\";\nimport { LoginPayload } from \"./payload/login.payload\";\n\n/**\n * Authentication Service\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Time in seconds when the token is to expire\n   * @type {string}\n   */\n  private readonly expiration: string;\n\n  /**\n   * Constructor\n   * @param {JwtService} jwtService jwt service\n   * @param {ConfigService} configService\n   * @param {ProfileService} profileService profile service\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly profileService: ProfileService,\n  ) {\n    this.expiration = this.configService.get(\"WEBTOKEN_EXPIRATION_TIME\");\n  }\n\n  /**\n   * Creates a signed jwt token based on payload\n   * @param {Profile} param dto to generate token from\n   */\n  async createToken({ _id, username, email, avatar }: IProfile) {\n    return {\n      expires: this.expiration,\n      expiresPrettyPrint: this.prettyPrintSeconds(this.expiration),\n      token: this.jwtService.sign({ _id, username, email, avatar }),\n    };\n  }\n\n  /**\n   * Formats the time in seconds into human-readable format\n   * @param {string} time\n   */\n  private prettyPrintSeconds(time: string) {\n    const ntime = Number(time);\n    const hours = Math.floor(ntime / 3600);\n    const minutes = Math.floor((ntime % 3600) / 60);\n    const seconds = Math.floor((ntime % 3600) % 60);\n\n    return `${hours > 0 ? hours + (hours === 1 ? \" hour,\" : \" hours,\") : \"\"} ${\n      minutes > 0 ? minutes + (minutes === 1 ? \" minute\" : \" minutes\") : \"\"\n    } ${seconds > 0 ? seconds + (seconds === 1 ? \" second\" : \" seconds\") : \"\"}`;\n  }\n\n  /**\n   * Validates whether or not the profile exists in the database\n   * @param {LoginPayload} payload login payload to authenticate with\n   */\n  async validateUser(payload: LoginPayload) {\n    const user = await this.profileService.getByUsernameAndPass(\n      payload.username,\n      payload.password,\n    );\n    if (!user) {\n      throw new UnauthorizedException(\n        \"Could not authenticate. Please try again.\",\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(\".env\"),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Config Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                isEnv\n                            \n                            \n                                    Private\n                                    Static\n                                validateInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/config/config.service.ts:19\n                            \n                        \n\n                \n                    \n                        Object that will contain the injected environment variables\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:68\n                \n            \n\n\n            \n                \n                    Fetches the key from the configuration file\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the associated value for a given key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnv\n                        \n                        \n                    \n                \n            \n            \n                \nisEnv(env: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:77\n                \n            \n\n\n            \n                \n                    Checks whether the application environment set in the configuration file matches the environment parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    env\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether or not the environment variable matches the application environment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            validateInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateInput(envConfig: EnvConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:34\n                \n            \n\n\n            \n                \n                    Ensures all needed variables are set, and returns the validated JavaScript object\nincluding the applied default values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    envConfig\n                                    \n                                                EnvConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EnvConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { parse } from \"dotenv\";\nimport * as joi from \"@hapi/joi\";\nimport * as fs from \"fs\";\n\n/**\n * Key-value mapping\n */\nexport interface EnvConfig {\n  [key: string]: string;\n}\n\n/**\n * Config Service\n */\nexport class ConfigService {\n  /**\n   * Object that will contain the injected environment variables\n   */\n  private readonly envConfig: EnvConfig;\n\n  /**\n   * Constructor\n   * @param {string} filePath\n   */\n  constructor(filePath: string) {\n    const config = parse(fs.readFileSync(filePath));\n    this.envConfig = ConfigService.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private static validateInput(envConfig: EnvConfig): EnvConfig {\n    /**\n     * A schema to validate envConfig against\n     */\n    const envVarsSchema: joi.ObjectSchema = joi.object({\n      APP_ENV: joi\n        .string()\n        .valid(\"dev\", \"prod\")\n        .default(\"dev\"),\n      APP_URL: joi.string().uri({\n        scheme: [/https?/],\n      }),\n      WEBTOKEN_SECRET_KEY: joi.string().required(),\n      WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n      DB_URL: joi.string().regex(/^mongodb/),\n    });\n\n    /**\n     * Represents the status of validation check on the configuration file\n     */\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(\n      envConfig,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n\n  /**\n   * Fetches the key from the configuration file\n   * @param {string} key\n   * @returns {string} the associated value for a given key\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Checks whether the application environment set in the configuration file matches the environment parameter\n   * @param {string} env\n   * @returns {boolean} Whether or not the environment variable matches the application environment\n   */\n  isEnv(env: string): boolean {\n    return this.envConfig.APP_ENV === env;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvConfig.html":{"url":"interfaces/EnvConfig.html","title":"interface - EnvConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnvConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Key-value mapping\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { parse } from \"dotenv\";\nimport * as joi from \"@hapi/joi\";\nimport * as fs from \"fs\";\n\n/**\n * Key-value mapping\n */\nexport interface EnvConfig {\n  [key: string]: string;\n}\n\n/**\n * Config Service\n */\nexport class ConfigService {\n  /**\n   * Object that will contain the injected environment variables\n   */\n  private readonly envConfig: EnvConfig;\n\n  /**\n   * Constructor\n   * @param {string} filePath\n   */\n  constructor(filePath: string) {\n    const config = parse(fs.readFileSync(filePath));\n    this.envConfig = ConfigService.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private static validateInput(envConfig: EnvConfig): EnvConfig {\n    /**\n     * A schema to validate envConfig against\n     */\n    const envVarsSchema: joi.ObjectSchema = joi.object({\n      APP_ENV: joi\n        .string()\n        .valid(\"dev\", \"prod\")\n        .default(\"dev\"),\n      APP_URL: joi.string().uri({\n        scheme: [/https?/],\n      }),\n      WEBTOKEN_SECRET_KEY: joi.string().required(),\n      WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n      DB_URL: joi.string().regex(/^mongodb/),\n    });\n\n    /**\n     * Represents the status of validation check on the configuration file\n     */\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(\n      envConfig,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n\n  /**\n   * Fetches the key from the configuration file\n   * @param {string} key\n   * @returns {string} the associated value for a given key\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Checks whether the application environment set in the configuration file matches the environment parameter\n   * @param {string} env\n   * @returns {boolean} Whether or not the environment variable matches the application environment\n   */\n  isEnv(env: string): boolean {\n    return this.envConfig.APP_ENV === env;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProfile.html":{"url":"interfaces/IProfile.html","title":"interface - IProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.model.ts\n        \n\n            \n                Description\n            \n            \n                Mongoose Profile Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        avatar\n                                \n                                \n                                        date\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                        roles\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     Schema.Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema.Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    UUID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gravatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Roles\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Schema, Document } from \"mongoose\";\n\n/**\n * Mongoose Profile Schema\n */\nexport const Profile = new Schema({\n  username: { type: String, required: true },\n  email: { type: String, required: true },\n  name: { type: String, required: true },\n  password: { type: String, required: true },\n  avatar: { type: String, required: true },\n  roles: [{ type: String }],\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\n/**\n * Mongoose Profile Document\n */\nexport interface IProfile extends Document {\n  /**\n   * UUID\n   */\n  readonly _id: Schema.Types.ObjectId;\n  /**\n   * Username\n   */\n  readonly username: string;\n  /**\n   * Email\n   */\n  readonly email: string;\n  /**\n   * Name\n   */\n  readonly name: string;\n  /**\n   * Password\n   */\n  password: string;\n  /**\n   * Gravatar\n   */\n  readonly avatar: string;\n  /**\n   * Roles\n   */\n  readonly roles: string[];\n  /**\n   * Date\n   */\n  readonly date: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Jwt Strategy Class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: JwtPayload, done)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:33\n                \n            \n\n\n            \n                \n                    Checks if the bearer token is a valid token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    \n                                            JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    done\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        callback to resolve the request user with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, JwtPayload, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileService } from \"../profile/profile.service\";\n\n/**\n * Jwt Strategy Class\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * Constructor\n   * @param {ConfigService} configService\n   * @param {ProfileService} profileService\n   */\n  constructor(\n    readonly configService: ConfigService,\n    private readonly profileService: ProfileService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get(\"WEBTOKEN_SECRET_KEY\"),\n    });\n  }\n\n  /**\n   * Checks if the bearer token is a valid token\n   * @param {JwtPayload} jwtPayload validation method for jwt token\n   * @param {any} done callback to resolve the request user with\n   */\n  async validate({ iat, exp, _id }: JwtPayload, done) {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/payload/login.payload.ts\n        \n\n            \n                Description\n            \n            \n                Login Paylaod Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/login.payload.ts:26\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/login.payload.ts:16\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport { IsAlphanumeric, IsNotEmpty, MinLength } from \"class-validator\";\n\n/**\n * Login Paylaod Class\n */\nexport class LoginPayload {\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProfilePayload.html":{"url":"classes/PatchProfilePayload.html","title":"class - PatchProfilePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProfilePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/payload/patch.profile.payload.ts\n        \n\n            \n                Description\n            \n            \n                Patch Profile Payload Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/profile/payload/patch.profile.payload.ts:20\n                            \n                        \n\n                \n                    \n                        Email field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/profile/payload/patch.profile.payload.ts:38\n                            \n                        \n\n                \n                    \n                        Name field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/profile/payload/patch.profile.payload.ts:46\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/profile/payload/patch.profile.payload.ts:30\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport {\n  IsEmail,\n  IsNotEmpty,\n  MinLength,\n  IsAlphanumeric,\n  Matches,\n} from \"class-validator\";\n\n/**\n * Patch Profile Payload Class\n */\nexport class PatchProfilePayload {\n  /**\n   * Email field\n   */\n  @ApiModelProperty()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiModelProperty()\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/profile\n            \n\n            \n                Description\n            \n            \n                Profile Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                patchProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':username')@UseGuards(undefined, ACGuard)@UseRoles({resource: 'profiles', action: 'delete', possession: 'any'})@ApiResponse({status: 200, description: 'Delete Profile Request Received'})@ApiResponse({status: 400, description: 'Delete Profile Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:78\n                \n            \n\n\n            \n                \n                    Delete route to remove profiles from app\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the username to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':username')@UseGuards(undefined)@ApiResponse({status: 200, description: 'Fetch Profile Request Received'})@ApiResponse({status: 400, description: 'Fetch Profile Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:38\n                \n            \n\n\n            \n                \n                    Get a particular profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the profile given username to fetch\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            patchProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patchProfile(payload: PatchProfilePayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@UseGuards(undefined)@UseRoles({resource: 'profiles', action: 'update', possession: 'any'})@ApiResponse({status: 200, description: 'Patch Profile Request Received'})@ApiResponse({status: 400, description: 'Patch Profile Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:61\n                \n            \n\n\n            \n                \n                    Edit profile information\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchProfilePayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { ACGuard, UseRoles } from \"nest-access-control\";\nimport { ApiBearerAuth, ApiResponse, ApiUseTags } from \"@nestjs/swagger\";\nimport { ProfileService } from \"./profile.service\";\nimport { PatchProfilePayload } from \"./payload/patch.profile.payload\";\n\n/**\n * Profile Controller\n */\n@ApiBearerAuth()\n@ApiUseTags(\"profile\")\n@Controller(\"api/profile\")\nexport class ProfileController {\n  /**\n   * Constructor\n   * @param profileService\n   */\n  constructor(private readonly profileService: ProfileService) {}\n\n  /**\n   * Get a particular profile\n   * @param username the profile given username to fetch\n   */\n  @Get(\":username\")\n  @UseGuards(AuthGuard())\n  @ApiResponse({ status: 200, description: \"Fetch Profile Request Received\" })\n  @ApiResponse({ status: 400, description: \"Fetch Profile Request Failed\" })\n  async getProfile(@Param(\"username\") username: string) {\n    const profile = await this.profileService.getByUsername(username);\n    if (!profile) {\n      throw new BadRequestException(\n        \"The profile with that username could not be found.\",\n      );\n    }\n    return profile;\n  }\n\n  /**\n   * Edit profile information\n   * @param {RegisterPayload} payload\n   */\n  @Patch()\n  @UseGuards(AuthGuard())\n  @UseRoles({\n    resource: \"profiles\",\n    action: \"update\",\n    possession: \"any\",\n  })\n  @ApiResponse({ status: 200, description: \"Patch Profile Request Received\" })\n  @ApiResponse({ status: 400, description: \"Patch Profile Request Failed\" })\n  async patchProfile(@Body() payload: PatchProfilePayload) {\n    return await this.profileService.edit(payload);\n  }\n\n  /**\n   * Delete route to remove profiles from app\n   * @param {string} username the username to remove\n   */\n  @Delete(\":username\")\n  @UseGuards(AuthGuard(), ACGuard)\n  @UseRoles({\n    resource: \"profiles\",\n    action: \"delete\",\n    possession: \"any\",\n  })\n  @ApiResponse({ status: 200, description: \"Delete Profile Request Received\" })\n  @ApiResponse({ status: 400, description: \"Delete Profile Request Failed\" })\n  async delete(@Param(\"username\") username: string) {\n    return await this.profileService.delete(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nProfileService \n\nProfileService \n\n\n\nProfileModule\n\nProfileModule\n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ProfileService } from \"./profile.service\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { Profile } from \"./profile.model\";\nimport { ProfileController } from \"./profile.controller\";\nimport { PassportModule } from \"@nestjs/passport\";\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: \"Profile\", schema: Profile }]),\n    PassportModule.register({ defaultStrategy: \"jwt\" }),\n  ],\n  providers: [ProfileService],\n  exports: [ProfileService],\n  controllers: [ProfileController],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Profile Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                get\n                            \n                            \n                                getByUsername\n                            \n                            \n                                getByUsernameAndPass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/profile/profile.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: RegisterPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:63\n                \n            \n\n\n            \n                \n                    Creates a profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        profile payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:108\n                \n            \n\n\n            \n                \n                    Deletes profile from provided username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(payload: PatchProfilePayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:90\n                \n            \n\n\n            \n                \n                    Update profile information\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchProfilePayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:33\n                \n            \n\n\n            \n                \n                    Fetches profile from database by UUID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUsername\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:41\n                \n            \n\n\n            \n                \n                    Fetches profile from database by username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUsernameAndPass\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUsernameAndPass(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:50\n                \n            \n\n\n            \n                \n                    Fetches profile by username and hashed password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as crypto from \"crypto\";\nimport * as gravatar from \"gravatar\";\nimport { Model } from \"mongoose\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotAcceptableException,\n} from \"@nestjs/common\";\nimport { IProfile } from \"./profile.model\";\nimport { RegisterPayload } from \"modules/auth/payload/register.payload\";\nimport { AppRoles } from \"../app/app.roles\";\nimport { PatchProfilePayload } from \"./payload/patch.profile.payload\";\n\n/**\n * Profile Service\n */\n@Injectable()\nexport class ProfileService {\n  /**\n   * Constructor\n   * @param {Model} profileModel\n   */\n  constructor(\n    @InjectModel(\"Profile\") private readonly profileModel: Model,\n  ) {}\n\n  /**\n   * Fetches profile from database by UUID\n   * @param {string} id\n   */\n  get(id: string): Promise {\n    return this.profileModel.findById(id).exec();\n  }\n\n  /**\n   * Fetches profile from database by username\n   * @param {string} username\n   */\n  getByUsername(username: string): Promise {\n    return this.profileModel.findOne({ username }).exec();\n  }\n\n  /**\n   * Fetches profile by username and hashed password\n   * @param {string} username\n   * @param {string} password\n   */\n  getByUsernameAndPass(username: string, password: string) {\n    return this.profileModel\n      .findOne({\n        username,\n        password: crypto.createHmac(\"sha256\", password).digest(\"hex\"),\n      })\n      .exec();\n  }\n\n  /**\n   * Creates a profile\n   * @param {RegisterPayload} payload profile payload\n   */\n  async create(payload: RegisterPayload): Promise {\n    const user = await this.getByUsername(payload.username);\n    if (user) {\n      throw new NotAcceptableException(\n        \"The account with the provided username currently exists. Please choose another one.\",\n      );\n    }\n    // this will auto assign the admin role to each created user\n    const createdProfile = new this.profileModel({\n      ...payload,\n      password: crypto.createHmac(\"sha256\", payload.password).digest(\"hex\"),\n      avatar: gravatar.url(payload.email, {\n        protocol: \"http\",\n        s: \"200\",\n        r: \"pg\",\n        d: \"404\",\n      }),\n      roles: AppRoles.ADMIN_DELETE_PROFILES,\n    });\n\n    return createdProfile.save();\n  }\n\n  /**\n   * Update profile information\n   * @param {PatchProfilePayload} payload\n   */\n  async edit(payload: PatchProfilePayload) {\n    const { username } = payload;\n    const updatedProfile = await this.profileModel.updateOne(\n      { username },\n      payload,\n    );\n    if (updatedProfile.nModified !== 1) {\n      throw new BadRequestException(\n        \"The profile with that username does not exist in the system. Please try another username.\",\n      );\n    }\n    return this.getByUsername(username);\n  }\n\n  /**\n   * Deletes profile from provided username\n   * @param {string} username\n   */\n  delete(username: string) {\n    return this.profileModel.deleteOne({ username }).then(profile => {\n      if (profile.deletedCount === 1) {\n        return { message: `Deleted ${username} from records` };\n      } else {\n        throw new BadRequestException(\n          `Failed to delete a profile by the name of ${username}.`,\n        );\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterPayload.html":{"url":"classes/RegisterPayload.html","title":"class - RegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/payload/register.payload.ts\n        \n\n            \n                Description\n            \n            \n                Register Payload Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:22\n                            \n                        \n\n                \n                    \n                        Email field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:42\n                            \n                        \n\n                \n                    \n                        Name field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:52\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:32\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport {\n  IsEmail,\n  IsNotEmpty,\n  MinLength,\n  IsAlphanumeric,\n  Matches,\n} from \"class-validator\";\n\n/**\n * Register Payload Class\n */\nexport class RegisterPayload {\n  /**\n   * Email field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WinstonModule.html":{"url":"modules/WinstonModule.html","title":"module - WinstonModule","body":"\n                   \n\n\n\n\n    Modules\n    WinstonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/winston/winston.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: WinstonModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/winston/winston.module.ts:21\n                \n            \n\n\n            \n                \n                    Constructor for winson module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                WinstonModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: WinstonModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/winston/winston.module.ts:35\n                \n            \n\n\n            \n                \n                    Asynchronous constructor for winston module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                WinstonModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from \"@nestjs/common\";\nimport {\n  WinstonModuleAsyncOptions,\n  WinstonModuleOptions,\n} from \"./winston.interfaces\";\nimport {\n  createWinstonAsyncProviders,\n  createWinstonProviders,\n} from \"./winston.providers\";\n\n@Global()\n@Module({})\n/**\n * Represents a Winston Module\n */\nexport class WinstonModule {\n  /**\n   * Constructor for winson module\n   * @param options\n   */\n  public static forRoot(options: WinstonModuleOptions): DynamicModule {\n    const providers = createWinstonProviders(options);\n\n    return {\n      module: WinstonModule,\n      providers,\n      exports: providers,\n    };\n  }\n\n  /**\n   * Asynchronous constructor for winston module\n   * @param options\n   */\n  public static forRootAsync(\n    options: WinstonModuleAsyncOptions,\n  ): DynamicModule {\n    const providers = createWinstonAsyncProviders(options);\n\n    return {\n      module: WinstonModule,\n      imports: options.imports,\n      providers,\n      exports: providers,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WinstonModuleAsyncOptions.html":{"url":"interfaces/WinstonModuleAsyncOptions.html","title":"interface - WinstonModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WinstonModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/winston/winston.interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Asynchronous winston module options\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Providers to inject\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default factory method that returns winston module options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport { LoggerOptions } from \"winston\";\n\n/**\n * Logger options\n */\nexport type WinstonModuleOptions = LoggerOptions;\n\n/**\n * Asynchronous winston module options\n */\nexport interface WinstonModuleAsyncOptions\n  extends Pick {\n  /**\n   * Default factory method that returns winston module options\n   */\n  useFactory: (\n    ...args: any[]\n  ) => Promise | WinstonModuleOptions;\n\n  /**\n   * Providers to inject\n   */\n  inject?: any[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.hmr.ts\n            \n            variable\n            module\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/modules/app/app.roles.ts\n            \n            variable\n            roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/payload/login.payload.ts\n            \n            class\n            LoginPayload\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/payload/register.payload.ts\n            \n            class\n            RegisterPayload\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            interface\n            EnvConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/profile/payload/patch.profile.payload.ts\n            \n            class\n            PatchProfilePayload\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.model.ts\n            \n            interface\n            IProfile\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.model.ts\n            \n            variable\n            Profile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.constants.ts\n            \n            variable\n            WINSTON_MODULE_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.constants.ts\n            \n            variable\n            WINSTON_MODULE_PROVIDER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.interfaces.ts\n            \n            interface\n            WinstonModuleAsyncOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.providers.ts\n            \n            variable\n            createWinstonAsyncProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.providers.ts\n            \n            variable\n            createWinstonProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_AUTH_LOCATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_AUTH_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_CURRENT_VERSION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_DESCRIPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_ROOT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_SCHEMES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/index.ts\n            \n            variable\n            configureOpenAPI\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : 16.1.4\n        \n            @nestjs/common : 6.7.2\n        \n            @nestjs/core : 6.7.2\n        \n            @nestjs/jwt : 6.1.1\n        \n            @nestjs/mongoose : 6.1.2\n        \n            @nestjs/passport : 6.1.0\n        \n            @nestjs/platform-express : 6.7.2\n        \n            @nestjs/platform-fastify : 6.7.2\n        \n            @nestjs/swagger : 3.1.0\n        \n            @nestjs/typeorm : 6.1.3\n        \n            class-transformer : 0.2.3\n        \n            class-validator : 0.10.1\n        \n            crypto : 1.0.1\n        \n            dotenv : 8.1.0\n        \n            express-rate-limit : 5.0.0\n        \n            fastify-helmet : 3.0.1\n        \n            fastify-rate-limit : 2.3.0\n        \n            fastify-swagger : 2.4.0\n        \n            gravatar : 1.8.0\n        \n            mongoose : 5.7.1\n        \n            nodemon : 1.19.2\n        \n            nest-access-control : 2.0.1\n        \n            passport : 0.4.0\n        \n            passport-jwt : 4.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rimraf : 3.0.0\n        \n            rxjs : 6.5.3\n        \n            swagger-ui-express : 4.1.1\n        \n            typeorm : 0.2.19\n        \n            winston : 3.2.1\n        \n            winston-daily-rotate-file : 4.1.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppRoles   (src/.../app.roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/app/app.roles.ts\n    \n        \n            \n                \n                    \n                        \n                        AppRoles\n                    \n                \n                        \n                            \n                                 DEFAULT_READ\n                            \n                        \n                        \n                            \n                                Value : DEFAULT_READ\n                            \n                        \n                        \n                            \n                                 ADMIN_DELETE_PROFILES\n                            \n                        \n                        \n                            \n                                Value : ADMIN_DELETE_PROFILES\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n  \n\n&#x1F4DA; Description\nThis boilerplate is made to quickly prototype backend applications. It comes with database, logging, security, and authentication features out of the box.\n\n&#x1F6E0;️ Prerequisites\nNon Docker\n\nPlease make sure to have MongoDB locally, or utilize Mongo on the cloud by configuration a cluster in atlas. Then grab the connection string and modify the following line.\n\nDocker &#x1F433;\n\nPlease make sure to have docker desktop setup on any preferred operating system to quickly compose both the MongoDB and web application. Then follow the steps outlined below.\n\n\n&#x1F680; Setup\nManually Deploying without Docker\n\nCreate a .env file using the cp .env.example .env command and replace the existing env variables with personal settings (MongoDB URL either srv or localhost)\n\nInstall dependencies using npm i or yarn\n\nStart the app for pre-production using npm run start or for development using npm run start:dev (the app will be exposed on the port 9000; not to conflict with React, Angular, or Vue)\n\n\nDeploying with Docker &#x1F433;\n\nExecute the following command in-app directory:\n\n# creates and loads the docker container with required configuration\n$ docker-compose up\nThe following command will set up the project for you (building the Docker images, starting docker-compose stack). The Web application and mongo will be exposed to http://localhost:9000 and http://localhost:27017 respectively\n\n&#x1F512; Environment Configuration\nBy default, the application comes with a config module that can inject the ConfigService and read every environment variable from the .env. file.\nAPP_ENV - the application environment it will be executing as, either in development or production. Determines the type of logging options to utilize. Options: dev or prod. \nAPP_URL - the base URL for the application. Made mainly to showcase the ConfigService and can be removed if not used.\nWEBTOKEN_SECRET_KEY - the secret key to encrypt/decrypt web tokens with. Make sure to generate a random alphanumeric string for this. Not \nWEBTOKEN_EXPIRATION_TIME - the time in seconds indicating when the web token will expire; by default, it's 2400 seconds which is 40 mins.\nDB_URL - the URL to the MongoDB collection\n\n&#x1F3D7; Choosing a Web Framework\nThis boilerplate comes with Fastify out of the box as it offers performance benefits over Express. But this can be changed to use Express framework instead of Fastify. Please proceed the steps below to change between the two.\n\nReplace the following lines of code in the main.ts file with the ones detailed below.\n\n// from (fastify):\nimport {\n  FastifyAdapter,\n  NestFastifyApplication,\n} from '@nestjs/platform-fastify';\nimport * as headers from 'fastify-helmet';\nimport * as fastifyRateLimiter from 'fastify-rate-limit';\nconst app = await NestFactory.create(\n  AppModule,\n  new FastifyAdapter({ logger: console }),\n);\napp.register(headers);\napp.register(fastifyRateLimiter, {\n  max: 100,\n  timeWindow: '1 minute',\n});\n\n// to (express):\nimport * as headers from 'helmet';\nimport * as rateLimiter from 'express-rate-limit';\nconst app = await NestFactory.create(AppModule, {\n  logger: console,\n});\napp.use(headers());\napp.use(\n  rateLimiter({\n    windowMs: 60, // 1 minutes\n    max: 100, // limit each IP to 100 requests per windowMs\n  }),\n);Note: The package.jsoncomes with dependencies for both Express and Fastify to support moving between two. But this can leave the project bloated especially when only one web framework is being used. Thus it is recommended that when deploying to production, a purger of unused dependencies occurs. \nIf you choose to use Fastify, this command will purge all of the Express dependencies:\n# removing Express dependencies\n$ npm rm @nestjs/platform-express express-rate-limit helmet swagger-ui-express @types/express --saveIf you choose to use Express, this command will purge all of the Fastify dependencies:\n# removing Fastify dependencies\n$ npm rm @nestjs/platform-fastify fastify-helmet fastify-rate-limit fastify-swagger --save\n✅ Testing\nDocker &#x1F433;\n# unit tests\n$ docker exec -it nest yarn test\n\n# e2e tests\n$ docker exec -it nest yarn test:e2e\n\n# test coverage\n$ docker exec -it nest yarn test:covNon-Docker\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n&#x1F4A1; TypeDocs\nThe documentation for this boilerplate can be found on Github pages.\nThe docs can be generated on-demand, simply, by typing npm run typedocs. This will produce a docs folder with the required front-end files and start hosting on localhost port 8080.\n# generate docs for code\n$ npm run typedocs\n&#x1F4DD; Open API\nOut of the box, the web app comes with an open api specification, that is used to describe RESTful APIs. Nest provides a dedicated module to work with it.\nThe configuration for Swagger can be found at this location.\n\n✨ TypeORM\nTypeORM is an object-relational mapping that acts as an abstraction layer over operations on databases. Please view the documentation for further details.\nThe configuration for TypeORM can be found in the app module.\n\n&#x1F50A; Logs\nThis boilerplate comes with a Winston module for logging, the configurations for Winston can be found in the app module.\n\n&#x1F465; Support\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\n\nLicense\nNest is MIT licensed.\nAuthor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Msanvarov\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WinstonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WinstonModuleOptions   (src/.../winston.interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/winston/winston.interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    WinstonModuleOptions\n                \n            \n            \n                \n                    Logger options\n\n                \n            \n            \n                \n                        LoggerOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configureOpenAPI   (src/.../index.ts)\n                        \n                        \n                            createWinstonAsyncProviders   (src/.../winston.providers.ts)\n                        \n                        \n                            createWinstonProviders   (src/.../winston.providers.ts)\n                        \n                        \n                            module   (src/.../main.hmr.ts)\n                        \n                        \n                            Profile   (src/.../profile.model.ts)\n                        \n                        \n                            roles   (src/.../app.roles.ts)\n                        \n                        \n                            SWAGGER_API_AUTH_LOCATION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_AUTH_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_CURRENT_VERSION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_DESCRIPTION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_ROOT   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_SCHEMES   (src/.../constants.ts)\n                        \n                        \n                            WINSTON_MODULE_OPTIONS   (src/.../winston.constants.ts)\n                        \n                        \n                            WINSTON_MODULE_PROVIDER   (src/.../winston.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configureOpenAPI\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication) => {\n  const options = new DocumentBuilder()\n    .setTitle(SWAGGER_API_NAME)\n    .setDescription(SWAGGER_API_DESCRIPTION)\n    .setVersion(SWAGGER_API_CURRENT_VERSION)\n    .setSchemes(...SWAGGER_API_SCHEMES)\n    .addBearerAuth(SWAGGER_API_AUTH_NAME, SWAGGER_API_AUTH_LOCATION)\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup(SWAGGER_API_ROOT, app, document);\n}\n                        \n                    \n\n                \n                    \n                        Open api configuration to be used as a basis for web application\n\n                    \n                \n\n            \n        \n\n    src/modules/winston/winston.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createWinstonAsyncProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  options: WinstonModuleAsyncOptions,\n): Provider[] => {\n  return [\n    {\n      provide: WINSTON_MODULE_OPTIONS,\n      useFactory: options.useFactory,\n      inject: options.inject || [],\n    },\n    {\n      provide: WINSTON_MODULE_PROVIDER,\n      useFactory: (loggerOpts: LoggerOptions) => createLogger(loggerOpts),\n      inject: [WINSTON_MODULE_OPTIONS],\n    },\n  ];\n}\n                        \n                    \n\n                \n                    \n                        Async constructor for a winston provider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createWinstonProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  loggerOpts: WinstonModuleOptions,\n): Provider[] => {\n  return [\n    {\n      provide: WINSTON_MODULE_PROVIDER,\n      useFactory: () => createLogger(loggerOpts),\n    },\n  ];\n}\n                        \n                    \n\n                \n                    \n                        Constructor a winston provider\n\n                    \n                \n\n            \n        \n\n    src/main.hmr.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Represents the webpack meta data\n\n                    \n                \n\n            \n        \n\n    src/modules/profile/profile.model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  username: { type: String, required: true },\n  email: { type: String, required: true },\n  name: { type: String, required: true },\n  password: { type: String, required: true },\n  avatar: { type: String, required: true },\n  roles: [{ type: String }],\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n})\n                        \n                    \n\n                \n                    \n                        Mongoose Profile Schema\n\n                    \n                \n\n            \n        \n\n    src/modules/app/app.roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RolesBuilder\n\n                        \n                    \n                    \n                        \n                            Default value : new RolesBuilder()\n                        \n                    \n\n                \n                    \n                        Roles Builder\n\n                    \n                \n\n            \n        \n\n    src/swagger/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_AUTH_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"header\"\n                        \n                    \n\n                \n                    \n                        Where the SWAGGER_API_AUTH_NAME will be used in the request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_AUTH_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Authorization\"\n                        \n                    \n\n                \n                    \n                        The default authentication method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_CURRENT_VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"1.0\"\n                        \n                    \n\n                \n                    \n                        Current version of the api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_DESCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"API Description\"\n                        \n                    \n\n                \n                    \n                        A short description for api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"API\"\n                        \n                    \n\n                \n                    \n                        The name given to the api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_ROOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"api/docs\"\n                        \n                    \n\n                \n                    \n                        The endpoint for open api ui\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_SCHEMES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"http\", \"https\"]\n                        \n                    \n\n                \n                    \n                        Types of api schemes\n\n                    \n                \n\n            \n        \n\n    src/modules/winston/winston.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WINSTON_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"WinstonModuleOptions\"\n                        \n                    \n\n                \n                    \n                        Token for the type of configuration to be used when declaring in the app module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WINSTON_MODULE_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"winston\"\n                        \n                    \n\n                \n                    \n                        An identifier to use for injecting the winston provider\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
