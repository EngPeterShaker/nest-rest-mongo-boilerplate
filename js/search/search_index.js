var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.661,1,1.871]],["body/controllers/AppController.html",[0,2.457,1,2.131,2,1.297,3,0.354,4,0.308,5,0.225,6,1.94,7,1.229,8,3.155,9,0.452,10,1.375,11,1.799,12,4.213,13,3.438,14,4.463,15,1.94,16,1.511,17,2.517,18,0.04,19,2.356,20,2.356,21,4.463,22,2.831,23,3.438,24,2.356,25,4.08,26,3.515,27,4.06,28,4.08,29,4.08,30,1.199,31,2.356,32,4.08,33,4.463,34,1.375,35,0.916,36,0.401,37,1.243,38,2.103,39,1.458,40,2.356,41,2.356,42,2.356,43,3.438,44,4.463,45,2.831,46,2.356,47,2.356,48,2.831,49,1.694,50,2.131,51,2.43,52,0.648,53,1.613,54,2.356,55,0.628,56,2.199,57,1.94,58,3.438,59,4.213,60,1.297,61,2.356,62,1.461,63,1.613,64,1.461,65,3.438,66,3.438,67,1.461,68,1.666,69,1.666,70,0.354,71,0.225,72,1.124,73,1.375,74,1.243,75,4.06,76,3.072,77,4.06,78,1.199,79,2.356,80,2.356,81,2.356,82,0.942,83,0.401,84,2.356,85,2.356,86,2.356,87,2.356,88,2.356,89,2.356,90,2.356,91,1.297,92,2.356,93,0.015,94,0.022,95,0.015]],["title/modules/AppModule.html",[83,0.514,96,1.661]],["body/modules/AppModule.html",[1,2.645,2,2.017,3,0.64,4,0.337,5,0.349,18,0.04,52,0.747,55,0.686,56,2.516,57,2.119,67,1.596,68,1.82,69,1.82,70,0.386,71,0.245,78,0.76,83,0.727,93,0.017,94,0.024,95,0.017,96,3.168,97,1.029,98,1.029,99,1.417,100,1.417,101,1.417,102,1.891,103,1.268,104,2.119,105,2.119,106,2.119,107,2.811,108,2.647,109,2.516,110,2.705,111,2.017,112,1.417,113,1.141,114,2.574,115,2.882,116,1.891,117,3.665,118,2.119,119,2.119,120,2.574,121,2.119,122,3.665,123,1.596,124,2.119,125,1.4,126,1.417,127,2.574,128,2.119,129,2.574,130,2.574,131,1.417,132,2.574,133,2.574,134,1.806,135,2.272,136,2.574,137,2.574,138,2.574,139,2.349,140,2.574,141,2.574,142,2.574,143,4.267,144,3.828,145,3.665,146,3.665,147,2.061,148,2.017,149,3.665,150,1.519,151,3.665,152,3.665,153,2.574,154,3.665,155,2.574,156,1.82,157,2.574,158,2.574,159,2.574,160,2.574,161,2.574,162,2.574,163,2.574,164,2.574,165,2.574,166,2.574,167,2.574,168,2.574]],["title/injectables/AppService.html",[56,1.487,169,1.091]],["body/injectables/AppService.html",[3,0.496,4,0.432,5,0.315,7,0.935,9,0.634,10,1.739,16,1.435,18,0.04,30,1.284,34,1.321,35,0.88,36,0.563,37,1.194,39,1.421,48,3.58,49,2.715,51,3.074,52,0.636,53,1.571,55,0.88,56,2.142,70,0.496,71,0.315,72,1.688,73,1.739,74,1.194,78,0.976,93,0.021,94,0.028,95,0.021,116,1.464,125,1.43,126,1.819,134,1.628,147,2.442,169,1.571,170,1.819,171,2.72,172,5.165,173,3.304,174,3.636,175,3.304,176,3.013,177,2.394,178,3.304,179,2.696,180,3.304,181,0.976,182,4.861,183,3.304,184,3.304,185,2.048]],["title/controllers/AuthController.html",[0,1.661,186,1.871]],["body/controllers/AuthController.html",[0,2.322,2,1.388,3,0.378,4,0.33,5,0.24,7,1.242,9,0.484,10,1.444,11,2.248,17,2.239,18,0.04,26,2.239,28,3.792,30,1.066,32,3.792,34,1.444,35,0.962,36,0.615,37,1.305,39,1.18,45,2.076,52,0.663,53,1.665,55,0.672,59,4.3,60,1.388,63,1.762,64,1.563,70,0.378,71,0.24,72,1.18,73,1.444,74,1.305,76,3.144,78,1.066,82,1.008,91,2.536,93,0.016,94,0.023,95,0.016,147,1.6,148,1.988,181,1.066,186,2.239,187,2.076,188,2.522,189,2.522,190,3.238,191,3.777,192,3.792,193,2.522,194,2.684,195,2.522,196,4.607,197,3.611,198,4.607,199,3.611,200,4.607,201,4.607,202,2.522,203,3.144,204,3.792,205,2.522,206,2.684,207,2.522,208,4.607,209,2.522,210,2.522,211,2.522,212,2.402,213,2.076,214,2.076,215,2.522,216,2.522,217,2.522,218,2.522,219,3.611,220,2.522,221,2.522,222,3.611,223,2.522,224,2.522,225,2.522]],["title/modules/AuthModule.html",[83,0.514,107,1.661]],["body/modules/AuthModule.html",[2,2.295,3,0.465,4,0.406,5,0.295,11,1.374,18,0.04,52,0.745,55,0.826,62,1.922,70,0.465,71,0.295,78,0.916,83,0.802,93,0.02,94,0.027,95,0.02,97,1.24,98,1.24,99,1.707,100,1.707,101,1.707,102,2.087,103,2.054,107,3.219,108,2.724,109,2.666,111,2.295,112,1.707,113,1.374,115,2.919,124,2.553,125,1.342,126,1.707,128,2.553,134,1.528,135,1.922,186,2.919,212,2.666,213,2.553,226,2.553,227,3.101,228,2.553,229,2.979,230,3.101,231,3.101,232,2.192,233,3.101,234,3.101,235,3.101,236,4.169,237,4.169,238,2.584,239,3.101,240,2.553,241,2.553,242,3.101,243,4.169,244,3.101,245,3.101]],["title/injectables/AuthService.html",[169,1.091,212,1.487]],["body/injectables/AuthService.html",[3,0.297,4,0.259,5,0.189,7,0.788,9,0.381,10,1.209,11,2.06,16,1.472,18,0.04,30,1.303,34,1.639,35,1.092,36,0.792,37,1.481,38,1.34,39,1.197,52,0.608,53,1.747,55,0.528,63,1.845,64,1.229,70,0.297,71,0.189,72,1.339,73,2.042,74,1.68,78,1.082,82,1.764,91,1.092,93,0.013,94,0.02,95,0.013,125,1.361,126,1.092,144,2.489,147,2.06,148,2.017,150,0.648,169,1.092,170,1.092,181,1.303,190,1.874,191,2.137,194,2.429,203,2.882,204,1.632,212,1.489,214,1.632,232,1.402,238,2.54,246,1.632,247,1.489,248,3.664,249,3.664,250,3.023,251,3.023,252,1.983,253,4.984,254,3.023,255,1.983,256,2.256,257,1.983,258,2.137,259,3.023,260,2.882,261,3.023,262,3.023,263,1.983,264,3.023,265,3.827,266,4.204,267,3.023,268,3.023,269,3.023,270,1.983,271,3.023,272,1.874,273,2.489,274,2.137,275,3.664,276,2.489,277,2.489,278,1.983,279,3.023,280,1.983,281,1.632,282,2.137,283,1.874,284,1.874,285,1.983,286,1.983,287,1.983,288,1.983,289,1.983,290,1.983,291,4.412,292,1.983,293,3.664,294,3.632,295,3.023,296,2.489,297,3.664,298,2.59,299,1.983,300,1.632,301,1.983,302,1.983,303,1.983,304,1.983,305,1.229,306,1.402,307,1.983,308,1.983]],["title/modules/ConfigModule.html",[83,0.514,108,1.487]],["body/modules/ConfigModule.html",[3,0.599,4,0.522,5,0.38,18,0.039,52,0.641,55,1.063,70,0.599,71,0.38,83,0.904,93,0.026,94,0.032,95,0.026,97,1.595,98,1.595,99,2.196,100,2.196,101,2.196,102,2.173,103,2.615,108,2.8,111,2.699,112,2.196,113,1.768,125,1.577,150,1.304,309,3.285,310,3.285,311,3.99,312,3.99,313,3.285,314,3.99,315,3.99]],["title/classes/ConfigService.html",[71,0.288,125,0.804]],["body/classes/ConfigService.html",[3,0.327,4,0.286,5,0.459,7,0.469,9,0.419,10,1.3,16,1.697,18,0.04,30,1.358,34,1.72,35,1.146,36,0.784,37,1.555,39,1.632,49,2.119,50,3.309,52,0.508,53,1.403,70,0.488,71,0.208,72,1.269,73,1.928,74,1.403,76,1.353,78,1.147,93,0.014,94,0.021,95,0.014,125,0.866,147,1.44,150,0.713,156,2.745,176,2.407,177,2.532,181,1.147,185,1.353,247,1.601,272,2.667,305,1.353,316,1.353,317,1.543,318,3.468,319,3.25,320,2.745,321,3.25,322,2.676,323,3.25,324,2.676,325,3.041,326,2.676,327,2.676,328,2.368,329,2.676,330,2.183,331,2.297,332,3.627,333,2.297,334,2.667,335,2.297,336,2.676,337,2.183,338,2.297,339,3.041,340,3.041,341,2.676,342,2.745,343,3.197,344,2.015,345,2.676,346,2.183,347,2.676,348,2.676,349,2.676,350,2.676,351,2.297,352,2.676,353,1.601,354,2.676,355,1.797,356,1.543,357,2.676,358,1.543,359,2.676,360,1.543,361,0.873,362,1.797,363,1.797,364,1.797,365,1.202,366,1.543,367,1.797,368,1.797,369,1.797,370,1.797,371,1.543,372,1.797,373,1.543,374,1.797,375,1.797,376,1.797,377,1.543,378,1.543,379,1.797,380,1.543,381,1.797,382,1.543,383,1.797,384,1.353,385,2.297,386,1.797,387,2.676,388,1.797,389,1.797,390,1.797,391,1.797,392,1.797]],["title/interfaces/EnvConfig.html",[318,1.871,361,1.207]],["body/interfaces/EnvConfig.html",[3,0.4,4,0.349,5,0.45,7,0.573,16,1.697,18,0.04,30,0.787,39,1.421,49,1.85,50,3.086,52,0.569,53,1.572,70,0.563,71,0.254,72,0.871,73,1.502,74,0.963,76,1.652,78,1.284,93,0.017,94,0.024,95,0.017,125,0.71,147,1.181,150,0.871,156,3.074,176,2.328,177,2.394,181,1.284,185,1.652,272,2.328,305,1.652,317,1.884,318,3.36,320,1.884,322,2.194,324,2.194,325,2.655,326,2.194,327,2.194,328,2.067,329,2.194,331,1.884,332,3.752,333,1.884,334,2.927,335,1.884,336,2.194,338,1.884,339,2.655,340,2.655,341,2.194,342,2.655,343,3.092,344,1.652,345,2.194,347,2.194,348,2.194,349,2.194,350,2.194,351,1.884,352,2.194,353,1.313,354,2.194,355,2.194,356,1.884,357,3.092,358,1.884,359,3.092,360,2.655,361,1.066,362,2.194,363,2.194,364,2.194,365,1.467,366,1.884,367,2.194,368,2.194,369,2.194,370,2.194,371,1.884,372,2.194,373,1.884,374,2.194,375,2.194,376,2.194,377,1.884,378,1.884,379,2.194,380,1.884,381,2.194,382,1.884,383,2.194,384,1.652,385,2.655,386,2.194,387,3.092,388,2.194,389,2.194,390,2.194,391,2.194,392,2.194,393,1.652,394,2.665,395,2.665]],["title/interfaces/IProfile.html",[256,1.661,361,1.207]],["body/interfaces/IProfile.html",[3,0.411,4,0.358,5,0.261,7,0.589,9,0.526,16,1.78,18,0.04,35,1.425,36,0.996,38,2.371,52,0.358,70,0.575,74,1.933,82,1.911,93,0.018,94,0.025,95,0.018,131,2.945,139,2.769,150,0.895,181,0.809,247,1.887,256,2.108,282,3.379,283,3.316,284,3.118,353,1.35,361,1.095,365,2.43,393,1.698,396,1.937,397,2.963,398,4.141,399,2.707,400,4.674,401,2.945,402,4.415,403,3.153,404,2.707,405,2.769,406,2.255]],["title/injectables/JwtStrategy.html",[169,1.091,229,1.661]],["body/injectables/JwtStrategy.html",[3,0.452,4,0.394,5,0.287,7,0.879,9,0.578,10,1.635,11,2.056,18,0.04,26,2.534,30,1.207,34,1.635,35,1.089,36,0.696,37,1.477,39,0.984,52,0.681,53,1.798,55,0.802,62,1.867,63,2.045,64,1.867,70,0.452,71,0.442,72,1.626,73,1.204,74,1.477,93,0.019,94,0.026,95,0.019,125,1.488,126,1.658,148,2.25,169,1.477,170,1.658,179,1.867,181,0.889,229,2.25,238,3.085,241,2.48,260,3.225,277,2.48,282,2.129,338,2.889,366,3.28,385,2.129,399,2.129,407,2.48,408,4.64,409,3.012,410,3.012,411,3.012,412,5.365,413,4.976,414,3.012,415,4.088,416,4.088,417,4.088,418,4.088,419,3.012,420,2.48,421,3.012,422,3.012,423,3.012,424,3.012,425,3.012,426,3.012,427,4.088,428,4.088,429,4.088]],["title/classes/LoginPayload.html",[71,0.288,194,1.661]],["body/classes/LoginPayload.html",[3,0.547,4,0.477,5,0.348,7,0.785,9,0.701,16,1.584,17,2.874,18,0.04,30,1.369,36,0.79,38,2.454,52,0.606,60,2.008,70,0.547,71,0.511,93,0.024,94,0.03,95,0.024,139,2.552,191,3.277,194,2.552,247,2.284,316,2.262,401,3.048,405,2.552,430,3.004,431,4.637,432,3.817,433,3.004,434,3.648,435,4.415,436,3.004,437,3.648,438,4.196,439,3.817,440,4.196,441,3.004,442,2.579,443,3.004]],["title/modules/ProfileModule.html",[83,0.514,109,1.487]],["body/modules/ProfileModule.html",[3,0.569,4,0.496,5,0.361,18,0.039,35,1.01,52,0.711,55,1.01,63,2.175,70,0.569,71,0.361,82,2.074,83,0.884,93,0.025,94,0.031,95,0.025,97,1.516,98,1.516,99,2.086,100,2.086,101,2.086,102,2.299,103,2.556,109,2.856,111,2.615,112,2.086,113,1.68,115,2.35,121,3.12,123,2.35,365,2.086,444,3.12,445,3.12,446,3.12,447,3.79,448,3.79,449,3.12,450,3.79]],["title/injectables/ProfileService.html",[63,1.091,169,1.091]],["body/injectables/ProfileService.html",[3,0.306,4,0.267,5,0.195,7,0.665,9,0.392,10,1.236,11,1.653,12,3.071,15,2.545,16,1.698,18,0.04,25,1.681,29,1.681,30,1.389,34,1.88,35,1.301,36,0.801,37,1.699,38,2.522,39,1.46,52,0.658,53,1.765,55,0.544,63,1.117,70,0.306,71,0.195,72,1.359,73,0.817,74,0.738,78,1.389,82,2.229,91,1.124,93,0.013,94,0.02,95,0.013,123,1.266,131,1.124,147,1.37,148,2.054,150,1.219,169,1.117,170,1.124,181,0.913,203,2.771,206,2.46,256,1.124,258,2.185,273,1.681,274,2.941,284,1.266,298,1.444,305,1.916,306,1.444,331,3.324,397,1.266,401,2.769,403,2.545,404,2.185,449,1.681,451,1.681,452,2.545,453,3.092,454,3.092,455,2.042,456,4.469,457,2.042,458,3.731,459,3.092,460,2.042,461,3.871,462,2.042,463,3.092,464,3.071,465,3.092,466,2.042,467,3.092,468,3.092,469,2.042,470,3.092,471,2.042,472,3.092,473,2.545,474,2.042,475,3.092,476,2.042,477,3.092,478,2.042,479,1.681,480,2.042,481,2.042,482,2.042,483,2.042,484,2.545,485,3.092,486,2.042,487,3.092,488,2.042,489,2.042,490,2.042,491,2.042,492,1.681,493,2.042,494,1.681,495,2.042,496,2.042,497,2.042,498,2.042,499,1.681,500,2.042,501,2.042,502,2.042,503,2.042,504,2.042,505,1.681,506,2.042,507,2.042,508,2.042,509,2.042,510,2.042,511,2.042,512,2.042,513,2.042,514,2.042,515,2.042,516,2.042,517,2.042,518,2.042]],["title/classes/RegisterPayload.html",[71,0.288,206,1.661]],["body/classes/RegisterPayload.html",[3,0.472,4,0.411,5,0.3,7,0.676,9,0.604,16,1.665,17,3.139,18,0.04,30,1.495,35,1.407,36,0.863,38,2.34,52,0.55,60,1.731,70,0.472,71,0.483,93,0.02,94,0.027,95,0.02,139,2.788,192,3.464,203,2.608,206,2.316,247,2.073,283,3.273,316,1.949,340,2.222,401,2.906,405,2.788,432,4.169,433,2.588,435,4.642,436,2.588,438,4.346,439,3.464,440,4.473,441,2.588,442,2.222,443,2.588,519,2.588,520,3.144,521,3.144,522,3.144,523,4.207,524,4.207,525,3.144,526,3.144,527,3.144,528,4.207,529,3.144]],["title/modules/WinstonModule.html",[83,0.514,110,1.661]],["body/modules/WinstonModule.html",[3,0.483,4,0.421,5,0.307,10,1.287,18,0.04,30,1.262,34,1.709,35,1.139,36,0.728,37,1.544,39,1.396,52,0.628,53,1.544,55,0.857,70,0.483,71,0.307,72,1.67,78,1.262,83,0.977,93,0.021,94,0.028,95,0.021,97,1.287,102,2.424,103,2.105,110,2.814,115,1.995,116,2.126,181,1.262,320,3.613,384,1.995,530,3.218,531,3.218,532,4.273,533,3.169,534,3.218,535,4.273,536,2.929,537,5.32,538,4.273,539,3.218,540,2.814,541,3.218,542,3.518,543,4.273,544,3.218,545,2.275,546,2.275,547,3.218,548,4.273,549,3.218,550,3.218,551,3.218]],["title/interfaces/WinstonModuleAsyncOptions.html",[361,1.207,540,1.661]],["body/interfaces/WinstonModuleAsyncOptions.html",[3,0.536,4,0.467,5,0.34,7,0.768,9,0.686,18,0.04,36,0.86,37,1.653,39,1.495,52,0.598,70,0.686,83,0.907,93,0.023,94,0.03,95,0.023,102,2.027,116,2.438,134,2.772,135,3.298,174,2.214,179,2.836,247,2.254,353,2.254,361,1.428,393,2.214,399,3.233,461,2.941,533,2.836,536,3.028,540,2.518,542,3.766,552,2.525,553,4.574,554,4.574,555,4.574,556,3.572,557,3.572,558,3.233,559,3.572]],["title/coverage.html",[560,2.893]],["body/coverage.html",[0,2.24,1,1.855,5,0.285,6,2.463,18,0.04,36,0.51,56,1.474,63,1.081,71,0.441,82,1.196,83,0.51,93,0.019,94,0.026,95,0.019,125,0.797,131,1.647,150,0.978,169,1.793,171,2.463,186,1.855,187,2.463,194,1.647,206,1.647,212,1.474,229,1.647,246,2.463,256,1.647,317,2.876,318,1.855,344,3.667,361,1.849,396,2.876,407,2.463,430,2.463,451,2.463,519,2.463,540,1.647,545,2.115,546,2.115,552,2.115,560,2.115,561,2.115,562,2.463,563,2.992,564,2.463,565,5.026,566,5.941,567,2.992,568,2.115,569,5.191,570,4.069,571,2.992,572,2.992,573,2.992,574,3.35,575,2.463,576,2.463,577,3.35,578,4.51,579,2.463,580,2.463,581,2.463,582,2.463,583,2.463,584,2.463,585,2.463,586,2.463,587,2.463,588,2.992,589,2.992]],["title/dependencies.html",[98,1.449,590,2.533]],["body/dependencies.html",[5,0.327,18,0.04,55,0.913,60,1.887,62,2.125,67,2.125,68,2.423,69,2.423,71,0.424,93,0.022,94,0.029,95,0.022,98,1.371,116,1.974,118,2.822,119,2.822,123,2.125,232,2.423,238,2.125,356,2.423,358,2.423,397,2.125,404,2.423,420,3.667,442,2.423,473,2.822,591,3.428,592,5.239,593,3.428,594,3.428,595,3.428,596,3.428,597,3.667,598,3.498,599,4.313,600,3.428,601,3.428,602,3.428,603,3.428,604,3.428,605,3.428,606,3.428,607,3.428,608,3.667,609,3.667,610,3.428,611,2.822,612,3.428,613,3.428,614,3.667,615,3.428,616,3.428,617,3.428,618,3.428,619,3.428,620,3.428,621,3.428,622,3.428,623,3.428,624,3.428,625,3.428,626,3.428,627,3.428,628,3.428,629,3.428,630,2.423,631,3.428,632,2.822,633,3.428,634,3.428,635,3.428]],["title/miscellaneous/enumerations.html",[636,1.248,637,2.983]],["body/miscellaneous/enumerations.html",[9,0.873,18,0.037,93,0.029,94,0.034,95,0.029,334,3.288,479,4.366,568,3.215,636,2.241,637,3.745,638,3.745,639,5.304,640,5.304]],["title/index.html",[9,0.486,641,2.085,642,2.085]],["body/index.html",[4,0.204,5,0.299,7,0.335,8,3.246,16,0.739,18,0.038,36,0.266,49,1.939,50,1.945,51,2.218,52,0.515,67,2.605,83,0.671,91,1.378,93,0.01,94,0.016,95,0.01,96,0.858,98,1.766,113,1.391,116,1.11,125,0.667,134,0.768,150,0.509,174,1.552,176,0.966,177,2.166,181,0.739,185,0.966,190,0.966,240,1.283,258,1.102,260,0.966,265,1.283,266,2.062,274,1.102,276,1.283,281,2.062,294,1.283,296,1.283,298,1.77,300,1.283,306,2.782,325,1.102,328,0.858,332,1.102,339,1.102,342,2.54,344,0.966,353,1.234,360,1.102,371,1.102,373,1.102,378,1.102,380,1.102,382,1.102,405,1.378,452,1.283,484,2.584,492,2.062,494,1.283,499,1.283,536,1.378,560,1.77,561,1.77,565,2.584,597,2.584,598,3.512,599,4.291,608,2.958,609,3.24,611,2.958,614,2.584,630,1.102,632,2.584,643,1.559,644,1.559,645,3.593,646,2.504,647,1.559,648,1.559,649,1.559,650,1.559,651,2.504,652,1.559,653,1.559,654,2.504,655,1.559,656,3.593,657,2.504,658,2.504,659,1.559,660,1.559,661,3.936,662,3.138,663,1.559,664,1.559,665,3.138,666,1.559,667,1.559,668,1.559,669,5.213,670,3.138,671,3.138,672,3.593,673,1.559,674,2.504,675,2.504,676,1.559,677,1.559,678,1.559,679,1.559,680,1.283,681,1.283,682,2.958,683,1.559,684,3.138,685,1.559,686,2.504,687,1.559,688,1.559,689,1.559,690,3.138,691,2.504,692,3.636,693,1.559,694,2.504,695,1.559,696,3.138,697,1.559,698,1.559,699,3.138,700,1.283,701,3.593,702,1.559,703,1.559,704,3.936,705,2.504,706,1.559,707,1.559,708,1.559,709,1.559,710,2.504,711,1.559,712,4.862,713,3.593,714,3.138,715,1.559,716,3.138,717,4.416,718,2.504,719,1.559,720,2.504,721,2.504,722,1.559,723,1.559,724,1.559,725,1.559,726,1.559,727,1.559,728,1.559,729,1.559,730,2.504,731,3.138,732,1.559,733,1.559,734,1.559,735,1.559,736,1.559,737,1.559,738,1.559,739,2.504,740,1.559,741,1.559,742,1.559,743,1.559,744,1.559,745,1.559,746,1.559,747,2.584,748,1.559,749,1.559,750,1.559,751,1.559,752,1.559,753,1.559,754,1.559,755,1.559,756,1.559,757,1.559,758,1.559,759,1.559,760,1.559,761,1.559,762,1.559,763,2.504,764,1.559,765,2.218,766,1.559,767,1.559,768,1.559,769,2.504,770,2.504,771,1.559,772,2.504,773,1.559,774,1.559,775,1.559,776,2.504,777,1.559,778,2.504,779,1.559,780,1.559,781,2.504,782,1.559,783,1.559,784,2.504,785,1.559,786,2.504,787,1.559,788,1.559,789,1.559,790,2.504,791,1.559,792,1.559,793,1.559,794,1.559,795,1.559,796,2.584,797,1.559,798,1.559,799,1.559,800,1.559,801,1.559,802,1.559,803,1.559,804,1.559,805,1.559,806,1.559,807,2.504,808,2.504,809,2.504,810,1.559,811,1.559,812,1.559,813,1.559,814,2.504,815,3.593,816,3.593,817,2.504,818,2.504,819,1.559,820,1.559,821,1.559,822,3.138,823,3.593,824,1.559,825,1.559,826,3.138,827,1.559,828,1.559,829,1.559,830,1.559,831,1.559,832,1.559,833,1.559,834,1.559,835,1.283,836,1.559,837,1.559,838,1.559,839,2.584,840,2.062,841,1.559,842,1.559,843,1.559,844,1.559,845,1.559,846,1.559,847,1.559,848,1.559,849,1.559,850,1.559,851,1.559,852,1.559,853,1.559,854,1.559,855,1.559,856,1.559,857,1.559,858,1.559,859,1.559,860,1.559,861,1.559,862,2.062,863,2.504,864,1.559,865,1.559,866,1.559,867,1.559,868,1.559,869,1.559,870,1.559,871,1.559,872,1.559,873,1.102,874,1.559]],["title/license.html",[641,2.085,642,2.085,873,1.79]],["body/license.html",[18,0.03,22,2.972,93,0.023,94,0.03,95,0.023,113,1.6,272,2.238,333,2.552,351,3.255,464,2.972,561,2.552,598,2.552,680,2.972,681,2.972,682,2.972,700,4.175,765,3.255,835,2.972,862,3.791,873,2.552,875,5.071,876,3.61,877,3.61,878,3.61,879,4.605,880,3.61,881,3.61,882,3.61,883,3.61,884,3.61,885,3.61,886,4.605,887,5.863,888,3.61,889,3.61,890,3.61,891,3.61,892,3.61,893,3.61,894,3.61,895,3.61,896,3.61,897,3.61,898,4.605,899,3.61,900,3.61,901,3.61,902,3.61,903,3.61,904,3.61,905,4.605,906,4.605,907,3.61,908,3.61,909,3.61,910,3.61,911,3.61,912,3.61,913,3.61,914,3.61,915,3.61,916,3.61,917,3.61,918,3.61,919,3.61,920,3.61,921,3.61,922,3.61,923,3.61,924,3.61,925,3.61,926,3.61,927,3.61,928,3.61,929,3.61,930,3.61,931,3.61]],["title/modules.html",[97,1.637]],["body/modules.html",[18,0.034,93,0.028,94,0.034,95,0.028,96,2.423,97,1.76,107,2.423,108,2.169,109,2.169,110,2.423,796,4.711,932,5.723,933,5.723,934,5.84,935,4.402,936,4.402]],["title/overview.html",[937,3.37]],["body/overview.html",[2,1.941,18,0.039,56,2.471,63,2.061,83,0.601,93,0.023,94,0.029,95,0.023,96,3.281,97,1.41,98,1.41,99,1.941,100,1.941,101,1.941,102,1.563,103,1.737,104,2.903,105,2.903,106,2.903,107,3.262,108,2.699,109,2.81,110,2.761,111,2.497,112,1.941,113,1.563,125,1.411,170,1.941,212,2.471,226,2.903,228,2.903,229,2.761,309,2.903,310,2.903,316,2.186,393,2.186,444,2.903,445,2.903,446,2.903,937,2.903,938,3.526,939,3.526,940,3.526,941,4.536]],["title/miscellaneous/typealiases.html",[636,1.248,942,3.623]],["body/miscellaneous/typealiases.html",[9,0.885,18,0.035,36,0.786,93,0.03,94,0.035,95,0.03,174,2.858,533,3.314,536,2.538,552,3.259,558,3.259,636,2.271,943,4.61,944,4.61]],["title/miscellaneous/variables.html",[328,1.994,636,1.248]],["body/miscellaneous/variables.html",[7,0.712,8,2.784,9,0.429,11,0.991,16,1.659,18,0.04,26,1.386,35,0.882,36,0.988,38,0.991,49,1.102,72,1.081,78,0.977,82,1.575,83,0.671,93,0.014,94,0.021,95,0.014,116,1.929,131,2.396,134,1.63,135,2.442,139,2.558,150,1.287,177,1.822,179,1.386,181,0.977,190,1.386,260,1.386,283,1.386,284,1.386,313,3.243,328,1.231,334,3.483,335,1.581,353,2.809,365,1.822,377,1.581,384,1.386,396,1.581,397,1.386,398,2.724,400,2.724,401,1.231,405,2.558,406,1.841,505,1.841,533,2.051,536,2.168,540,1.231,545,2.339,546,2.339,558,1.581,562,1.841,564,1.841,568,1.581,574,1.841,575,3.584,576,3.584,577,1.841,578,1.841,579,3.243,580,3.243,581,2.724,582,2.724,583,2.724,584,2.724,585,2.724,586,1.841,587,2.724,630,1.581,636,1.102,638,1.841,692,1.841,747,3.243,765,1.581,839,2.724,840,4.255,945,2.236,946,3.309,947,2.236,948,2.236,949,5.033,950,3.309,951,2.236,952,2.236,953,2.236,954,2.236,955,2.236,956,2.236,957,2.236,958,2.236,959,2.236,960,2.236,961,2.236,962,4.646,963,2.236,964,2.236,965,3.309,966,3.309,967,2.236,968,2.236,969,2.236,970,3.309,971,2.236,972,2.236,973,2.236,974,2.236,975,2.236,976,2.236,977,2.236,978,2.236,979,2.236,980,2.236,981,2.236,982,2.236,983,2.236,984,2.236]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["0.1.13",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["0.10.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["0.2.19",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["1.0",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["1.19.2",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":565,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["14d",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["16.1.4",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":939,"title":{},"body":{"overview.html":{}}}],["2.0.1",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/ProfileService.html":{}}}],["201",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["2018",{"_index":877,"title":{},"body":{"license.html":{}}}],["20m",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["2400",{"_index":754,"title":{},"body":{"index.html":{}}}],["3",{"_index":941,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["4",{"_index":940,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":755,"title":{},"body":{"index.html":{}}}],["400",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["401",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["404",{"_index":510,"title":{},"body":{"injectables/ProfileService.html":{}}}],["5",{"_index":938,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["5.7.1",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["7/7",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["8.1.0",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["8080",{"_index":837,"title":{},"body":{"index.html":{}}}],["9/9",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":722,"title":{},"body":{"index.html":{}}}],["_id",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{}}}],["above",{"_index":904,"title":{},"body":{"license.html":{}}}],["abstraction",{"_index":851,"title":{},"body":{"index.html":{}}}],["access",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["accesscontrolmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["accesscontrolmodule.forroles(roles",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["account",{"_index":490,"title":{},"body":{"injectables/ProfileService.html":{}}}],["acguard",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["acguard)@useroles({resource",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["action",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["acts",{"_index":850,"title":{},"body":{"index.html":{}}}],["addbearerauth(swagger_api_auth_name",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":497,"title":{},"body":{"injectables/ProfileService.html":{}}}],["admin_delete_profiles",{"_index":640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["again",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["against",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["aliases",{"_index":943,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alphanumeric",{"_index":751,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":867,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":896,"title":{},"body":{"license.html":{}}}],["angular",{"_index":654,"title":{},"body":{"index.html":{}}}],["another",{"_index":493,"title":{},"body":{"injectables/ProfileService.html":{}}}],["any'})@delete('/api/profile/:username')@apiresponse({status",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["api",{"_index":840,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api/auth",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/docs",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["apimodelproperty",{"_index":438,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["apimodelproperty({required",{"_index":432,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["apiresponse",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["apis",{"_index":844,"title":{},"body":{"index.html":{}}}],["apiusetags",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiusetags(\"authentication",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["app.register(fastifyratelimiter",{"_index":783,"title":{},"body":{"index.html":{}}}],["app.register(headers",{"_index":782,"title":{},"body":{"index.html":{}}}],["app.roles",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app.use",{"_index":789,"title":{},"body":{"index.html":{}}}],["app.use(headers",{"_index":788,"title":{},"body":{"index.html":{}}}],["app/app.roles",{"_index":480,"title":{},"body":{"injectables/ProfileService.html":{}}}],["app_env",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["app_url",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":651,"title":{},"body":{"index.html":{}}}],["applied",{"_index":352,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["appmodule",{"_index":96,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["approles",{"_index":479,"title":{},"body":{"injectables/ProfileService.html":{},"miscellaneous/enumerations.html":{}}}],["approles.admin_delete_profiles",{"_index":511,"title":{},"body":{"injectables/ProfileService.html":{}}}],["appservice",{"_index":56,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appurl",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["args",{"_index":559,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["arising",{"_index":930,"title":{},"body":{"license.html":{}}}],["array",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":496,"title":{},"body":{"injectables/ProfileService.html":{}}}],["associated",{"_index":333,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":542,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["atlas",{"_index":678,"title":{},"body":{"index.html":{}}}],["auth.controller",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":186,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["authmodule",{"_index":107,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":874,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":921,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":212,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":495,"title":{},"body":{"injectables/ProfileService.html":{}}}],["available",{"_index":936,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["backend",{"_index":660,"title":{},"body":{"index.html":{}}}],["backers",{"_index":868,"title":{},"body":{"index.html":{}}}],["bad",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception",{"_index":475,"title":{},"body":{"injectables/ProfileService.html":{}}}],["base",{"_index":743,"title":{},"body":{"index.html":{}}}],["based",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["basis",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["being",{"_index":801,"title":{},"body":{"index.html":{}}}],["below",{"_index":696,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":762,"title":{},"body":{"index.html":{}}}],["between",{"_index":769,"title":{},"body":{"index.html":{}}}],["bloated",{"_index":799,"title":{},"body":{"index.html":{}}}],["body",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["boilerplate",{"_index":656,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":343,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["bootstrap",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["both",{"_index":691,"title":{},"body":{"index.html":{}}}],["box",{"_index":665,"title":{},"body":{"index.html":{}}}],["browse",{"_index":934,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":932,"title":{},"body":{"modules.html":{}}}],["build",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":646,"title":{},"body":{"index.html":{}}}],["c",{"_index":876,"title":{},"body":{"license.html":{}}}],["callback",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["change",{"_index":768,"title":{},"body":{"index.html":{}}}],["changed",{"_index":764,"title":{},"body":{"index.html":{}}}],["charge",{"_index":883,"title":{},"body":{"license.html":{}}}],["check",{"_index":386,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["checks",{"_index":338,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["choose",{"_index":492,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["choosing",{"_index":759,"title":{},"body":{"index.html":{}}}],["claim",{"_index":924,"title":{},"body":{"license.html":{}}}],["class",{"_index":71,"title":{"classes/ConfigService.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":316,"title":{},"body":{"classes/ConfigService.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"overview.html":{}}}],["cloud",{"_index":676,"title":{},"body":{"index.html":{}}}],["cluster",{"_index":677,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":309,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":310,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":444,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":445,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_providers",{"_index":446,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["code",{"_index":772,"title":{},"body":{"index.html":{}}}],["collection",{"_index":757,"title":{},"body":{"index.html":{}}}],["comes",{"_index":661,"title":{},"body":{"index.html":{}}}],["command",{"_index":704,"title":{},"body":{"index.html":{}}}],["completed",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["completed'})@apiresponse({status",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["compose",{"_index":690,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":903,"title":{},"body":{"license.html":{}}}],["config",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["config.service",{"_index":312,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["config/config.service",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":108,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":125,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["configservice(\".env",{"_index":315,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get(\"db_url",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"webtoken_expiration_time",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get(\"webtoken_secret_key",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.isenv(\"dev",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.validateinput(config",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["configuration",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":860,"title":{},"body":{"index.html":{}}}],["configureopenapi",{"_index":587,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conflict",{"_index":723,"title":{},"body":{"index.html":{}}}],["connection",{"_index":680,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":781,"title":{},"body":{"index.html":{}}}],["const",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["constructor(config",{"_index":173,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(configservice",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(filepath",{"_index":322,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["constructor(jwtservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(profilemodel",{"_index":455,"title":{},"body":{"injectables/ProfileService.html":{}}}],["contain",{"_index":326,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["container",{"_index":729,"title":{},"body":{"index.html":{}}}],["contract",{"_index":927,"title":{},"body":{"license.html":{}}}],["control",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller(\"api/auth",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["copies",{"_index":898,"title":{},"body":{"license.html":{}}}],["copy",{"_index":886,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":875,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":560,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cp",{"_index":702,"title":{},"body":{"index.html":{}}}],["create",{"_index":452,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["create(payload",{"_index":459,"title":{},"body":{"injectables/ProfileService.html":{}}}],["created",{"_index":500,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createdprofile",{"_index":501,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createdprofile.save",{"_index":512,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createlogger(loggeropts",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["createtoken",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(undefined",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["createwinstonasyncproviders",{"_index":545,"title":{},"body":{"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwinstonasyncproviders(options",{"_index":550,"title":{},"body":{"modules/WinstonModule.html":{}}}],["createwinstonproviders",{"_index":546,"title":{},"body":{"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwinstonproviders(options",{"_index":549,"title":{},"body":{"modules/WinstonModule.html":{}}}],["crypto",{"_index":473,"title":{},"body":{"injectables/ProfileService.html":{},"dependencies.html":{}}}],["crypto.createhmac(\"sha256",{"_index":487,"title":{},"body":{"injectables/ProfileService.html":{}}}],["current",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currently",{"_index":491,"title":{},"body":{"injectables/ProfileService.html":{}}}],["d",{"_index":509,"title":{},"body":{"injectables/ProfileService.html":{}}}],["daily",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["damages",{"_index":925,"title":{},"body":{"license.html":{}}}],["data",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["databases",{"_index":854,"title":{},"body":{"index.html":{}}}],["date",{"_index":400,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["date%.log",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["date.now",{"_index":406,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["datepattern",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["db_url",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["dd",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":888,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":931,"title":{},"body":{"license.html":{}}}],["debug",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["declarations",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["declaring",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["dedicated",{"_index":846,"title":{},"body":{"index.html":{}}}],["default",{"_index":353,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default(\"dev",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["default_read",{"_index":639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["defaultmeta",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{}}}],["delete",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/ProfileService.html":{}}}],["delete(\"/api/profile/:username",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["delete(@param(\"username",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["delete(username",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/ProfileService.html":{}}}],["deleted",{"_index":517,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deletes",{"_index":463,"title":{},"body":{"injectables/ProfileService.html":{}}}],["demand",{"_index":828,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":98,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploying",{"_index":699,"title":{},"body":{"index.html":{}}}],["describe",{"_index":842,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":685,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":775,"title":{},"body":{"index.html":{}}}],["details",{"_index":857,"title":{},"body":{"index.html":{}}}],["determines",{"_index":741,"title":{},"body":{"index.html":{}}}],["dev",{"_index":742,"title":{},"body":{"index.html":{}}}],["development",{"_index":718,"title":{},"body":{"index.html":{}}}],["directory",{"_index":727,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":894,"title":{},"body":{"license.html":{}}}],["docker",{"_index":669,"title":{},"body":{"index.html":{}}}],["docs",{"_index":826,"title":{},"body":{"index.html":{}}}],["document",{"_index":398,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":561,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentbuilder",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["done",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dotenv",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["dto",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dynamicmodule",{"_index":537,"title":{},"body":{"modules/WinstonModule.html":{}}}],["e2e",{"_index":817,"title":{},"body":{"index.html":{}}}],["each",{"_index":499,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["efficient",{"_index":647,"title":{},"body":{"index.html":{}}}],["email",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["encrypt/decrypt",{"_index":748,"title":{},"body":{"index.html":{}}}],["end",{"_index":834,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ensures",{"_index":347,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["enumerations",{"_index":637,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":342,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["env.example",{"_index":703,"title":{},"body":{"index.html":{}}}],["envconfig",{"_index":318,"title":{"interfaces/EnvConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["environment",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["envvarsschema",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["envvarsschema.validate",{"_index":388,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error(`config",{"_index":389,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error.message",{"_index":390,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["especially",{"_index":800,"title":{},"body":{"index.html":{}}}],["event",{"_index":920,"title":{},"body":{"license.html":{}}}],["exec",{"_index":484,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["execute",{"_index":726,"title":{},"body":{"index.html":{}}}],["executing",{"_index":740,"title":{},"body":{"index.html":{}}}],["existing",{"_index":706,"title":{},"body":{"index.html":{}}}],["exists",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["exp",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["expire",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["expires",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["expiresprettyprint",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["exports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"overview.html":{}}}],["exposed",{"_index":720,"title":{},"body":{"index.html":{}}}],["express",{"_index":598,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["extends",{"_index":399,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["extractjwt",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factory",{"_index":555,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["failed",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/ProfileService.html":{}}}],["fastify",{"_index":599,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fastifyadapter",{"_index":776,"title":{},"body":{"index.html":{}}}],["fastifyratelimiter",{"_index":779,"title":{},"body":{"index.html":{}}}],["features",{"_index":664,"title":{},"body":{"index.html":{}}}],["fetches",{"_index":331,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{}}}],["field",{"_index":435,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["filename",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["filepath",{"_index":324,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["files",{"_index":835,"title":{},"body":{"index.html":{},"license.html":{}}}],["findone",{"_index":486,"title":{},"body":{"injectables/ProfileService.html":{}}}],["fitness",{"_index":916,"title":{},"body":{"license.html":{}}}],["folder",{"_index":832,"title":{},"body":{"index.html":{}}}],["follow",{"_index":693,"title":{},"body":{"index.html":{}}}],["following",{"_index":682,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["formats",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["forroot",{"_index":531,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forroot(options",{"_index":532,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forrootasync",{"_index":538,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forrootasync(options",{"_index":539,"title":{},"body":{"modules/WinstonModule.html":{}}}],["found",{"_index":823,"title":{},"body":{"index.html":{}}}],["framework",{"_index":645,"title":{},"body":{"index.html":{}}}],["free",{"_index":882,"title":{},"body":{"license.html":{}}}],["front",{"_index":833,"title":{},"body":{"index.html":{}}}],["fs",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["function",{"_index":554,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["furnished",{"_index":901,"title":{},"body":{"license.html":{}}}],["further",{"_index":856,"title":{},"body":{"index.html":{}}}],["generate",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["generated",{"_index":827,"title":{},"body":{"index.html":{}}}],["get(\"/api/profile",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/api/profile')@useguards(undefined)@apiresponse({status",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@useguards(undefined)@apiresponse({status",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["get(id",{"_index":465,"title":{},"body":{"injectables/ProfileService.html":{}}}],["get(key",{"_index":329,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["getbyusername",{"_index":453,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusername(username",{"_index":468,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusernameandpass",{"_index":454,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusernameandpass(username",{"_index":470,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@req",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["getstring",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":641,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":824,"title":{},"body":{"index.html":{}}}],["given",{"_index":335,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":543,"title":{},"body":{"modules/WinstonModule.html":{}}}],["grab",{"_index":679,"title":{},"body":{"index.html":{}}}],["granted",{"_index":881,"title":{},"body":{"license.html":{}}}],["graph",{"_index":935,"title":{},"body":{"modules.html":{}}}],["gravatar",{"_index":404,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["gravatar.url(payload.email",{"_index":503,"title":{},"body":{"injectables/ProfileService.html":{}}}],["grow",{"_index":864,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["hashed",{"_index":472,"title":{},"body":{"injectables/ProfileService.html":{}}}],["header",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":778,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":652,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":611,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["here",{"_index":872,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":880,"title":{},"body":{"license.html":{}}}],["holders",{"_index":922,"title":{},"body":{"license.html":{}}}],["hosting",{"_index":836,"title":{},"body":{"index.html":{}}}],["hour",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["hours",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["http",{"_index":505,"title":{},"body":{"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:27017",{"_index":736,"title":{},"body":{"index.html":{}}}],["http://localhost:9000",{"_index":735,"title":{},"body":{"index.html":{}}}],["https",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["iat",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":467,"title":{},"body":{"injectables/ProfileService.html":{}}}],["identifier",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["images",{"_index":732,"title":{},"body":{"index.html":{}}}],["implied",{"_index":912,"title":{},"body":{"license.html":{}}}],["import",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{}}}],["imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{}}}],["included",{"_index":907,"title":{},"body":{"license.html":{}}}],["including",{"_index":351,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":394,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["indicating",{"_index":752,"title":{},"body":{"index.html":{}}}],["inestapplication",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["inject",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inject(\"winston",{"_index":180,"title":{},"body":{"injectables/AppService.html":{}}}],["injectable",{"_index":169,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["injectables",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["injected",{"_index":327,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["injecting",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectmodel",{"_index":474,"title":{},"body":{"injectables/ProfileService.html":{}}}],["injectmodel(\"profile",{"_index":481,"title":{},"body":{"injectables/ProfileService.html":{}}}],["inspired",{"_index":653,"title":{},"body":{"index.html":{}}}],["install",{"_index":711,"title":{},"body":{"index.html":{}}}],["instead",{"_index":766,"title":{},"body":{"index.html":{}}}],["interface",{"_index":361,"title":{"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":393,"title":{},"body":{"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":476,"title":{},"body":{"injectables/ProfileService.html":{}}}],["ip",{"_index":791,"title":{},"body":{"index.html":{}}}],["iprofile",{"_index":256,"title":{"interfaces/IProfile.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["isalphanumeric",{"_index":439,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["isemail",{"_index":528,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["isenv",{"_index":319,"title":{},"body":{"classes/ConfigService.html":{}}}],["isenv(env",{"_index":336,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["isnotempty",{"_index":440,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["it's",{"_index":753,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":350,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.number().default(1800",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.object",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.objectschema",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().regex(/^mongodb",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().required",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().uri",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["join",{"_index":870,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":229,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":332,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["kind",{"_index":911,"title":{},"body":{"license.html":{}}}],["layer",{"_index":852,"title":{},"body":{"index.html":{}}}],["leave",{"_index":798,"title":{},"body":{"index.html":{}}}],["legend",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["level",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":926,"title":{},"body":{"license.html":{}}}],["liable",{"_index":923,"title":{},"body":{"license.html":{}}}],["license",{"_index":873,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":863,"title":{},"body":{"index.html":{}}}],["limit",{"_index":609,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["limitation",{"_index":890,"title":{},"body":{"license.html":{}}}],["limited",{"_index":913,"title":{},"body":{"license.html":{}}}],["line",{"_index":683,"title":{},"body":{"index.html":{}}}],["lines",{"_index":771,"title":{},"body":{"index.html":{}}}],["loads",{"_index":728,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":710,"title":{},"body":{"index.html":{}}}],["locally",{"_index":673,"title":{},"body":{"index.html":{}}}],["location",{"_index":848,"title":{},"body":{"index.html":{}}}],["logger",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loggeroptions",{"_index":558,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loggeropts",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":662,"title":{},"body":{"index.html":{}}}],["login",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginPayload.html":{}}}],["login(@body",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginpayload",{"_index":194,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginPayload.html":{},"coverage.html":{}}}],["logs",{"_index":859,"title":{},"body":{"index.html":{}}}],["logs/application",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["logs/error.log",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["made",{"_index":657,"title":{},"body":{"index.html":{}}}],["main",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["main.ts",{"_index":773,"title":{},"body":{"index.html":{}}}],["mainly",{"_index":744,"title":{},"body":{"index.html":{}}}],["make",{"_index":670,"title":{},"body":{"index.html":{}}}],["manually",{"_index":698,"title":{},"body":{"index.html":{}}}],["mapping",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["matches",{"_index":340,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"classes/RegisterPayload.html":{}}}],["matches(/^[a",{"_index":529,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["matching",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor((ntime",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["math.floor(ntime",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["max",{"_index":784,"title":{},"body":{"index.html":{}}}],["maxfiles",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["maxsize",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["merchantability",{"_index":915,"title":{},"body":{"license.html":{}}}],["merge",{"_index":892,"title":{},"body":{"license.html":{}}}],["message",{"_index":516,"title":{},"body":{"injectables/ProfileService.html":{}}}],["meta",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["minlength",{"_index":441,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["minlength(8",{"_index":443,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["mins",{"_index":756,"title":{},"body":{"index.html":{}}}],["minute",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["minutes",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["miscellaneous",{"_index":636,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":862,"title":{},"body":{"index.html":{},"license.html":{}}}],["mm",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":456,"title":{},"body":{"injectables/ProfileService.html":{}}}],["modify",{"_index":681,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":83,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulemetadata",{"_index":556,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["modules",{"_index":97,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/payload/register.payload",{"_index":478,"title":{},"body":{"injectables/ProfileService.html":{}}}],["mongo",{"_index":675,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":672,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":397,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{}}}],["mongoosemodule.forfeature",{"_index":450,"title":{},"body":{"modules/ProfileModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleasyncoptions",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":871,"title":{},"body":{"index.html":{}}}],["moved",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["moving",{"_index":797,"title":{},"body":{"index.html":{}}}],["msanvarov",{"_index":878,"title":{},"body":{"license.html":{}}}],["name",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":348,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["nest",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestfactory.create",{"_index":780,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":787,"title":{},"body":{"index.html":{}}}],["nestfastifyapplication",{"_index":777,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":557,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["nestjs/core",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":597,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/swagger",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":644,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":668,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":919,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":477,"title":{},"body":{"injectables/ProfileService.html":{}}}],["note",{"_index":794,"title":{},"body":{"index.html":{}}}],["notice",{"_index":905,"title":{},"body":{"license.html":{}}}],["npm",{"_index":712,"title":{},"body":{"index.html":{}}}],["ntime",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["number(time",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":325,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["obtaining",{"_index":885,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":806,"title":{},"body":{"index.html":{}}}],["offers",{"_index":760,"title":{},"body":{"index.html":{}}}],["one",{"_index":494,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["ones",{"_index":774,"title":{},"body":{"index.html":{}}}],["open",{"_index":839,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["operating",{"_index":688,"title":{},"body":{"index.html":{}}}],["operations",{"_index":853,"title":{},"body":{"index.html":{}}}],["optional",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["options",{"_index":536,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.imports",{"_index":551,"title":{},"body":{"modules/WinstonModule.html":{}}}],["options.inject",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.usefactory",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otherwise",{"_index":929,"title":{},"body":{"license.html":{}}}],["out",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlined",{"_index":695,"title":{},"body":{"index.html":{}}}],["over",{"_index":763,"title":{},"body":{"index.html":{}}}],["overview",{"_index":937,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":590,"title":{"dependencies.html":{}},"body":{}}],["package.jsoncomes",{"_index":795,"title":{},"body":{"index.html":{}}}],["pages",{"_index":825,"title":{},"body":{"index.html":{}}}],["param",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["parameter",{"_index":341,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["param{req",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["parse",{"_index":355,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["parse(fs.readfilesync(filepath",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["particular",{"_index":917,"title":{},"body":{"license.html":{}}}],["passport",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":401,"title":{},"body":{"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["password).digest(\"hex",{"_index":488,"title":{},"body":{"injectables/ProfileService.html":{}}}],["paylaod",{"_index":431,"title":{},"body":{"classes/LoginPayload.html":{}}}],["payload",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{}}}],["payload.password",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.password).digest(\"hex",{"_index":502,"title":{},"body":{"injectables/ProfileService.html":{}}}],["payload.username",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload/login.payload",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["payload/register.payload",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["per",{"_index":793,"title":{},"body":{"index.html":{}}}],["performance",{"_index":761,"title":{},"body":{"index.html":{}}}],["permission",{"_index":879,"title":{},"body":{"license.html":{}}}],["permit",{"_index":899,"title":{},"body":{"license.html":{}}}],["person",{"_index":884,"title":{},"body":{"license.html":{}}}],["personal",{"_index":707,"title":{},"body":{"index.html":{}}}],["persons",{"_index":900,"title":{},"body":{"license.html":{}}}],["pg",{"_index":508,"title":{},"body":{"injectables/ProfileService.html":{}}}],["pick",{"_index":553,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["please",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["port",{"_index":721,"title":{},"body":{"index.html":{}}}],["portions",{"_index":909,"title":{},"body":{"license.html":{}}}],["possession",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["post",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apiresponse({status",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiresponse({status",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["pre",{"_index":715,"title":{},"body":{"index.html":{}}}],["preferred",{"_index":687,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["prerequisites",{"_index":667,"title":{},"body":{"index.html":{}}}],["prettyprintseconds",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["prettyprintseconds(time",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["private",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["proceed",{"_index":767,"title":{},"body":{"index.html":{}}}],["prod",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["produce",{"_index":831,"title":{},"body":{"index.html":{}}}],["production",{"_index":716,"title":{},"body":{"index.html":{}}}],["profile",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profile.deletedcount",{"_index":515,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile.model",{"_index":449,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["profile.service",{"_index":448,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile/profile.model",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile/profile.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["profile/profile.service",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["profilemodel",{"_index":458,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profilemodule",{"_index":109,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profiles",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["profileservice",{"_index":63,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":643,"title":{},"body":{"index.html":{}}}],["project",{"_index":731,"title":{},"body":{"index.html":{}}}],["promise",{"_index":461,"title":{},"body":{"injectables/ProfileService.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["properties",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["protocol",{"_index":504,"title":{},"body":{"injectables/ProfileService.html":{}}}],["prototype",{"_index":659,"title":{},"body":{"index.html":{}}}],["provide",{"_index":313,"title":{},"body":{"modules/ConfigModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":464,"title":{},"body":{"injectables/ProfileService.html":{},"license.html":{}}}],["provider",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"overview.html":{}}}],["provides",{"_index":845,"title":{},"body":{"index.html":{}}}],["public",{"_index":548,"title":{},"body":{"modules/WinstonModule.html":{}}}],["publish",{"_index":893,"title":{},"body":{"license.html":{}}}],["purge",{"_index":807,"title":{},"body":{"index.html":{}}}],["purger",{"_index":804,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":918,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":658,"title":{},"body":{"index.html":{}}}],["r",{"_index":507,"title":{},"body":{"injectables/ProfileService.html":{}}}],["random",{"_index":750,"title":{},"body":{"index.html":{}}}],["rate",{"_index":608,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ratelimiter",{"_index":786,"title":{},"body":{"index.html":{}}}],["react",{"_index":724,"title":{},"body":{"index.html":{}}}],["read",{"_index":739,"title":{},"body":{"index.html":{}}}],["readable",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["received",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["received'})@apiresponse({status",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["recommended",{"_index":803,"title":{},"body":{"index.html":{}}}],["records",{"_index":518,"title":{},"body":{"injectables/ProfileService.html":{}}}],["reflect",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterPayload.html":{}}}],["register(@body",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerpayload",{"_index":206,"title":{"classes/RegisterPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"coverage.html":{}}}],["registration",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["relational",{"_index":849,"title":{},"body":{"index.html":{}}}],["remove",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["removed",{"_index":746,"title":{},"body":{"index.html":{}}}],["removing",{"_index":808,"title":{},"body":{"index.html":{}}}],["replace",{"_index":705,"title":{},"body":{"index.html":{}}}],["represents",{"_index":384,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["req",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["request'})@apiresponse({status",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":792,"title":{},"body":{"index.html":{}}}],["required",{"_index":405,"title":{},"body":{"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["resolve",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["resource",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["respectively",{"_index":737,"title":{},"body":{"index.html":{}}}],["restful",{"_index":843,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":889,"title":{},"body":{"license.html":{}}}],["result",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["rights",{"_index":891,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["rm",{"_index":809,"title":{},"body":{"index.html":{}}}],["role",{"_index":498,"title":{},"body":{"injectables/ProfileService.html":{}}}],["roles",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesbuilder",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":172,"title":{},"body":{"injectables/AppService.html":{}}}],["rotate",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["rotatefile",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["routes",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":717,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":506,"title":{},"body":{"injectables/ProfileService.html":{}}}],["save",{"_index":812,"title":{},"body":{"index.html":{}}}],["saveif",{"_index":811,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":648,"title":{},"body":{"index.html":{}}}],["schema",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"modules/ProfileModule.html":{},"miscellaneous/variables.html":{}}}],["schema.types.objectid",{"_index":402,"title":{},"body":{"interfaces/IProfile.html":{}}}],["scheme",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["schemes",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["seconds",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["secret",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["secretorkey",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":663,"title":{},"body":{"index.html":{}}}],["sell",{"_index":897,"title":{},"body":{"license.html":{}}}],["server",{"_index":649,"title":{},"body":{"index.html":{}}}],["service",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{}}}],["set",{"_index":339,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["setdescription(swagger_api_description",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setschemes(...swagger_api_schemes",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":708,"title":{},"body":{"index.html":{}}}],["settitle(swagger_api_name",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":686,"title":{},"body":{"index.html":{}}}],["setversion(swagger_api_current_version",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":906,"title":{},"body":{"license.html":{}}}],["short",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showcase",{"_index":745,"title":{},"body":{"index.html":{}}}],["side",{"_index":650,"title":{},"body":{"index.html":{}}}],["signed",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["simply",{"_index":829,"title":{},"body":{"index.html":{}}}],["software",{"_index":887,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{}}}],["specification",{"_index":841,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":866,"title":{},"body":{"index.html":{}}}],["src/.../app.roles.ts",{"_index":638,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.hmr.ts",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profile.model.ts",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston.constants.ts",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston.interfaces.ts",{"_index":944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../winston.providers.ts",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.hmr.ts",{"_index":564,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/modules/app/app.controller.ts:32",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.controller.ts:46",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.controller.ts:63",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.module.ts",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/app/app.roles.ts",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/modules/app/app.service.ts",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/app/app.service.ts:24",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/app/app.service.ts:9",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:32",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:45",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:17",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:37",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:49",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:64",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:12",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:33",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/payload/login.payload.ts",{"_index":430,"title":{},"body":{"classes/LoginPayload.html":{},"coverage.html":{}}}],["src/modules/auth/payload/login.payload.ts:16",{"_index":437,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/payload/login.payload.ts:26",{"_index":434,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts",{"_index":519,"title":{},"body":{"classes/RegisterPayload.html":{},"coverage.html":{}}}],["src/modules/auth/payload/register.payload.ts:22",{"_index":521,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:32",{"_index":527,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:42",{"_index":525,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:52",{"_index":526,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/config/config.module.ts",{"_index":311,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/modules/config/config.service.ts",{"_index":317,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["src/modules/config/config.service.ts:19",{"_index":323,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:34",{"_index":346,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:68",{"_index":330,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:77",{"_index":337,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:8",{"_index":395,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["src/modules/profile/profile.model.ts",{"_index":396,"title":{},"body":{"interfaces/IProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/profile/profile.module.ts",{"_index":447,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/modules/profile/profile.service.ts",{"_index":451,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/modules/profile/profile.service.ts:19",{"_index":457,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:32",{"_index":466,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:40",{"_index":469,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:49",{"_index":471,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:62",{"_index":460,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:89",{"_index":462,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/winston/winston.constants.ts",{"_index":574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/winston/winston.interfaces.ts",{"_index":552,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/winston/winston.module.ts",{"_index":530,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.module.ts:21",{"_index":534,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.module.ts:35",{"_index":541,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.providers.ts",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/constants.ts",{"_index":578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/index.ts",{"_index":586,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv",{"_index":709,"title":{},"body":{"index.html":{}}}],["stack",{"_index":734,"title":{},"body":{"index.html":{}}}],["start",{"_index":714,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":719,"title":{},"body":{"index.html":{}}}],["started",{"_index":642,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":733,"title":{},"body":{"index.html":{}}}],["statements",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":320,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"modules/WinstonModule.html":{}}}],["status",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["steps",{"_index":694,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":902,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":895,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":908,"title":{},"body":{"license.html":{}}}],["super",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":796,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":671,"title":{},"body":{"index.html":{}}}],["svg",{"_index":933,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":614,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swagger_api_auth_location",{"_index":579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_auth_name",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_current_version",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_description",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_name",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_root",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_schemes",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(swagger_api_root",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":689,"title":{},"body":{"index.html":{}}}],["table",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":816,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":820,"title":{},"body":{"index.html":{}}}],["test:covnon",{"_index":819,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":818,"title":{},"body":{"index.html":{}}}],["testing",{"_index":813,"title":{},"body":{"index.html":{}}}],["tests",{"_index":815,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":865,"title":{},"body":{"index.html":{}}}],["then(profile",{"_index":514,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.appservice.root",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.createtoken(user",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get(\"app_url",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["this.configservice.get(\"webtoken_expiration_time",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.envconfig",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.envconfig.app_env",{"_index":392,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.envconfig[key",{"_index":391,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.expiration",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbyusername(payload.username",{"_index":489,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.jwtservice.sign",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.info(\"logging",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["this.prettyprintseconds(this.expiration",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.profilemodel",{"_index":485,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.deleteone",{"_index":513,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.findbyid(id).exec",{"_index":482,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.findone",{"_index":483,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profileservice.create(payload",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.profileservice.delete(username",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["this.profileservice.getbyusernameandpass",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{}}}],["thus",{"_index":802,"title":{},"body":{"index.html":{}}}],["time",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["timediff",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["timewindow",{"_index":785,"title":{},"body":{"index.html":{}}}],["token",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":749,"title":{},"body":{"index.html":{}}}],["tort",{"_index":928,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["true})@isalphanumeric()@isnotempty",{"_index":436,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@isemail()@isnotempty",{"_index":520,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["true})@isnotempty()@minlength(8",{"_index":433,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@matches(/^[a",{"_index":522,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["try",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["two",{"_index":770,"title":{},"body":{"index.html":{}}}],["type",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":942,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedocs",{"_index":822,"title":{},"body":{"index.html":{}}}],["typeorm",{"_index":632,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["types",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/express",{"_index":810,"title":{},"body":{"index.html":{}}}],["typing",{"_index":830,"title":{},"body":{"index.html":{}}}],["ui",{"_index":630,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unit",{"_index":814,"title":{},"body":{"index.html":{}}}],["unused",{"_index":805,"title":{},"body":{"index.html":{}}}],["up",{"_index":730,"title":{},"body":{"index.html":{}}}],["uri",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["use",{"_index":765,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":747,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["usenewurlparser",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["username",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["useroles",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["useunifiedtopology",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":314,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":701,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":674,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":403,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/ProfileService.html":{}}}],["valid",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["valid(\"dev",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validate",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["validate(undefined",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":349,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validatedenvconfig",{"_index":387,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validateinput",{"_index":321,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput(envconfig",{"_index":345,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validates",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(payload",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":385,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["validator",{"_index":442,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"dependencies.html":{}}}],["value",{"_index":334,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":354,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["variable",{"_index":344,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{},"index.html":{}}}],["variables",{"_index":328,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":855,"title":{},"body":{"index.html":{}}}],["vue",{"_index":725,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":914,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":910,"title":{},"body":{"license.html":{}}}],["web",{"_index":692,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpack",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webtoken_expiration_time",{"_index":380,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["webtoken_secret_key",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["whether",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["windowms",{"_index":790,"title":{},"body":{"index.html":{}}}],["winson",{"_index":535,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["winston.format.json",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.simple",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.interfaces",{"_index":544,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston.providers",{"_index":547,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston.transports.console",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["winston/winston.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_options",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["winston_module_provider",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmodule",{"_index":110,"title":{"modules/WinstonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["winstonmodule.forrootasync",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmoduleasyncoptions",{"_index":540,"title":{"interfaces/WinstonModuleAsyncOptions.html":{}},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmoduleoptions",{"_index":533,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":700,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":847,"title":{},"body":{"index.html":{}}}],["x1f3d7",{"_index":758,"title":{},"body":{"index.html":{}}}],["x1f433",{"_index":684,"title":{},"body":{"index.html":{}}}],["x1f465",{"_index":861,"title":{},"body":{"index.html":{}}}],["x1f4a1",{"_index":821,"title":{},"body":{"index.html":{}}}],["x1f4da",{"_index":655,"title":{},"body":{"index.html":{}}}],["x1f4dd",{"_index":838,"title":{},"body":{"index.html":{}}}],["x1f50a",{"_index":858,"title":{},"body":{"index.html":{}}}],["x1f512",{"_index":738,"title":{},"body":{"index.html":{}}}],["x1f680",{"_index":697,"title":{},"body":{"index.html":{}}}],["x1f6e0",{"_index":666,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":713,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":869,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["z",{"_index":524,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["za",{"_index":523,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["zippedarchive",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                App Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                getProfile\n                            \n                            \n                                getString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, ACGuard)@UseRoles({resource: 'profiles', action: 'delete', possession: 'any'})@Delete('/api/profile/:username')@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:63\n                \n            \n\n\n            \n                \n                    Delete route to remove profiles from app\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the username to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/api/profile')@UseGuards(undefined)@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:46\n                \n            \n\n\n            \n                \n                    Debug route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request body\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getString\n                        \n                        \n                    \n                \n            \n            \n                \ngetString()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:32\n                \n            \n\n\n            \n                \n                    Main route\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the application environment url\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, Req, UseGuards } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\nimport { ApiBearerAuth, ApiResponse } from \"@nestjs/swagger\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { ProfileService } from \"../profile/profile.service\";\nimport { ACGuard, UseRoles } from \"nest-access-control\";\n\n/**\n * App Controller\n */\n@Controller()\n@ApiBearerAuth()\nexport class AppController {\n  /**\n   * Constructor\n   * @param appService\n   * @param profileService\n   */\n  constructor(\n    private readonly appService: AppService,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  /**\n   * Main route\n   * @returns {string} the application environment url\n   */\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  getString(): string {\n    return this.appService.root();\n  }\n\n  // These routes can be moved to the profile module.\n\n  /**\n   * Debug route\n   * @param{Req} req the request body\n   */\n  @Get(\"/api/profile\")\n  @UseGuards(AuthGuard())\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  getProfile(@Req() req) {\n    return req.user;\n  }\n\n  /**\n   * Delete route to remove profiles from app\n   * @param {string} username the username to remove\n   */\n  @UseGuards(AuthGuard(), ACGuard)\n  @UseRoles({\n    resource: \"profiles\",\n    action: \"delete\",\n    possession: \"any\",\n  })\n  @Delete(\"/api/profile/:username\")\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  async delete(@Param(\"username\") username: string) {\n    return await this.profileService.delete(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            WinstonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as winston from \"winston\";\nimport * as rotateFile from \"winston-daily-rotate-file\";\nimport { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { MongooseModule, MongooseModuleAsyncOptions } from \"@nestjs/mongoose\";\nimport { ConfigModule } from \"../config/config.module\";\nimport { ConfigService } from \"../config/config.service\";\nimport { AuthModule } from \"../auth/auth.module\";\nimport { ProfileModule } from \"../profile/profile.module\";\nimport { WinstonModule } from \"../winston/winston.module\";\nimport { AccessControlModule } from \"nest-access-control\";\nimport { roles } from \"./app.roles\";\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) =>\n        ({\n          uri: configService.get(\"DB_URL\"),\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n        } as MongooseModuleAsyncOptions),\n    }),\n    WinstonModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return configService.isEnv(\"dev\")\n          ? {\n              level: \"info\",\n              format: winston.format.json(),\n              defaultMeta: { service: \"user-service\" },\n              transports: [\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n              ],\n            }\n          : {\n              level: \"info\",\n              format: winston.format.json(),\n              defaultMeta: { service: \"user-service\" },\n              transports: [\n                new winston.transports.File({\n                  filename: \"logs/error.log\",\n                  level: \"error\",\n                }),\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n                new rotateFile({\n                  filename: \"logs/application-%DATE%.log\",\n                  datePattern: \"YYYY-MM-DD\",\n                  zippedArchive: true,\n                  maxSize: \"20m\",\n                  maxFiles: \"14d\",\n                }),\n              ],\n            };\n      },\n    }),\n    AccessControlModule.forRoles(roles),\n    ConfigModule,\n    AuthModule,\n    ProfileModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Application Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/modules/app/app.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration service\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                logger service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/app/app.service.ts:24\n                \n            \n\n\n            \n                \n                    Main application method\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the application url\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigService } from \"../config/config.service\";\nimport { Logger } from \"winston\";\n\n/**\n * Application Service\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Constructor\n   * @param {ConfigService} config configuration service\n   * @param {Logger} logger logger service\n   */\n  constructor(\n    private config: ConfigService,\n    @Inject(\"winston\") private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Main application method\n   * @returns {string} the application url\n   */\n  root(): string {\n    const appURL = this.config.get(\"APP_URL\");\n    this.logger.info(\"Logging the APP_URL -> \" + appURL);\n    return appURL;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n            \n                Description\n            \n            \n                Authentication Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: LoginPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiResponse({status: 201, description: 'Login Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n                    Authentication route to login\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the login dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiResponse({status: 201, description: 'Registration Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:45\n                \n            \n\n\n            \n                \n                    Authentication route to register\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the registration dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Body, Post } from \"@nestjs/common\";\nimport { ApiResponse, ApiUseTags } from \"@nestjs/swagger\";\nimport { AuthService } from \"./auth.service\";\nimport { LoginPayload } from \"./payload/login.payload\";\nimport { RegisterPayload } from \"./payload/register.payload\";\nimport { ProfileService } from \"../profile/profile.service\";\n\n/**\n * Authentication Controller\n */\n@Controller(\"api/auth\")\n@ApiUseTags(\"authentication\")\nexport class AuthController {\n  /**\n   * Constructor\n   * @param {AuthService} authService authentication service\n   * @param {ProfileService} profileService profile service\n   */\n  constructor(\n    private readonly authService: AuthService,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  /**\n   * Authentication route to login\n   * @param {LoginPayload} payload the login dto\n   */\n  @Post(\"login\")\n  @ApiResponse({ status: 201, description: \"Login Completed\" })\n  @ApiResponse({ status: 400, description: \"Bad Request\" })\n  @ApiResponse({ status: 401, description: \"Unauthorized\" })\n  async login(@Body() payload: LoginPayload) {\n    const user = await this.authService.validateUser(payload);\n    return await this.authService.createToken(user);\n  }\n\n  /**\n   * Authentication route to register\n   * @param {RegisterPayload} payload the registration dto\n   */\n  @Post(\"register\")\n  @ApiResponse({ status: 201, description: \"Registration Completed\" })\n  @ApiResponse({ status: 400, description: \"Bad Request\" })\n  @ApiResponse({ status: 401, description: \"Unauthorized\" })\n  async register(@Body() payload: RegisterPayload) {\n    const user = await this.profileService.create(payload);\n    return await this.authService.createToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            ProfileModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { ConfigModule } from \"../config/config.module\";\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileModule } from \"../profile/profile.module\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtStrategy } from \"./jwt.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [\n    ProfileModule,\n    ConfigModule,\n    PassportModule.register({ defaultStrategy: \"jwt\" }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get(\"WEBTOKEN_SECRET_KEY\"),\n          signOptions: {\n            ...(configService.get(\"WEBTOKEN_EXPIRATION_TIME\")\n              ? {\n                  expiresIn: Number(\n                    configService.get(\"WEBTOKEN_EXPIRATION_TIME\"),\n                  ),\n                }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule.register({ defaultStrategy: \"jwt\" })],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Authentication Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                expiration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Private\n                                prettyPrintSeconds\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                jwt service\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                profile service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(undefined: IProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:37\n                \n            \n\n\n            \n                \n                    Creates a signed jwt token based on payload\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            prettyPrintSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    prettyPrintSeconds(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:49\n                \n            \n\n\n            \n                \n                    Formats the time in seconds into human-readable format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(payload: LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:64\n                \n            \n\n\n            \n                \n                    Validates whether or not the profile exists in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        login payload to authenticate with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                        Time in seconds when the token is to expire\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileService } from \"../profile/profile.service\";\nimport { IProfile } from \"../profile/profile.model\";\nimport { LoginPayload } from \"./payload/login.payload\";\n\n/**\n * Authentication Service\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Time in seconds when the token is to expire\n   * @type {string}\n   */\n  private readonly expiration: string;\n\n  /**\n   * Constructor\n   * @param {JwtService} jwtService jwt service\n   * @param {ConfigService} configService\n   * @param {ProfileService} profileService profile service\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly profileService: ProfileService,\n  ) {\n    this.expiration = this.configService.get(\"WEBTOKEN_EXPIRATION_TIME\");\n  }\n\n  /**\n   * Creates a signed jwt token based on payload\n   * @param {Profile} param dto to generate token from\n   */\n  async createToken({ _id, username, email, avatar }: IProfile) {\n    return {\n      expires: this.expiration,\n      expiresPrettyPrint: this.prettyPrintSeconds(this.expiration),\n      token: this.jwtService.sign({ _id, username, email, avatar }),\n    };\n  }\n\n  /**\n   * Formats the time in seconds into human-readable format\n   * @param {string} time\n   */\n  private prettyPrintSeconds(time: string) {\n    const ntime = Number(time);\n    const hours = Math.floor(ntime / 3600);\n    const minutes = Math.floor((ntime % 3600) / 60);\n    const seconds = Math.floor((ntime % 3600) % 60);\n\n    return `${hours > 0 ? hours + (hours === 1 ? \" hour,\" : \" hours,\") : \"\"} ${\n      minutes > 0 ? minutes + (minutes === 1 ? \" minute\" : \" minutes\") : \"\"\n    } ${seconds > 0 ? seconds + (seconds === 1 ? \" second\" : \" seconds\") : \"\"}`;\n  }\n\n  /**\n   * Validates whether or not the profile exists in the database\n   * @param {LoginPayload} payload login payload to authenticate with\n   */\n  async validateUser(payload: LoginPayload) {\n    const user = await this.profileService.getByUsernameAndPass(\n      payload.username,\n      payload.password,\n    );\n    if (!user) {\n      throw new UnauthorizedException(\n        \"Could not authenticate. Please try again.\",\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(\".env\"),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Config Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                isEnv\n                            \n                            \n                                    Private\n                                    Static\n                                validateInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/config/config.service.ts:19\n                            \n                        \n\n                \n                    \n                        Object that will contain the injected environment variables\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:68\n                \n            \n\n\n            \n                \n                    Fetches the key from the configuration file\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the associated value for a given key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnv\n                        \n                        \n                    \n                \n            \n            \n                \nisEnv(env: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:77\n                \n            \n\n\n            \n                \n                    Checks whether the application environment set in the configuration file matches the environment parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    env\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether or not the environment variable matches the application environment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            validateInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateInput(envConfig: EnvConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:34\n                \n            \n\n\n            \n                \n                    Ensures all needed variables are set, and returns the validated JavaScript object\nincluding the applied default values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    envConfig\n                                    \n                                                EnvConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EnvConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { parse } from \"dotenv\";\nimport * as joi from \"@hapi/joi\";\nimport * as fs from \"fs\";\n\n/**\n * Key-value mapping\n */\nexport interface EnvConfig {\n  [key: string]: string;\n}\n\n/**\n * Config Service\n */\nexport class ConfigService {\n  /**\n   * Object that will contain the injected environment variables\n   */\n  private readonly envConfig: EnvConfig;\n\n  /**\n   * Constructor\n   * @param {string} filePath\n   */\n  constructor(filePath: string) {\n    const config = parse(fs.readFileSync(filePath));\n    this.envConfig = ConfigService.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private static validateInput(envConfig: EnvConfig): EnvConfig {\n    /**\n     * A schema to validate envConfig against\n     */\n    const envVarsSchema: joi.ObjectSchema = joi.object({\n      APP_ENV: joi\n        .string()\n        .valid(\"dev\", \"prod\")\n        .default(\"dev\"),\n      APP_URL: joi.string().uri({\n        scheme: [/https?/],\n      }),\n      WEBTOKEN_SECRET_KEY: joi.string().required(),\n      WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n      DB_URL: joi.string().regex(/^mongodb/),\n    });\n\n    /**\n     * Represents the status of validation check on the configuration file\n     */\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(\n      envConfig,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n\n  /**\n   * Fetches the key from the configuration file\n   * @param {string} key\n   * @returns {string} the associated value for a given key\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Checks whether the application environment set in the configuration file matches the environment parameter\n   * @param {string} env\n   * @returns {boolean} Whether or not the environment variable matches the application environment\n   */\n  isEnv(env: string): boolean {\n    return this.envConfig.APP_ENV === env;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvConfig.html":{"url":"interfaces/EnvConfig.html","title":"interface - EnvConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnvConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Key-value mapping\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { parse } from \"dotenv\";\nimport * as joi from \"@hapi/joi\";\nimport * as fs from \"fs\";\n\n/**\n * Key-value mapping\n */\nexport interface EnvConfig {\n  [key: string]: string;\n}\n\n/**\n * Config Service\n */\nexport class ConfigService {\n  /**\n   * Object that will contain the injected environment variables\n   */\n  private readonly envConfig: EnvConfig;\n\n  /**\n   * Constructor\n   * @param {string} filePath\n   */\n  constructor(filePath: string) {\n    const config = parse(fs.readFileSync(filePath));\n    this.envConfig = ConfigService.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private static validateInput(envConfig: EnvConfig): EnvConfig {\n    /**\n     * A schema to validate envConfig against\n     */\n    const envVarsSchema: joi.ObjectSchema = joi.object({\n      APP_ENV: joi\n        .string()\n        .valid(\"dev\", \"prod\")\n        .default(\"dev\"),\n      APP_URL: joi.string().uri({\n        scheme: [/https?/],\n      }),\n      WEBTOKEN_SECRET_KEY: joi.string().required(),\n      WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n      DB_URL: joi.string().regex(/^mongodb/),\n    });\n\n    /**\n     * Represents the status of validation check on the configuration file\n     */\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(\n      envConfig,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n\n  /**\n   * Fetches the key from the configuration file\n   * @param {string} key\n   * @returns {string} the associated value for a given key\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Checks whether the application environment set in the configuration file matches the environment parameter\n   * @param {string} env\n   * @returns {boolean} Whether or not the environment variable matches the application environment\n   */\n  isEnv(env: string): boolean {\n    return this.envConfig.APP_ENV === env;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProfile.html":{"url":"interfaces/IProfile.html","title":"interface - IProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.model.ts\n        \n\n            \n                Description\n            \n            \n                Mongoose Profile Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        avatar\n                                \n                                \n                                        date\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                        roles\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     Schema.Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema.Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    UUID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gravatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Roles\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Schema, Document } from \"mongoose\";\n\n/**\n * Mongoose Profile Schema\n */\nexport const Profile = new Schema({\n  username: { type: String, required: true },\n  email: { type: String, required: true },\n  name: { type: String, required: true },\n  password: { type: String, required: true },\n  avatar: { type: String, required: true },\n  roles: [{ type: String }],\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\n/**\n * Mongoose Profile Document\n */\nexport interface IProfile extends Document {\n  /**\n   * UUID\n   */\n  readonly _id: Schema.Types.ObjectId;\n  /**\n   * Username\n   */\n  readonly username: string;\n  /**\n   * Email\n   */\n  readonly email: string;\n  /**\n   * Name\n   */\n  readonly name: string;\n  /**\n   * Password\n   */\n  password: string;\n  /**\n   * Gravatar\n   */\n  readonly avatar: string;\n  /**\n   * Roles\n   */\n  readonly roles: string[];\n  /**\n   * Date\n   */\n  readonly date: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Jwt Strategy Class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: JwtPayload, done)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:33\n                \n            \n\n\n            \n                \n                    Checks if the bearer token is a valid token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    \n                                            JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    done\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        callback to resolve the request user with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, JwtPayload, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileService } from \"../profile/profile.service\";\n\n/**\n * Jwt Strategy Class\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * Constructor\n   * @param {ConfigService} configService\n   * @param {ProfileService} profileService\n   */\n  constructor(\n    readonly configService: ConfigService,\n    private readonly profileService: ProfileService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get(\"WEBTOKEN_SECRET_KEY\"),\n    });\n  }\n\n  /**\n   * Checks if the bearer token is a valid token\n   * @param {JwtPayload} jwtPayload validation method for jwt token\n   * @param {any} done callback to resolve the request user with\n   */\n  async validate({ iat, exp, _id }: JwtPayload, done) {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/payload/login.payload.ts\n        \n\n            \n                Description\n            \n            \n                Login Paylaod Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/login.payload.ts:26\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/login.payload.ts:16\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport { IsAlphanumeric, IsNotEmpty, MinLength } from \"class-validator\";\n\n/**\n * Login Paylaod Class\n */\nexport class LoginPayload {\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nProfileService \n\nProfileService \n\n\n\nProfileModule\n\nProfileModule\n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ProfileService } from \"./profile.service\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { Profile } from \"./profile.model\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: \"Profile\", schema: Profile }])],\n  providers: [ProfileService],\n  exports: [ProfileService],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Profile Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getByUsername\n                            \n                            \n                                getByUsernameAndPass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/profile/profile.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: RegisterPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:62\n                \n            \n\n\n            \n                \n                    Creates a profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        profile payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:89\n                \n            \n\n\n            \n                \n                    Deletes profile from provided username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:32\n                \n            \n\n\n            \n                \n                    Fetches profile from database by UUID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUsername\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:40\n                \n            \n\n\n            \n                \n                    Fetches profile from database by username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUsernameAndPass\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUsernameAndPass(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:49\n                \n            \n\n\n            \n                \n                    Fetches profile by username and hashed password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as crypto from \"crypto\";\nimport * as gravatar from \"gravatar\";\nimport { Model } from \"mongoose\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotAcceptableException,\n} from \"@nestjs/common\";\nimport { IProfile } from \"./profile.model\";\nimport { RegisterPayload } from \"modules/auth/payload/register.payload\";\nimport { AppRoles } from \"../app/app.roles\";\n\n/**\n * Profile Service\n */\n@Injectable()\nexport class ProfileService {\n  /**\n   * Constructor\n   * @param {Model} profileModel\n   */\n  constructor(\n    @InjectModel(\"Profile\") private readonly profileModel: Model,\n  ) {}\n\n  /**\n   * Fetches profile from database by UUID\n   * @param {string} id\n   */\n  get(id: string): Promise {\n    return this.profileModel.findById(id).exec();\n  }\n\n  /**\n   * Fetches profile from database by username\n   * @param {string} username\n   */\n  getByUsername(username: string): Promise {\n    return this.profileModel.findOne({ username }).exec();\n  }\n\n  /**\n   * Fetches profile by username and hashed password\n   * @param {string} username\n   * @param {string} password\n   */\n  getByUsernameAndPass(username: string, password: string) {\n    return this.profileModel\n      .findOne({\n        username,\n        password: crypto.createHmac(\"sha256\", password).digest(\"hex\"),\n      })\n      .exec();\n  }\n\n  /**\n   * Creates a profile\n   * @param {RegisterPayload} payload profile payload\n   */\n  async create(payload: RegisterPayload): Promise {\n    const user = await this.getByUsername(payload.username);\n    if (user) {\n      throw new NotAcceptableException(\n        \"The account with the provided username currently exists. Please choose another one.\",\n      );\n    }\n    // this will auto assign the admin role to each created user\n    const createdProfile = new this.profileModel({\n      ...payload,\n      password: crypto.createHmac(\"sha256\", payload.password).digest(\"hex\"),\n      avatar: gravatar.url(payload.email, {\n        protocol: \"http\",\n        s: \"200\",\n        r: \"pg\",\n        d: \"404\",\n      }),\n      roles: AppRoles.ADMIN_DELETE_PROFILES,\n    });\n\n    return createdProfile.save();\n  }\n\n  /**\n   * Deletes profile from provided username\n   * @param {string} username\n   */\n  delete(username: string) {\n    return this.profileModel.deleteOne({ username }).then(profile => {\n      if (profile.deletedCount === 1) {\n        return { message: `Deleted ${username} from records` };\n      } else {\n        throw new BadRequestException(\n          `Failed to delete a profile by the name of ${username}.`,\n        );\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterPayload.html":{"url":"classes/RegisterPayload.html","title":"class - RegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/payload/register.payload.ts\n        \n\n            \n                Description\n            \n            \n                Register Payload Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:22\n                            \n                        \n\n                \n                    \n                        Email field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:42\n                            \n                        \n\n                \n                    \n                        Name field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:52\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:32\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport {\n  IsEmail,\n  IsNotEmpty,\n  MinLength,\n  IsAlphanumeric,\n  Matches,\n} from \"class-validator\";\n\n/**\n * Register Payload Class\n */\nexport class RegisterPayload {\n  /**\n   * Email field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WinstonModule.html":{"url":"modules/WinstonModule.html","title":"module - WinstonModule","body":"\n                   \n\n\n\n\n    Modules\n    WinstonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/winston/winston.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: WinstonModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/winston/winston.module.ts:21\n                \n            \n\n\n            \n                \n                    Constructor for winson module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                WinstonModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: WinstonModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/winston/winston.module.ts:35\n                \n            \n\n\n            \n                \n                    Asynchronous constructor for winston module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                WinstonModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from \"@nestjs/common\";\nimport {\n  WinstonModuleAsyncOptions,\n  WinstonModuleOptions,\n} from \"./winston.interfaces\";\nimport {\n  createWinstonAsyncProviders,\n  createWinstonProviders,\n} from \"./winston.providers\";\n\n@Global()\n@Module({})\n/**\n * Represents a Winston Module\n */\nexport class WinstonModule {\n  /**\n   * Constructor for winson module\n   * @param options\n   */\n  public static forRoot(options: WinstonModuleOptions): DynamicModule {\n    const providers = createWinstonProviders(options);\n\n    return {\n      module: WinstonModule,\n      providers,\n      exports: providers,\n    };\n  }\n\n  /**\n   * Asynchronous constructor for winston module\n   * @param options\n   */\n  public static forRootAsync(\n    options: WinstonModuleAsyncOptions,\n  ): DynamicModule {\n    const providers = createWinstonAsyncProviders(options);\n\n    return {\n      module: WinstonModule,\n      imports: options.imports,\n      providers,\n      exports: providers,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WinstonModuleAsyncOptions.html":{"url":"interfaces/WinstonModuleAsyncOptions.html","title":"interface - WinstonModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WinstonModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/winston/winston.interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Asynchronous winston module options\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Providers to inject\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default factory method that returns winston module options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport { LoggerOptions } from \"winston\";\n\n/**\n * Logger options\n */\nexport type WinstonModuleOptions = LoggerOptions;\n\n/**\n * Asynchronous winston module options\n */\nexport interface WinstonModuleAsyncOptions\n  extends Pick {\n  /**\n   * Default factory method that returns winston module options\n   */\n  useFactory: (\n    ...args: any[]\n  ) => Promise | WinstonModuleOptions;\n\n  /**\n   * Providers to inject\n   */\n  inject?: any[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.hmr.ts\n            \n            variable\n            module\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/modules/app/app.roles.ts\n            \n            variable\n            roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/payload/login.payload.ts\n            \n            class\n            LoginPayload\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/payload/register.payload.ts\n            \n            class\n            RegisterPayload\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            interface\n            EnvConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.model.ts\n            \n            interface\n            IProfile\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.model.ts\n            \n            variable\n            Profile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.constants.ts\n            \n            variable\n            WINSTON_MODULE_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.constants.ts\n            \n            variable\n            WINSTON_MODULE_PROVIDER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.interfaces.ts\n            \n            interface\n            WinstonModuleAsyncOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.providers.ts\n            \n            variable\n            createWinstonAsyncProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.providers.ts\n            \n            variable\n            createWinstonProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_AUTH_LOCATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_AUTH_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_CURRENT_VERSION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_DESCRIPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_ROOT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_SCHEMES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/index.ts\n            \n            variable\n            configureOpenAPI\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : 16.1.4\n        \n            @nestjs/common : 6.7.2\n        \n            @nestjs/core : 6.7.2\n        \n            @nestjs/jwt : 6.1.1\n        \n            @nestjs/mongoose : 6.1.2\n        \n            @nestjs/passport : 6.1.0\n        \n            @nestjs/platform-express : 6.7.2\n        \n            @nestjs/platform-fastify : 6.7.2\n        \n            @nestjs/swagger : 3.1.0\n        \n            @nestjs/typeorm : 6.1.3\n        \n            class-transformer : 0.2.3\n        \n            class-validator : 0.10.0\n        \n            crypto : 1.0.1\n        \n            dotenv : 8.1.0\n        \n            express-rate-limit : ^5.0.0\n        \n            fastify-helmet : 3.0.1\n        \n            fastify-rate-limit : 2.3.0\n        \n            fastify-swagger : 2.4.0\n        \n            gravatar : 1.8.0\n        \n            mongoose : 5.7.1\n        \n            nodemon : 1.19.2\n        \n            nest-access-control : ^2.0.1\n        \n            passport : 0.4.0\n        \n            passport-jwt : 4.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rimraf : 3.0.0\n        \n            rxjs : 6.5.3\n        \n            swagger-ui-express : 4.1.1\n        \n            typeorm : 0.2.19\n        \n            winston : 3.2.1\n        \n            winston-daily-rotate-file : 4.1.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppRoles   (src/.../app.roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/app/app.roles.ts\n    \n        \n            \n                \n                    \n                        \n                        AppRoles\n                    \n                \n                        \n                            \n                                 DEFAULT_READ\n                            \n                        \n                        \n                            \n                                Value : DEFAULT_READ\n                            \n                        \n                        \n                            \n                                 ADMIN_DELETE_PROFILES\n                            \n                        \n                        \n                            \n                                Value : ADMIN_DELETE_PROFILES\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n  \n\n&#x1F4DA; Description\nThis boilerplate is made to quickly prototype backend applications. It comes with database, logging, security, and authentication features out of the box.\n\n&#x1F6E0;️ Prerequisites\nNon Docker\n\nPlease make sure to have MongoDB locally, or utilize Mongo on the cloud by configuration a cluster in atlas. Then grab the connection string and modify the following line.\n\nDocker &#x1F433;\n\nPlease make sure to have docker desktop setup on any preferred operating system to quickly compose both the MongoDB and web application. Then follow the steps outlined below.\n\n\n&#x1F680; Setup\nManually Deploying without Docker\n\nCreate a .env file using the cp .env.example .env command and replace the existing env variables with personal settings (MongoDB URL either srv or localhost)\n\nInstall dependencies using npm i or yarn\n\nStart the app for pre-production using npm run start or for development using npm run start:dev (the app will be exposed on the port 9000; not to conflict with React, Angular, or Vue)\n\n\nDeploying with Docker &#x1F433;\n\nExecute the following command in-app directory:\n\n# creates and loads the docker container with required configuration\n$ docker-compose up\nThe following command will set up the project for you (building the Docker images, starting docker-compose stack). The Web application and mongo will be exposed to http://localhost:9000 and http://localhost:27017 respectively\n\n&#x1F512; Environment Configuration\nBy default, the application comes with a config module that can inject the ConfigService and read every environment variable from the .env. file.\nAPP_ENV - the application environment it will be executing as, either in development or production. Determines the type of logging options to utilize. Options: dev or prod. \nAPP_URL - the base URL for the application. Made mainly to showcase the ConfigService and can be removed if not used.\nWEBTOKEN_SECRET_KEY - the secret key to encrypt/decrypt web tokens with. Make sure to generate a random alphanumeric string for this. Not \nWEBTOKEN_EXPIRATION_TIME - the time in seconds indicating when the web token will expire; by default, it's 2400 seconds which is 40 mins.\nDB_URL - the URL to the MongoDB collection\n\n&#x1F3D7; Choosing a Web Framework\nThis boilerplate comes with Fastify out of the box as it offers performance benefits over Express. But this can be changed to use Express framework instead of Fastify. Please proceed the steps below to change between the two.\n\nReplace the following lines of code in the main.ts file with the ones detailed below.\n\n// from (fastify):\nimport {\n  FastifyAdapter,\n  NestFastifyApplication,\n} from '@nestjs/platform-fastify';\nimport * as headers from 'fastify-helmet';\nimport * as fastifyRateLimiter from 'fastify-rate-limit';\nconst app = await NestFactory.create(\n  AppModule,\n  new FastifyAdapter({ logger: console }),\n);\napp.register(headers);\napp.register(fastifyRateLimiter, {\n  max: 100,\n  timeWindow: '1 minute',\n});\n\n// to (express):\nimport * as headers from 'helmet';\nimport * as rateLimiter from 'express-rate-limit';\nconst app = await NestFactory.create(AppModule, {\n  logger: console,\n});\napp.use(headers());\napp.use(\n  rateLimiter({\n    windowMs: 60, // 1 minutes\n    max: 100, // limit each IP to 100 requests per windowMs\n  }),\n);Note: The package.jsoncomes with dependencies for both Express and Fastify to support moving between two. But this can leave the project bloated especially when only one web framework is being used. Thus it is recommended that when deploying to production, a purger of unused dependencies occurs. \nIf you choose to use Fastify, this command will purge all of the Express dependencies:\n# removing Express dependencies\n$ npm rm @nestjs/platform-express express-rate-limit helmet swagger-ui-express @types/express --saveIf you choose to use Express, this command will purge all of the Fastify dependencies:\n# removing Fastify dependencies\n$ npm rm @nestjs/platform-fastify fastify-helmet fastify-rate-limit fastify-swagger --save\n✅ Testing\nDocker &#x1F433;\n# unit tests\n$ docker exec -it nest yarn test\n\n# e2e tests\n$ docker exec -it nest yarn test:e2e\n\n# test coverage\n$ docker exec -it nest yarn test:covNon-Docker\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n&#x1F4A1; TypeDocs\nThe documentation for this boilerplate can be found on Github pages.\nThe docs can be generated on-demand, simply, by typing npm run typedocs. This will produce a docs folder with the required front-end files and start hosting on localhost port 8080.\n# generate docs for code\n$ npm run typedocs\n&#x1F4DD; Open API\nOut of the box, the web app comes with an open api specification, that is used to describe RESTful APIs. Nest provides a dedicated module to work with it.\nThe configuration for Swagger can be found at this location.\n\n✨ TypeORM\nTypeORM is an object-relational mapping that acts as an abstraction layer over operations on databases. Please view the documentation for further details.\nThe configuration for TypeORM can be found in the app module.\n\n&#x1F50A; Logs\nThis boilerplate comes with a Winston module for logging, the configurations for Winston can be found in the app module.\n\n&#x1F465; Support\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\n\nLicense\nNest is MIT licensed.\nAuthor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Msanvarov\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WinstonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WinstonModuleOptions   (src/.../winston.interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/winston/winston.interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    WinstonModuleOptions\n                \n            \n            \n                \n                    Logger options\n\n                \n            \n            \n                \n                        LoggerOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configureOpenAPI   (src/.../index.ts)\n                        \n                        \n                            createWinstonAsyncProviders   (src/.../winston.providers.ts)\n                        \n                        \n                            createWinstonProviders   (src/.../winston.providers.ts)\n                        \n                        \n                            module   (src/.../main.hmr.ts)\n                        \n                        \n                            Profile   (src/.../profile.model.ts)\n                        \n                        \n                            roles   (src/.../app.roles.ts)\n                        \n                        \n                            SWAGGER_API_AUTH_LOCATION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_AUTH_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_CURRENT_VERSION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_DESCRIPTION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_ROOT   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_SCHEMES   (src/.../constants.ts)\n                        \n                        \n                            WINSTON_MODULE_OPTIONS   (src/.../winston.constants.ts)\n                        \n                        \n                            WINSTON_MODULE_PROVIDER   (src/.../winston.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configureOpenAPI\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication) => {\n  const options = new DocumentBuilder()\n    .setTitle(SWAGGER_API_NAME)\n    .setDescription(SWAGGER_API_DESCRIPTION)\n    .setVersion(SWAGGER_API_CURRENT_VERSION)\n    .setSchemes(...SWAGGER_API_SCHEMES)\n    .addBearerAuth(SWAGGER_API_AUTH_NAME, SWAGGER_API_AUTH_LOCATION)\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup(SWAGGER_API_ROOT, app, document);\n}\n                        \n                    \n\n                \n                    \n                        Open api configuration to be used as a basis for web application\n\n                    \n                \n\n            \n        \n\n    src/modules/winston/winston.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createWinstonAsyncProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  options: WinstonModuleAsyncOptions,\n): Provider[] => {\n  return [\n    {\n      provide: WINSTON_MODULE_OPTIONS,\n      useFactory: options.useFactory,\n      inject: options.inject || [],\n    },\n    {\n      provide: WINSTON_MODULE_PROVIDER,\n      useFactory: (loggerOpts: LoggerOptions) => createLogger(loggerOpts),\n      inject: [WINSTON_MODULE_OPTIONS],\n    },\n  ];\n}\n                        \n                    \n\n                \n                    \n                        Async constructor for a winston provider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createWinstonProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  loggerOpts: WinstonModuleOptions,\n): Provider[] => {\n  return [\n    {\n      provide: WINSTON_MODULE_PROVIDER,\n      useFactory: () => createLogger(loggerOpts),\n    },\n  ];\n}\n                        \n                    \n\n                \n                    \n                        Constructor a winston provider\n\n                    \n                \n\n            \n        \n\n    src/main.hmr.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Represents the webpack meta data\n\n                    \n                \n\n            \n        \n\n    src/modules/profile/profile.model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  username: { type: String, required: true },\n  email: { type: String, required: true },\n  name: { type: String, required: true },\n  password: { type: String, required: true },\n  avatar: { type: String, required: true },\n  roles: [{ type: String }],\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n})\n                        \n                    \n\n                \n                    \n                        Mongoose Profile Schema\n\n                    \n                \n\n            \n        \n\n    src/modules/app/app.roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RolesBuilder\n\n                        \n                    \n                    \n                        \n                            Default value : new RolesBuilder()\n                        \n                    \n\n                \n                    \n                        Roles Builder\n\n                    \n                \n\n            \n        \n\n    src/swagger/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_AUTH_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"header\"\n                        \n                    \n\n                \n                    \n                        Where the SWAGGER_API_AUTH_NAME will be used in the request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_AUTH_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Authorization\"\n                        \n                    \n\n                \n                    \n                        The default authentication method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_CURRENT_VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"1.0\"\n                        \n                    \n\n                \n                    \n                        Current version of the api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_DESCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"API Description\"\n                        \n                    \n\n                \n                    \n                        A short description for api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"API\"\n                        \n                    \n\n                \n                    \n                        The name given to the api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_ROOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"api/docs\"\n                        \n                    \n\n                \n                    \n                        The endpoint for open api ui\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_SCHEMES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"http\", \"https\"]\n                        \n                    \n\n                \n                    \n                        Types of api schemes\n\n                    \n                \n\n            \n        \n\n    src/modules/winston/winston.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WINSTON_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"WinstonModuleOptions\"\n                        \n                    \n\n                \n                    \n                        Token for the type of configuration to be used when declaring in the app module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WINSTON_MODULE_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"winston\"\n                        \n                    \n\n                \n                    \n                        An identifier to use for injecting the winston provider\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
