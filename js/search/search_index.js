var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.661,1,1.871]],["body/controllers/AppController.html",[0,2.452,1,2.125,2,1.292,3,0.352,4,0.307,5,0.224,6,1.932,7,1.228,8,3.149,9,0.451,10,1.371,11,1.795,12,4.207,13,3.428,14,4.455,15,1.932,16,1.509,17,2.511,18,0.04,19,2.346,20,2.346,21,4.455,22,2.822,23,3.428,24,2.346,25,4.074,26,3.513,27,4.05,28,4.074,29,4.074,30,1.196,31,2.346,32,4.074,33,4.455,34,1.371,35,0.913,36,0.4,37,1.239,38,2.1,39,1.456,40,2.346,41,2.346,42,2.346,43,3.428,44,4.455,45,2.822,46,2.346,47,2.346,48,2.822,49,1.689,50,2.125,51,2.423,52,0.647,53,1.61,54,2.346,55,0.625,56,2.195,57,1.932,58,3.428,59,4.207,60,1.292,61,2.346,62,1.455,63,1.61,64,1.455,65,3.428,66,3.428,67,1.455,68,1.659,69,1.659,70,0.352,71,0.224,72,1.12,73,1.371,74,1.239,75,4.05,76,3.068,77,4.05,78,1.196,79,2.346,80,2.346,81,2.346,82,0.938,83,0.4,84,2.346,85,2.346,86,2.346,87,2.346,88,2.346,89,2.346,90,2.346,91,1.292,92,2.346,93,0.015,94,0.022,95,0.015]],["title/modules/AppModule.html",[83,0.514,96,1.661]],["body/modules/AppModule.html",[1,2.64,2,2.012,3,0.639,4,0.335,5,0.348,18,0.04,52,0.747,55,0.683,56,2.513,57,2.111,67,1.59,68,1.813,69,1.813,70,0.385,71,0.244,78,0.757,83,0.726,93,0.017,94,0.024,95,0.017,96,3.166,97,1.025,98,1.025,99,1.412,100,1.412,101,1.412,102,1.887,103,1.263,104,2.111,105,2.111,106,2.111,107,2.808,108,2.644,109,2.513,110,2.701,111,2.012,112,1.412,113,1.136,114,2.564,115,2.877,116,1.887,117,3.655,118,2.111,119,2.111,120,2.564,121,2.111,122,3.655,123,1.59,124,2.111,125,1.399,126,1.412,127,2.564,128,2.111,129,2.564,130,2.564,131,1.412,132,2.564,133,2.564,134,1.801,135,2.266,136,2.564,137,2.564,138,2.564,139,2.344,140,2.564,141,2.564,142,2.564,143,4.258,144,3.821,145,3.655,146,3.655,147,2.057,148,2.012,149,3.655,150,1.517,151,3.655,152,3.655,153,2.564,154,3.655,155,2.564,156,1.813,157,2.564,158,2.564,159,2.564,160,2.564,161,2.564,162,2.564,163,2.564,164,2.564,165,2.564,166,2.564,167,2.564,168,2.564]],["title/injectables/AppService.html",[56,1.487,169,1.091]],["body/injectables/AppService.html",[3,0.494,4,0.431,5,0.314,7,0.934,9,0.633,10,1.736,16,1.433,18,0.04,30,1.282,34,1.318,35,0.878,36,0.561,37,1.191,39,1.418,48,3.574,49,2.713,51,3.068,52,0.635,53,1.569,55,0.878,56,2.139,70,0.494,71,0.314,72,1.686,73,1.736,74,1.191,78,0.973,93,0.021,94,0.028,95,0.021,116,1.46,125,1.429,126,1.814,134,1.623,147,2.44,169,1.569,170,1.814,171,2.713,172,5.16,173,3.295,174,3.635,175,3.295,176,3.009,177,2.39,178,3.295,179,2.691,180,3.295,181,0.973,182,4.854,183,3.295,184,3.295,185,2.043]],["title/controllers/AuthController.html",[0,1.661,186,1.871]],["body/controllers/AuthController.html",[0,2.317,2,1.383,3,0.377,4,0.329,5,0.239,7,1.241,9,0.482,10,1.44,11,2.245,17,2.233,18,0.04,26,2.233,28,3.786,30,1.063,32,3.786,34,1.44,35,0.96,36,0.614,37,1.301,39,1.177,45,2.068,52,0.663,53,1.662,55,0.669,59,4.295,60,1.383,63,1.759,64,1.557,70,0.377,71,0.239,72,1.177,73,1.44,74,1.301,76,3.14,78,1.063,82,1.004,91,2.531,93,0.016,94,0.023,95,0.016,147,1.596,148,1.982,181,1.063,186,2.233,187,2.068,188,2.512,189,2.512,190,3.234,191,3.773,192,3.786,193,2.512,194,2.68,195,2.512,196,4.598,197,3.601,198,4.598,199,3.601,200,4.598,201,4.598,202,2.512,203,3.14,204,3.786,205,2.512,206,2.68,207,2.512,208,4.598,209,2.512,210,2.512,211,2.512,212,2.398,213,2.068,214,2.068,215,2.512,216,2.512,217,2.512,218,2.512,219,3.601,220,2.512,221,2.512,222,3.601,223,2.512,224,2.512,225,2.512]],["title/modules/AuthModule.html",[83,0.514,107,1.661]],["body/modules/AuthModule.html",[2,2.29,3,0.464,4,0.404,5,0.295,11,1.37,18,0.04,52,0.744,55,0.824,62,1.917,70,0.464,71,0.295,78,0.913,83,0.801,93,0.02,94,0.027,95,0.02,97,1.236,98,1.236,99,1.702,100,1.702,101,1.702,102,2.084,103,2.05,107,3.217,108,2.722,109,2.664,111,2.29,112,1.702,113,1.37,115,2.915,124,2.545,125,1.34,126,1.702,128,2.545,134,1.523,135,1.917,186,2.915,212,2.664,213,2.545,226,2.545,227,3.092,228,2.545,229,2.976,230,3.092,231,3.092,232,2.185,233,3.092,234,3.092,235,3.092,236,4.161,237,4.161,238,2.579,239,3.092,240,2.545,241,2.545,242,3.092,243,4.161,244,3.092,245,3.092]],["title/injectables/AuthService.html",[169,1.091,212,1.487]],["body/injectables/AuthService.html",[3,0.296,4,0.258,5,0.188,7,0.786,9,0.379,10,1.204,11,2.056,16,1.469,18,0.04,30,1.3,34,1.635,35,1.089,36,0.791,37,1.477,38,1.335,39,1.194,52,0.607,53,1.744,55,0.526,63,1.843,64,1.223,70,0.296,71,0.188,72,1.336,73,2.039,74,1.677,78,1.079,82,1.76,91,1.086,93,0.013,94,0.019,95,0.013,125,1.359,126,1.086,144,2.48,147,2.056,148,2.011,150,0.645,169,1.089,170,1.086,181,1.3,190,1.867,191,2.129,194,2.423,203,2.877,204,1.625,212,1.484,214,1.625,232,1.395,238,2.534,246,1.625,247,1.484,248,3.653,249,3.653,250,3.012,251,3.012,252,1.973,253,4.976,254,3.012,255,1.973,256,2.25,257,1.973,258,2.129,259,3.012,260,2.877,261,3.012,262,3.012,263,1.973,264,3.012,265,3.82,266,4.198,267,3.012,268,3.012,269,3.012,270,1.973,271,3.012,272,1.867,273,2.48,274,2.129,275,3.653,276,2.48,277,2.48,278,1.973,279,3.012,280,1.973,281,1.625,282,2.129,283,1.867,284,1.867,285,1.973,286,1.973,287,1.973,288,1.973,289,1.973,290,1.973,291,4.402,292,1.973,293,3.653,294,3.624,295,3.012,296,2.48,297,3.653,298,2.582,299,1.973,300,1.625,301,1.973,302,1.973,303,1.973,304,1.973,305,1.223,306,1.395,307,1.973,308,1.973]],["title/modules/ConfigModule.html",[83,0.514,108,1.487]],["body/modules/ConfigModule.html",[3,0.598,4,0.521,5,0.38,18,0.039,52,0.641,55,1.061,70,0.598,71,0.38,83,0.904,93,0.026,94,0.032,95,0.026,97,1.593,98,1.593,99,2.193,100,2.193,101,2.193,102,2.171,103,2.614,108,2.799,111,2.697,112,2.193,113,1.766,125,1.577,150,1.302,309,3.28,310,3.28,311,3.984,312,3.984,313,3.28,314,3.984,315,3.984]],["title/classes/ConfigService.html",[71,0.288,125,0.804]],["body/classes/ConfigService.html",[3,0.326,4,0.284,5,0.459,7,0.467,9,0.417,10,1.295,16,1.696,18,0.04,30,1.356,34,1.716,35,1.144,36,0.782,37,1.551,39,1.629,49,2.115,50,3.305,52,0.507,53,1.399,70,0.486,71,0.207,72,1.265,73,1.925,74,1.399,76,1.347,78,1.144,93,0.014,94,0.021,95,0.014,125,0.863,147,1.436,150,0.71,156,2.737,176,2.401,177,2.527,181,1.144,185,1.347,247,1.596,272,2.661,305,1.347,316,1.347,317,1.536,318,3.465,319,3.239,320,2.737,321,3.239,322,2.667,323,3.239,324,2.667,325,3.034,326,2.667,327,2.667,328,2.363,329,2.667,330,2.173,331,2.29,332,3.623,333,2.29,334,2.661,335,2.29,336,2.667,337,2.173,338,2.29,339,3.034,340,3.034,341,2.667,342,2.737,343,3.188,344,2.008,345,2.667,346,2.173,347,2.667,348,2.667,349,2.667,350,2.667,351,2.29,352,2.667,353,1.596,354,2.667,355,1.789,356,1.536,357,2.667,358,1.536,359,2.667,360,1.536,361,0.869,362,1.789,363,1.789,364,1.789,365,1.196,366,1.536,367,1.789,368,1.789,369,1.789,370,1.789,371,1.536,372,1.789,373,1.536,374,1.789,375,1.789,376,1.789,377,1.536,378,1.536,379,1.789,380,1.536,381,1.789,382,1.536,383,1.789,384,1.347,385,2.29,386,1.789,387,2.667,388,1.789,389,1.789,390,1.789,391,1.789,392,1.789]],["title/interfaces/EnvConfig.html",[318,1.871,361,1.207]],["body/interfaces/EnvConfig.html",[3,0.398,4,0.347,5,0.449,7,0.571,16,1.696,18,0.04,30,0.784,39,1.418,49,1.846,50,3.082,52,0.568,53,1.569,70,0.562,71,0.253,72,0.868,73,1.498,74,0.959,76,1.646,78,1.282,93,0.017,94,0.024,95,0.017,125,0.707,147,1.177,150,0.868,156,3.068,176,2.322,177,2.389,181,1.282,185,1.646,272,2.322,305,1.646,317,1.877,318,3.357,320,1.877,322,2.186,324,2.186,325,2.648,326,2.186,327,2.186,328,2.062,329,2.186,331,1.877,332,3.748,333,1.877,334,2.923,335,1.877,336,2.186,338,1.877,339,2.648,340,2.648,341,2.186,342,2.648,343,3.084,344,1.646,345,2.186,347,2.186,348,2.186,349,2.186,350,2.186,351,1.877,352,2.186,353,1.308,354,2.186,355,2.186,356,1.877,357,3.084,358,1.877,359,3.084,360,2.648,361,1.062,362,2.186,363,2.186,364,2.186,365,1.462,366,1.877,367,2.186,368,2.186,369,2.186,370,2.186,371,1.877,372,2.186,373,1.877,374,2.186,375,2.186,376,2.186,377,1.877,378,1.877,379,2.186,380,1.877,381,2.186,382,1.877,383,2.186,384,1.646,385,2.648,386,2.186,387,3.084,388,2.186,389,2.186,390,2.186,391,2.186,392,2.186,393,1.646,394,2.655,395,2.655]],["title/interfaces/IProfile.html",[256,1.661,361,1.207]],["body/interfaces/IProfile.html",[3,0.446,4,0.388,5,0.283,7,0.639,9,0.57,16,1.792,18,0.04,35,1.379,36,1.007,38,2.294,52,0.388,70,0.607,74,1.976,82,1.978,93,0.019,94,0.026,95,0.019,131,2.85,139,2.85,150,0.97,181,0.877,247,1.995,256,2.229,282,3.497,283,3.209,284,3.209,353,1.463,361,1.187,365,2.536,393,1.841,396,2.099,397,3.067,398,4.262,399,2.862,400,4.646,401,2.85,402,4.606,403,2.85,404,2.445]],["title/injectables/JwtStrategy.html",[169,1.091,229,1.661]],["body/injectables/JwtStrategy.html",[3,0.45,4,0.393,5,0.286,7,0.877,9,0.577,10,1.631,11,2.053,18,0.04,26,2.529,30,1.205,34,1.631,35,1.087,36,0.695,37,1.474,39,0.981,52,0.68,53,1.796,55,0.8,62,1.861,63,2.044,64,1.861,70,0.45,71,0.441,72,1.624,73,1.201,74,1.474,93,0.019,94,0.026,95,0.019,125,1.487,126,1.653,148,2.245,169,1.474,170,1.653,179,1.861,181,0.887,229,2.245,238,3.081,241,2.472,260,3.222,277,2.472,282,2.122,338,2.883,366,3.275,385,2.122,399,2.122,405,2.472,406,4.633,407,3.003,408,3.003,409,3.003,410,5.36,411,4.97,412,3.003,413,4.079,414,4.079,415,4.079,416,4.079,417,3.003,418,2.472,419,3.003,420,3.003,421,3.003,422,3.003,423,3.003,424,3.003,425,4.079,426,4.079,427,4.079]],["title/classes/LoginPayload.html",[71,0.288,194,1.661]],["body/classes/LoginPayload.html",[3,0.546,4,0.476,5,0.347,7,0.783,9,0.699,16,1.582,17,2.87,18,0.04,30,1.367,36,0.789,38,2.452,52,0.606,60,2.004,70,0.546,71,0.511,93,0.024,94,0.03,95,0.024,139,2.549,191,3.273,194,2.549,247,2.281,316,2.257,401,3.046,403,2.549,428,2.997,429,4.631,430,3.812,431,2.997,432,3.641,433,4.412,434,2.997,435,3.641,436,4.192,437,3.812,438,4.192,439,2.997,440,2.574,441,2.997]],["title/modules/ProfileModule.html",[83,0.514,109,1.487]],["body/modules/ProfileModule.html",[3,0.568,4,0.495,5,0.361,18,0.039,35,1.008,52,0.711,55,1.008,63,2.175,70,0.568,71,0.361,82,2.072,83,0.883,93,0.024,94,0.031,95,0.024,97,1.513,98,1.513,99,2.083,100,2.083,101,2.083,102,2.297,103,2.554,109,2.855,111,2.612,112,2.083,113,1.677,115,2.345,121,3.115,123,2.345,365,2.083,442,3.115,443,3.115,444,3.115,445,3.783,446,3.783,447,3.115,448,3.783]],["title/injectables/ProfileService.html",[63,1.091,169,1.091]],["body/injectables/ProfileService.html",[3,0.305,4,0.266,5,0.194,7,0.663,9,0.39,10,1.232,11,1.649,12,3.062,15,2.536,16,1.697,18,0.04,25,1.673,29,1.673,30,1.386,34,1.877,35,1.299,36,0.8,37,1.696,38,2.52,39,1.457,52,0.657,53,1.762,55,0.542,63,1.113,70,0.305,71,0.194,72,1.356,73,0.813,74,0.735,78,1.386,82,2.227,91,1.119,93,0.013,94,0.02,95,0.013,123,1.26,131,1.119,147,1.365,148,2.048,150,1.216,169,1.113,170,1.119,181,0.91,203,2.765,206,2.455,256,1.119,258,2.178,273,1.673,274,2.934,284,1.26,298,1.437,305,1.91,306,1.437,331,3.318,397,1.26,401,2.765,447,1.673,449,1.673,450,2.536,451,3.081,452,3.081,453,2.033,454,4.46,455,2.033,456,3.72,457,3.081,458,2.033,459,3.864,460,2.033,461,3.081,462,3.062,463,3.081,464,2.033,465,3.081,466,3.081,467,3.081,468,2.033,469,3.081,470,2.033,471,3.081,472,2.536,473,2.536,474,2.033,475,3.081,476,2.033,477,3.081,478,2.033,479,1.673,480,2.033,481,2.033,482,2.033,483,2.033,484,2.536,485,3.081,486,2.033,487,3.081,488,2.033,489,2.033,490,2.033,491,2.033,492,1.673,493,2.033,494,1.673,495,2.033,496,2.033,497,2.033,498,2.033,499,1.673,500,2.033,501,2.033,502,2.033,503,2.033,504,2.033,505,1.673,506,2.033,507,2.033,508,2.033,509,2.033,510,2.033,511,2.033,512,2.033,513,2.033,514,2.033,515,2.033,516,2.033,517,2.033,518,2.033]],["title/classes/RegisterPayload.html",[71,0.288,206,1.661]],["body/classes/RegisterPayload.html",[3,0.47,4,0.41,5,0.299,7,0.674,9,0.602,16,1.664,17,3.136,18,0.04,30,1.494,35,1.405,36,0.862,38,2.337,52,0.549,60,1.726,70,0.47,71,0.482,93,0.02,94,0.027,95,0.02,139,2.784,192,3.457,203,2.603,206,2.312,247,2.069,283,3.269,316,1.943,340,2.216,401,2.903,403,2.784,430,4.164,431,2.581,433,4.639,434,2.581,436,4.342,437,3.457,438,4.469,439,2.581,440,2.216,441,2.581,519,2.581,520,3.135,521,3.135,522,3.135,523,4.199,524,4.199,525,3.135,526,3.135,527,3.135,528,4.199,529,3.135]],["title/modules/WinstonModule.html",[83,0.514,110,1.661]],["body/modules/WinstonModule.html",[3,0.481,4,0.42,5,0.306,10,1.283,18,0.04,30,1.26,34,1.706,35,1.137,36,0.727,37,1.542,39,1.394,52,0.627,53,1.542,55,0.855,70,0.481,71,0.306,72,1.668,78,1.26,83,0.977,93,0.021,94,0.028,95,0.021,97,1.283,102,2.422,103,2.102,110,2.811,115,1.989,116,2.123,181,1.26,320,3.609,384,1.989,530,3.209,531,3.209,532,4.266,533,3.165,534,3.209,535,4.266,536,2.926,537,5.315,538,4.266,539,3.209,540,2.811,541,3.209,542,3.512,543,4.266,544,3.209,545,2.268,546,2.268,547,3.209,548,4.266,549,3.209,550,3.209,551,3.209]],["title/interfaces/WinstonModuleAsyncOptions.html",[361,1.207,540,1.661]],["body/interfaces/WinstonModuleAsyncOptions.html",[3,0.535,4,0.466,5,0.34,7,0.767,9,0.684,18,0.04,36,0.859,37,1.651,39,1.493,52,0.598,70,0.685,83,0.906,93,0.023,94,0.03,95,0.023,102,2.024,116,2.436,134,2.771,135,3.296,174,2.209,179,2.832,247,2.251,353,2.251,361,1.425,393,2.209,399,3.229,459,2.934,533,2.832,536,3.026,540,2.515,542,3.761,552,2.519,553,4.568,554,4.568,555,4.568,556,3.564,557,3.564,558,3.229,559,3.564]],["title/coverage.html",[560,2.893]],["body/coverage.html",[0,2.235,1,1.849,5,0.284,6,2.456,18,0.04,36,0.508,56,1.47,63,1.078,71,0.44,82,1.193,83,0.508,93,0.019,94,0.026,95,0.019,125,0.795,131,1.642,150,0.975,169,1.791,171,2.456,186,1.849,187,2.456,194,1.642,206,1.642,212,1.47,229,1.642,246,2.456,256,1.642,317,2.87,318,1.849,344,3.665,361,1.846,396,2.87,405,2.456,428,2.456,449,2.456,519,2.456,540,1.642,545,2.108,546,2.108,552,2.108,560,2.108,561,2.108,562,2.456,563,2.983,564,2.456,565,5.017,566,5.939,567,2.983,568,2.108,569,5.185,570,4.061,571,2.983,572,2.983,573,2.983,574,2.983,575,3.343,576,2.456,577,2.456,578,3.343,579,4.506,580,2.456,581,2.456,582,2.456,583,2.456,584,2.456,585,2.456,586,2.456,587,2.456,588,2.456,589,2.983,590,2.983]],["title/dependencies.html",[98,1.449,591,2.533]],["body/dependencies.html",[5,0.326,18,0.04,55,0.911,60,1.883,62,2.12,67,2.12,68,2.417,69,2.417,71,0.424,93,0.022,94,0.029,95,0.022,98,1.368,116,1.971,118,2.816,119,2.816,123,2.12,232,2.417,238,2.12,356,2.417,358,2.417,397,2.12,418,3.662,440,2.417,472,2.816,473,2.816,592,3.42,593,5.234,594,3.42,595,3.42,596,3.42,597,3.42,598,3.662,599,3.494,600,4.309,601,3.42,602,3.42,603,3.42,604,3.42,605,3.42,606,3.42,607,3.42,608,3.42,609,3.662,610,3.662,611,3.42,612,2.816,613,3.42,614,3.42,615,3.662,616,3.42,617,3.42,618,3.42,619,3.42,620,3.42,621,3.42,622,3.42,623,3.42,624,3.42,625,3.42,626,3.42,627,3.42,628,3.42,629,3.42,630,3.42,631,2.417,632,3.42,633,2.816,634,3.42,635,3.42,636,3.42]],["title/miscellaneous/enumerations.html",[637,1.248,638,2.983]],["body/miscellaneous/enumerations.html",[9,0.873,18,0.037,93,0.029,94,0.034,95,0.029,334,3.287,479,4.365,568,3.214,637,2.24,638,3.743,639,3.743,640,5.302,641,5.302]],["title/index.html",[9,0.486,642,2.085,643,2.085]],["body/index.html",[4,0.203,5,0.298,7,0.334,8,3.239,16,0.736,18,0.038,36,0.264,49,1.934,50,1.938,51,2.21,52,0.513,67,2.599,83,0.669,91,1.372,93,0.01,94,0.016,95,0.01,96,0.854,98,1.762,113,1.386,116,1.105,125,0.664,134,0.764,150,0.507,174,1.546,176,0.961,177,2.16,181,0.736,185,0.961,190,0.961,240,1.277,258,1.096,260,0.961,265,1.277,266,2.053,274,1.096,276,1.277,281,2.053,294,1.277,296,1.277,298,1.762,300,1.277,306,2.774,325,1.096,328,0.854,332,1.096,339,1.096,342,2.532,344,0.961,353,1.228,360,1.096,371,1.096,373,1.096,378,1.096,380,1.096,382,1.096,403,1.372,450,1.277,484,2.574,492,2.053,494,1.277,499,1.277,536,1.372,560,1.762,561,1.762,565,2.574,598,2.574,599,3.506,600,4.286,609,2.949,610,3.231,612,2.949,615,2.574,631,1.096,633,2.574,644,1.551,645,1.551,646,3.582,647,2.493,648,1.551,649,1.551,650,1.551,651,1.551,652,2.493,653,1.551,654,1.551,655,2.493,656,1.551,657,3.582,658,2.493,659,2.493,660,1.551,661,1.551,662,3.925,663,3.127,664,1.551,665,1.551,666,3.127,667,1.551,668,1.551,669,1.551,670,5.206,671,3.127,672,3.127,673,3.582,674,1.551,675,2.493,676,2.493,677,1.551,678,1.551,679,1.551,680,1.551,681,1.277,682,1.277,683,2.949,684,1.551,685,3.127,686,1.551,687,2.493,688,1.551,689,1.551,690,1.551,691,3.127,692,2.493,693,3.628,694,1.551,695,2.493,696,1.551,697,3.127,698,1.551,699,1.551,700,3.127,701,1.277,702,3.582,703,1.551,704,1.551,705,3.925,706,2.493,707,1.551,708,1.551,709,1.551,710,1.551,711,2.493,712,1.551,713,4.854,714,3.582,715,3.127,716,1.551,717,3.127,718,4.407,719,2.493,720,1.551,721,2.493,722,2.493,723,1.551,724,1.551,725,1.551,726,1.551,727,1.551,728,1.551,729,1.551,730,1.551,731,2.493,732,3.127,733,1.551,734,1.551,735,1.551,736,1.551,737,1.551,738,1.551,739,1.551,740,2.493,741,1.551,742,1.551,743,1.551,744,1.551,745,1.551,746,1.551,747,1.551,748,2.574,749,1.551,750,1.551,751,1.551,752,1.551,753,1.551,754,1.551,755,1.551,756,1.551,757,1.551,758,1.551,759,1.551,760,1.551,761,1.551,762,1.551,763,1.551,764,2.493,765,1.551,766,2.21,767,1.551,768,1.551,769,1.551,770,2.493,771,2.493,772,1.551,773,2.493,774,1.551,775,1.551,776,1.551,777,2.493,778,1.551,779,2.493,780,1.551,781,1.551,782,2.493,783,1.551,784,1.551,785,2.493,786,1.551,787,2.493,788,1.551,789,1.551,790,1.551,791,2.493,792,1.551,793,1.551,794,1.551,795,1.551,796,1.551,797,2.574,798,1.551,799,1.551,800,1.551,801,1.551,802,1.551,803,1.551,804,1.551,805,1.551,806,1.551,807,1.551,808,2.493,809,2.493,810,2.493,811,1.551,812,1.551,813,1.551,814,1.551,815,2.493,816,3.582,817,3.582,818,2.493,819,2.493,820,1.551,821,1.551,822,1.551,823,3.127,824,3.582,825,1.551,826,1.551,827,3.127,828,1.551,829,1.551,830,1.551,831,1.551,832,1.551,833,1.551,834,1.551,835,1.551,836,1.277,837,1.551,838,1.551,839,1.551,840,2.574,841,2.053,842,1.551,843,1.551,844,1.551,845,1.551,846,1.551,847,1.551,848,1.551,849,1.551,850,1.551,851,1.551,852,1.551,853,1.551,854,1.551,855,1.551,856,1.551,857,1.551,858,1.551,859,1.551,860,1.551,861,1.551,862,1.551,863,2.053,864,2.493,865,1.551,866,1.551,867,1.551,868,1.551,869,1.551,870,1.551,871,1.551,872,1.551,873,1.551,874,1.096,875,1.551]],["title/license.html",[642,2.085,643,2.085,874,1.79]],["body/license.html",[18,0.03,22,2.966,93,0.023,94,0.03,95,0.023,113,1.596,272,2.233,333,2.546,351,3.251,462,2.966,561,2.546,599,2.546,681,2.966,682,2.966,683,2.966,701,4.171,766,3.251,836,2.966,863,3.786,874,2.546,876,5.066,877,3.602,878,3.602,879,3.602,880,4.599,881,3.602,882,3.602,883,3.602,884,3.602,885,3.602,886,3.602,887,4.599,888,5.86,889,3.602,890,3.602,891,3.602,892,3.602,893,3.602,894,3.602,895,3.602,896,3.602,897,3.602,898,3.602,899,4.599,900,3.602,901,3.602,902,3.602,903,3.602,904,3.602,905,3.602,906,4.599,907,4.599,908,3.602,909,3.602,910,3.602,911,3.602,912,3.602,913,3.602,914,3.602,915,3.602,916,3.602,917,3.602,918,3.602,919,3.602,920,3.602,921,3.602,922,3.602,923,3.602,924,3.602,925,3.602,926,3.602,927,3.602,928,3.602,929,3.602,930,3.602,931,3.602,932,3.602]],["title/modules.html",[97,1.637]],["body/modules.html",[18,0.034,93,0.028,94,0.034,95,0.028,96,2.421,97,1.759,107,2.421,108,2.167,109,2.167,110,2.421,797,4.71,933,5.721,934,5.721,935,5.838,936,4.398,937,4.398]],["title/overview.html",[938,3.37]],["body/overview.html",[2,1.937,18,0.039,56,2.468,63,2.06,83,0.599,93,0.023,94,0.029,95,0.023,96,3.28,97,1.407,98,1.407,99,1.937,100,1.937,101,1.937,102,1.559,103,1.733,104,2.896,105,2.896,106,2.896,107,3.261,108,2.697,109,2.809,110,2.758,111,2.494,112,1.937,113,1.559,125,1.41,170,1.937,212,2.468,226,2.896,228,2.896,229,2.758,309,2.896,310,2.896,316,2.181,393,2.181,442,2.896,443,2.896,444,2.896,938,2.896,939,3.518,940,3.518,941,3.518,942,4.53]],["title/miscellaneous/typealiases.html",[637,1.248,943,3.623]],["body/miscellaneous/typealiases.html",[9,0.885,18,0.035,36,0.785,93,0.03,94,0.035,95,0.03,174,2.857,533,3.313,536,2.537,552,3.257,558,3.257,637,2.27,944,4.608,945,4.608]],["title/miscellaneous/variables.html",[328,1.994,637,1.248]],["body/miscellaneous/variables.html",[7,0.709,8,2.777,9,0.428,11,0.987,16,1.658,18,0.04,26,1.38,35,0.879,36,0.987,38,0.987,49,1.097,72,1.078,78,0.974,82,1.571,83,0.669,93,0.014,94,0.021,95,0.014,116,1.925,131,2.391,134,1.625,135,2.435,139,2.553,150,1.284,177,1.816,179,1.38,181,0.974,190,1.38,260,1.38,283,1.38,284,1.38,313,3.234,328,1.226,334,3.481,335,1.574,353,2.807,365,1.816,377,1.574,384,1.38,396,1.574,397,1.38,398,2.716,400,2.716,401,1.226,403,2.553,404,1.833,505,1.833,533,2.045,536,2.163,540,1.226,545,2.332,546,2.332,558,1.574,562,1.833,564,1.833,568,1.574,575,1.833,576,3.576,577,3.576,578,1.833,579,1.833,580,3.234,581,3.234,582,2.716,583,2.716,584,2.716,585,2.716,586,2.716,587,1.833,588,2.716,631,1.574,637,1.097,639,1.833,693,1.833,748,3.234,766,1.574,840,2.716,841,4.249,946,2.227,947,3.298,948,2.227,949,2.227,950,5.026,951,3.298,952,2.227,953,2.227,954,2.227,955,2.227,956,2.227,957,2.227,958,2.227,959,2.227,960,2.227,961,2.227,962,2.227,963,4.638,964,2.227,965,2.227,966,3.298,967,3.298,968,2.227,969,2.227,970,2.227,971,3.298,972,2.227,973,2.227,974,2.227,975,2.227,976,2.227,977,2.227,978,2.227,979,2.227,980,2.227,981,2.227,982,2.227,983,2.227,984,2.227,985,2.227]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["0.1.13",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["0.10.0",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["0.2.19",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["1.0",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["1.19.2",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":565,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["14d",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["16.1.4",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":940,"title":{},"body":{"overview.html":{}}}],["2.0.1",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/ProfileService.html":{}}}],["201",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["2018",{"_index":878,"title":{},"body":{"license.html":{}}}],["20m",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["2400",{"_index":755,"title":{},"body":{"index.html":{}}}],["3",{"_index":942,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["4",{"_index":941,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":756,"title":{},"body":{"index.html":{}}}],["400",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["401",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["404",{"_index":510,"title":{},"body":{"injectables/ProfileService.html":{}}}],["5",{"_index":939,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["5.7.1",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["7/7",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["8.1.0",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["8080",{"_index":838,"title":{},"body":{"index.html":{}}}],["9000",{"_index":723,"title":{},"body":{"index.html":{}}}],["_id",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{}}}],["above",{"_index":905,"title":{},"body":{"license.html":{}}}],["abstraction",{"_index":852,"title":{},"body":{"index.html":{}}}],["access",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["accesscontrolmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["accesscontrolmodule.forroles(roles",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["account",{"_index":490,"title":{},"body":{"injectables/ProfileService.html":{}}}],["acguard",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["acguard)@useroles({resource",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["action",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["acts",{"_index":851,"title":{},"body":{"index.html":{}}}],["addbearerauth(swagger_api_auth_name",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":497,"title":{},"body":{"injectables/ProfileService.html":{}}}],["admin_delete_profiles",{"_index":641,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["again",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["against",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["aliases",{"_index":944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alphanumeric",{"_index":752,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":868,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":897,"title":{},"body":{"license.html":{}}}],["angular",{"_index":655,"title":{},"body":{"index.html":{}}}],["another",{"_index":493,"title":{},"body":{"injectables/ProfileService.html":{}}}],["any'})@delete('/api/profile/:username')@apiresponse({status",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["api",{"_index":841,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api/auth",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/docs",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["apimodelproperty",{"_index":436,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["apimodelproperty({required",{"_index":430,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["apiresponse",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["apis",{"_index":845,"title":{},"body":{"index.html":{}}}],["apiusetags",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiusetags(\"authentication",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["app.register(fastifyratelimiter",{"_index":784,"title":{},"body":{"index.html":{}}}],["app.register(headers",{"_index":783,"title":{},"body":{"index.html":{}}}],["app.roles",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app.use",{"_index":790,"title":{},"body":{"index.html":{}}}],["app.use(headers",{"_index":789,"title":{},"body":{"index.html":{}}}],["app/app.roles",{"_index":480,"title":{},"body":{"injectables/ProfileService.html":{}}}],["app_env",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["app_url",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":652,"title":{},"body":{"index.html":{}}}],["applied",{"_index":352,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["appmodule",{"_index":96,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["approles",{"_index":479,"title":{},"body":{"injectables/ProfileService.html":{},"miscellaneous/enumerations.html":{}}}],["approles.admin_delete_profiles",{"_index":511,"title":{},"body":{"injectables/ProfileService.html":{}}}],["appservice",{"_index":56,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appurl",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["args",{"_index":559,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["arising",{"_index":931,"title":{},"body":{"license.html":{}}}],["array",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":496,"title":{},"body":{"injectables/ProfileService.html":{}}}],["associated",{"_index":333,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":542,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["atlas",{"_index":679,"title":{},"body":{"index.html":{}}}],["auth.controller",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":186,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["authmodule",{"_index":107,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":875,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":922,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":212,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":495,"title":{},"body":{"injectables/ProfileService.html":{}}}],["available",{"_index":937,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["backend",{"_index":661,"title":{},"body":{"index.html":{}}}],["backers",{"_index":869,"title":{},"body":{"index.html":{}}}],["bad",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception",{"_index":475,"title":{},"body":{"injectables/ProfileService.html":{}}}],["base",{"_index":744,"title":{},"body":{"index.html":{}}}],["based",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["basis",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["being",{"_index":802,"title":{},"body":{"index.html":{}}}],["below",{"_index":697,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":763,"title":{},"body":{"index.html":{}}}],["between",{"_index":770,"title":{},"body":{"index.html":{}}}],["bloated",{"_index":800,"title":{},"body":{"index.html":{}}}],["body",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["boilerplate",{"_index":657,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":343,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["bootstrap",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["both",{"_index":692,"title":{},"body":{"index.html":{}}}],["box",{"_index":666,"title":{},"body":{"index.html":{}}}],["browse",{"_index":935,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":933,"title":{},"body":{"modules.html":{}}}],["build",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":647,"title":{},"body":{"index.html":{}}}],["c",{"_index":877,"title":{},"body":{"license.html":{}}}],["callback",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["change",{"_index":769,"title":{},"body":{"index.html":{}}}],["changed",{"_index":765,"title":{},"body":{"index.html":{}}}],["charge",{"_index":884,"title":{},"body":{"license.html":{}}}],["check",{"_index":386,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["checks",{"_index":338,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["choose",{"_index":492,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["choosing",{"_index":760,"title":{},"body":{"index.html":{}}}],["claim",{"_index":925,"title":{},"body":{"license.html":{}}}],["class",{"_index":71,"title":{"classes/ConfigService.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":316,"title":{},"body":{"classes/ConfigService.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"overview.html":{}}}],["cloud",{"_index":677,"title":{},"body":{"index.html":{}}}],["cluster",{"_index":678,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":309,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":310,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":442,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":443,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_providers",{"_index":444,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["code",{"_index":773,"title":{},"body":{"index.html":{}}}],["collection",{"_index":758,"title":{},"body":{"index.html":{}}}],["comes",{"_index":662,"title":{},"body":{"index.html":{}}}],["command",{"_index":705,"title":{},"body":{"index.html":{}}}],["completed",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["completed'})@apiresponse({status",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["compose",{"_index":691,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":904,"title":{},"body":{"license.html":{}}}],["config",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["config.service",{"_index":312,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["config/config.service",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":108,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":125,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["configservice(\".env",{"_index":315,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get(\"db_url",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"webtoken_expiration_time",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get(\"webtoken_secret_key",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.isenv(\"dev",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.validateinput(config",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["configuration",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":861,"title":{},"body":{"index.html":{}}}],["configureopenapi",{"_index":588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conflict",{"_index":724,"title":{},"body":{"index.html":{}}}],["connection",{"_index":681,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":782,"title":{},"body":{"index.html":{}}}],["const",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["constructor(config",{"_index":173,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(configservice",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(filepath",{"_index":322,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["constructor(jwtservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(profilemodel",{"_index":453,"title":{},"body":{"injectables/ProfileService.html":{}}}],["contain",{"_index":326,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["container",{"_index":730,"title":{},"body":{"index.html":{}}}],["contract",{"_index":928,"title":{},"body":{"license.html":{}}}],["control",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller(\"api/auth",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["copies",{"_index":899,"title":{},"body":{"license.html":{}}}],["copy",{"_index":887,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":876,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":560,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cp",{"_index":703,"title":{},"body":{"index.html":{}}}],["create",{"_index":450,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["create(payload",{"_index":457,"title":{},"body":{"injectables/ProfileService.html":{}}}],["created",{"_index":500,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createdprofile",{"_index":501,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createdprofile.save",{"_index":512,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createlogger(loggeropts",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["createtoken",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(undefined",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["createwinstonasyncproviders",{"_index":545,"title":{},"body":{"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwinstonasyncproviders(options",{"_index":550,"title":{},"body":{"modules/WinstonModule.html":{}}}],["createwinstonproviders",{"_index":546,"title":{},"body":{"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwinstonproviders(options",{"_index":549,"title":{},"body":{"modules/WinstonModule.html":{}}}],["crypto",{"_index":472,"title":{},"body":{"injectables/ProfileService.html":{},"dependencies.html":{}}}],["crypto.createhmac(\"sha256",{"_index":487,"title":{},"body":{"injectables/ProfileService.html":{}}}],["current",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currently",{"_index":491,"title":{},"body":{"injectables/ProfileService.html":{}}}],["d",{"_index":509,"title":{},"body":{"injectables/ProfileService.html":{}}}],["daily",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["damages",{"_index":926,"title":{},"body":{"license.html":{}}}],["data",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["databases",{"_index":855,"title":{},"body":{"index.html":{}}}],["date",{"_index":400,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["date%.log",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["date.now",{"_index":404,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["datepattern",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["db_url",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["dd",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":889,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":932,"title":{},"body":{"license.html":{}}}],["debug",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["declarations",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["declaring",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["dedicated",{"_index":847,"title":{},"body":{"index.html":{}}}],["default",{"_index":353,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default(\"dev",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["default_read",{"_index":640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["defaultmeta",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{}}}],["delete",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/ProfileService.html":{}}}],["delete(\"/api/profile/:username",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["delete(@param(\"username",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["delete(username",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/ProfileService.html":{}}}],["deleted",{"_index":517,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deletes",{"_index":461,"title":{},"body":{"injectables/ProfileService.html":{}}}],["demand",{"_index":829,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":98,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploying",{"_index":700,"title":{},"body":{"index.html":{}}}],["describe",{"_index":843,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":686,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":776,"title":{},"body":{"index.html":{}}}],["details",{"_index":858,"title":{},"body":{"index.html":{}}}],["determines",{"_index":742,"title":{},"body":{"index.html":{}}}],["dev",{"_index":743,"title":{},"body":{"index.html":{}}}],["development",{"_index":719,"title":{},"body":{"index.html":{}}}],["directory",{"_index":728,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":895,"title":{},"body":{"license.html":{}}}],["docker",{"_index":670,"title":{},"body":{"index.html":{}}}],["docs",{"_index":827,"title":{},"body":{"index.html":{}}}],["document",{"_index":398,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":561,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentbuilder",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["done",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dotenv",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["dto",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dynamicmodule",{"_index":537,"title":{},"body":{"modules/WinstonModule.html":{}}}],["e2e",{"_index":818,"title":{},"body":{"index.html":{}}}],["each",{"_index":499,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["efficient",{"_index":648,"title":{},"body":{"index.html":{}}}],["email",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["encrypt/decrypt",{"_index":749,"title":{},"body":{"index.html":{}}}],["end",{"_index":835,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ensures",{"_index":347,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["enumerations",{"_index":638,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":342,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["env.example",{"_index":704,"title":{},"body":{"index.html":{}}}],["envconfig",{"_index":318,"title":{"interfaces/EnvConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["environment",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["envvarsschema",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["envvarsschema.validate",{"_index":388,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error(`config",{"_index":389,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error.message",{"_index":390,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["especially",{"_index":801,"title":{},"body":{"index.html":{}}}],["event",{"_index":921,"title":{},"body":{"license.html":{}}}],["exec",{"_index":484,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["execute",{"_index":727,"title":{},"body":{"index.html":{}}}],["executing",{"_index":741,"title":{},"body":{"index.html":{}}}],["existing",{"_index":707,"title":{},"body":{"index.html":{}}}],["exists",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["exp",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["expire",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["expires",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["expiresprettyprint",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["exports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"overview.html":{}}}],["exposed",{"_index":721,"title":{},"body":{"index.html":{}}}],["express",{"_index":599,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["extends",{"_index":399,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["extractjwt",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factory",{"_index":555,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["failed",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/ProfileService.html":{}}}],["fastify",{"_index":600,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fastifyadapter",{"_index":777,"title":{},"body":{"index.html":{}}}],["fastifyratelimiter",{"_index":780,"title":{},"body":{"index.html":{}}}],["features",{"_index":665,"title":{},"body":{"index.html":{}}}],["fetches",{"_index":331,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{}}}],["field",{"_index":433,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["filename",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["filepath",{"_index":324,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["files",{"_index":836,"title":{},"body":{"index.html":{},"license.html":{}}}],["findone",{"_index":486,"title":{},"body":{"injectables/ProfileService.html":{}}}],["fitness",{"_index":917,"title":{},"body":{"license.html":{}}}],["folder",{"_index":833,"title":{},"body":{"index.html":{}}}],["follow",{"_index":694,"title":{},"body":{"index.html":{}}}],["following",{"_index":683,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["formats",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["forroot",{"_index":531,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forroot(options",{"_index":532,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forrootasync",{"_index":538,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forrootasync(options",{"_index":539,"title":{},"body":{"modules/WinstonModule.html":{}}}],["found",{"_index":824,"title":{},"body":{"index.html":{}}}],["framework",{"_index":646,"title":{},"body":{"index.html":{}}}],["free",{"_index":883,"title":{},"body":{"license.html":{}}}],["front",{"_index":834,"title":{},"body":{"index.html":{}}}],["fs",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["function",{"_index":554,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["furnished",{"_index":902,"title":{},"body":{"license.html":{}}}],["further",{"_index":857,"title":{},"body":{"index.html":{}}}],["generate",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["generated",{"_index":828,"title":{},"body":{"index.html":{}}}],["get(\"/api/profile",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/api/profile')@useguards(undefined)@apiresponse({status",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@useguards(undefined)@apiresponse({status",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["get(id",{"_index":463,"title":{},"body":{"injectables/ProfileService.html":{}}}],["get(key",{"_index":329,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["getbyusername",{"_index":451,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusername(username",{"_index":467,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusernameandpass",{"_index":452,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusernameandpass(username",{"_index":469,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@req",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["getstring",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":642,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":825,"title":{},"body":{"index.html":{}}}],["given",{"_index":335,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":543,"title":{},"body":{"modules/WinstonModule.html":{}}}],["grab",{"_index":680,"title":{},"body":{"index.html":{}}}],["granted",{"_index":882,"title":{},"body":{"license.html":{}}}],["graph",{"_index":936,"title":{},"body":{"modules.html":{}}}],["gravatar",{"_index":473,"title":{},"body":{"injectables/ProfileService.html":{},"dependencies.html":{}}}],["gravatar.url(payload.email",{"_index":503,"title":{},"body":{"injectables/ProfileService.html":{}}}],["grow",{"_index":865,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["hashed",{"_index":471,"title":{},"body":{"injectables/ProfileService.html":{}}}],["header",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":779,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":653,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":612,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["here",{"_index":873,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":881,"title":{},"body":{"license.html":{}}}],["holders",{"_index":923,"title":{},"body":{"license.html":{}}}],["hosting",{"_index":837,"title":{},"body":{"index.html":{}}}],["hour",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["hours",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["http",{"_index":505,"title":{},"body":{"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:27017",{"_index":737,"title":{},"body":{"index.html":{}}}],["http://localhost:9000",{"_index":736,"title":{},"body":{"index.html":{}}}],["https",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["iat",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":466,"title":{},"body":{"injectables/ProfileService.html":{}}}],["identifier",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["images",{"_index":733,"title":{},"body":{"index.html":{}}}],["implied",{"_index":913,"title":{},"body":{"license.html":{}}}],["import",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{}}}],["imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{}}}],["included",{"_index":908,"title":{},"body":{"license.html":{}}}],["including",{"_index":351,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":394,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["indicating",{"_index":753,"title":{},"body":{"index.html":{}}}],["inestapplication",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["inject",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inject(\"winston",{"_index":180,"title":{},"body":{"injectables/AppService.html":{}}}],["injectable",{"_index":169,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["injectables",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["injected",{"_index":327,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["injecting",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectmodel",{"_index":474,"title":{},"body":{"injectables/ProfileService.html":{}}}],["injectmodel(\"profile",{"_index":481,"title":{},"body":{"injectables/ProfileService.html":{}}}],["inspired",{"_index":654,"title":{},"body":{"index.html":{}}}],["install",{"_index":712,"title":{},"body":{"index.html":{}}}],["instead",{"_index":767,"title":{},"body":{"index.html":{}}}],["interface",{"_index":361,"title":{"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":393,"title":{},"body":{"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":476,"title":{},"body":{"injectables/ProfileService.html":{}}}],["ip",{"_index":792,"title":{},"body":{"index.html":{}}}],["iprofile",{"_index":256,"title":{"interfaces/IProfile.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["isalphanumeric",{"_index":437,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["isemail",{"_index":528,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["isenv",{"_index":319,"title":{},"body":{"classes/ConfigService.html":{}}}],["isenv(env",{"_index":336,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["isnotempty",{"_index":438,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["it's",{"_index":754,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":350,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.number().default(1800",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.object",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.objectschema",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().regex(/^mongodb",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().required",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().uri",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["join",{"_index":871,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":229,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":332,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["kind",{"_index":912,"title":{},"body":{"license.html":{}}}],["layer",{"_index":853,"title":{},"body":{"index.html":{}}}],["leave",{"_index":799,"title":{},"body":{"index.html":{}}}],["legend",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["level",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":927,"title":{},"body":{"license.html":{}}}],["liable",{"_index":924,"title":{},"body":{"license.html":{}}}],["license",{"_index":874,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":864,"title":{},"body":{"index.html":{}}}],["limit",{"_index":610,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["limitation",{"_index":891,"title":{},"body":{"license.html":{}}}],["limited",{"_index":914,"title":{},"body":{"license.html":{}}}],["line",{"_index":684,"title":{},"body":{"index.html":{}}}],["lines",{"_index":772,"title":{},"body":{"index.html":{}}}],["loads",{"_index":729,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":711,"title":{},"body":{"index.html":{}}}],["locally",{"_index":674,"title":{},"body":{"index.html":{}}}],["location",{"_index":849,"title":{},"body":{"index.html":{}}}],["logger",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loggeroptions",{"_index":558,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loggeropts",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":663,"title":{},"body":{"index.html":{}}}],["login",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginPayload.html":{}}}],["login(@body",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginpayload",{"_index":194,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginPayload.html":{},"coverage.html":{}}}],["logs",{"_index":860,"title":{},"body":{"index.html":{}}}],["logs/application",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["logs/error.log",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["made",{"_index":658,"title":{},"body":{"index.html":{}}}],["main",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["main.ts",{"_index":774,"title":{},"body":{"index.html":{}}}],["mainly",{"_index":745,"title":{},"body":{"index.html":{}}}],["make",{"_index":671,"title":{},"body":{"index.html":{}}}],["manually",{"_index":699,"title":{},"body":{"index.html":{}}}],["mapping",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["matches",{"_index":340,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"classes/RegisterPayload.html":{}}}],["matches(/^[a",{"_index":529,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["matching",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor((ntime",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["math.floor(ntime",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["max",{"_index":785,"title":{},"body":{"index.html":{}}}],["maxfiles",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["maxsize",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["merchantability",{"_index":916,"title":{},"body":{"license.html":{}}}],["merge",{"_index":893,"title":{},"body":{"license.html":{}}}],["message",{"_index":516,"title":{},"body":{"injectables/ProfileService.html":{}}}],["meta",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["minlength",{"_index":439,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["minlength(8",{"_index":441,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["mins",{"_index":757,"title":{},"body":{"index.html":{}}}],["minute",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["minutes",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["miscellaneous",{"_index":637,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":863,"title":{},"body":{"index.html":{},"license.html":{}}}],["mm",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":454,"title":{},"body":{"injectables/ProfileService.html":{}}}],["modify",{"_index":682,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":83,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulemetadata",{"_index":556,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["modules",{"_index":97,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/payload/register.payload",{"_index":478,"title":{},"body":{"injectables/ProfileService.html":{}}}],["mongo",{"_index":676,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":673,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":397,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{}}}],["mongoosemodule.forfeature",{"_index":448,"title":{},"body":{"modules/ProfileModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleasyncoptions",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":872,"title":{},"body":{"index.html":{}}}],["moved",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["moving",{"_index":798,"title":{},"body":{"index.html":{}}}],["msanvarov",{"_index":879,"title":{},"body":{"license.html":{}}}],["name",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":348,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["nest",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestfactory.create",{"_index":781,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":788,"title":{},"body":{"index.html":{}}}],["nestfastifyapplication",{"_index":778,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":557,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["nestjs/core",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":598,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/swagger",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":645,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":669,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":920,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":477,"title":{},"body":{"injectables/ProfileService.html":{}}}],["note",{"_index":795,"title":{},"body":{"index.html":{}}}],["notice",{"_index":906,"title":{},"body":{"license.html":{}}}],["npm",{"_index":713,"title":{},"body":{"index.html":{}}}],["ntime",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["number(time",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":325,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["obtaining",{"_index":886,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":807,"title":{},"body":{"index.html":{}}}],["offers",{"_index":761,"title":{},"body":{"index.html":{}}}],["one",{"_index":494,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["ones",{"_index":775,"title":{},"body":{"index.html":{}}}],["open",{"_index":840,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["operating",{"_index":689,"title":{},"body":{"index.html":{}}}],["operations",{"_index":854,"title":{},"body":{"index.html":{}}}],["optional",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["options",{"_index":536,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.imports",{"_index":551,"title":{},"body":{"modules/WinstonModule.html":{}}}],["options.inject",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.usefactory",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otherwise",{"_index":930,"title":{},"body":{"license.html":{}}}],["out",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlined",{"_index":696,"title":{},"body":{"index.html":{}}}],["over",{"_index":764,"title":{},"body":{"index.html":{}}}],["overview",{"_index":938,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":591,"title":{"dependencies.html":{}},"body":{}}],["package.jsoncomes",{"_index":796,"title":{},"body":{"index.html":{}}}],["pages",{"_index":826,"title":{},"body":{"index.html":{}}}],["param",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["parameter",{"_index":341,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["param{req",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["parse",{"_index":355,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["parse(fs.readfilesync(filepath",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["particular",{"_index":918,"title":{},"body":{"license.html":{}}}],["passport",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":401,"title":{},"body":{"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["password).digest(\"hex",{"_index":488,"title":{},"body":{"injectables/ProfileService.html":{}}}],["paylaod",{"_index":429,"title":{},"body":{"classes/LoginPayload.html":{}}}],["payload",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{}}}],["payload.password",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.password).digest(\"hex",{"_index":502,"title":{},"body":{"injectables/ProfileService.html":{}}}],["payload.username",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload/login.payload",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["payload/register.payload",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["per",{"_index":794,"title":{},"body":{"index.html":{}}}],["performance",{"_index":762,"title":{},"body":{"index.html":{}}}],["permission",{"_index":880,"title":{},"body":{"license.html":{}}}],["permit",{"_index":900,"title":{},"body":{"license.html":{}}}],["person",{"_index":885,"title":{},"body":{"license.html":{}}}],["personal",{"_index":708,"title":{},"body":{"index.html":{}}}],["persons",{"_index":901,"title":{},"body":{"license.html":{}}}],["pg",{"_index":508,"title":{},"body":{"injectables/ProfileService.html":{}}}],["pick",{"_index":553,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["please",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["port",{"_index":722,"title":{},"body":{"index.html":{}}}],["portions",{"_index":910,"title":{},"body":{"license.html":{}}}],["possession",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["post",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apiresponse({status",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiresponse({status",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["pre",{"_index":716,"title":{},"body":{"index.html":{}}}],["preferred",{"_index":688,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["prerequisites",{"_index":668,"title":{},"body":{"index.html":{}}}],["prettyprintseconds",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["prettyprintseconds(time",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["private",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["proceed",{"_index":768,"title":{},"body":{"index.html":{}}}],["prod",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["produce",{"_index":832,"title":{},"body":{"index.html":{}}}],["production",{"_index":717,"title":{},"body":{"index.html":{}}}],["profile",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profile.deletedcount",{"_index":515,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile.model",{"_index":447,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["profile.service",{"_index":446,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile/profile.model",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile/profile.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["profile/profile.service",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["profilemodel",{"_index":456,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profilemodule",{"_index":109,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profiles",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["profileservice",{"_index":63,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":644,"title":{},"body":{"index.html":{}}}],["project",{"_index":732,"title":{},"body":{"index.html":{}}}],["promise",{"_index":459,"title":{},"body":{"injectables/ProfileService.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["properties",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["protocol",{"_index":504,"title":{},"body":{"injectables/ProfileService.html":{}}}],["prototype",{"_index":660,"title":{},"body":{"index.html":{}}}],["provide",{"_index":313,"title":{},"body":{"modules/ConfigModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":462,"title":{},"body":{"injectables/ProfileService.html":{},"license.html":{}}}],["provider",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"overview.html":{}}}],["provides",{"_index":846,"title":{},"body":{"index.html":{}}}],["public",{"_index":548,"title":{},"body":{"modules/WinstonModule.html":{}}}],["publish",{"_index":894,"title":{},"body":{"license.html":{}}}],["purge",{"_index":808,"title":{},"body":{"index.html":{}}}],["purger",{"_index":805,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":919,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":659,"title":{},"body":{"index.html":{}}}],["r",{"_index":507,"title":{},"body":{"injectables/ProfileService.html":{}}}],["random",{"_index":751,"title":{},"body":{"index.html":{}}}],["rate",{"_index":609,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ratelimiter",{"_index":787,"title":{},"body":{"index.html":{}}}],["react",{"_index":725,"title":{},"body":{"index.html":{}}}],["read",{"_index":740,"title":{},"body":{"index.html":{}}}],["readable",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["received",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["received'})@apiresponse({status",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["recommended",{"_index":804,"title":{},"body":{"index.html":{}}}],["records",{"_index":518,"title":{},"body":{"injectables/ProfileService.html":{}}}],["reflect",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterPayload.html":{}}}],["register(@body",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerpayload",{"_index":206,"title":{"classes/RegisterPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"coverage.html":{}}}],["registration",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["relational",{"_index":850,"title":{},"body":{"index.html":{}}}],["remove",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["removed",{"_index":747,"title":{},"body":{"index.html":{}}}],["removing",{"_index":809,"title":{},"body":{"index.html":{}}}],["replace",{"_index":706,"title":{},"body":{"index.html":{}}}],["represents",{"_index":384,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["req",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["request'})@apiresponse({status",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":793,"title":{},"body":{"index.html":{}}}],["required",{"_index":403,"title":{},"body":{"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["resolve",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["resource",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["respectively",{"_index":738,"title":{},"body":{"index.html":{}}}],["restful",{"_index":844,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":890,"title":{},"body":{"license.html":{}}}],["result",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["rights",{"_index":892,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["rm",{"_index":810,"title":{},"body":{"index.html":{}}}],["role",{"_index":498,"title":{},"body":{"injectables/ProfileService.html":{}}}],["roles",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesbuilder",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":172,"title":{},"body":{"injectables/AppService.html":{}}}],["rotate",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["rotatefile",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["routes",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":718,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":506,"title":{},"body":{"injectables/ProfileService.html":{}}}],["save",{"_index":813,"title":{},"body":{"index.html":{}}}],["saveif",{"_index":812,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":649,"title":{},"body":{"index.html":{}}}],["schema",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"modules/ProfileModule.html":{},"miscellaneous/variables.html":{}}}],["schema.types.objectid",{"_index":402,"title":{},"body":{"interfaces/IProfile.html":{}}}],["scheme",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["schemes",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["seconds",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["secret",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["secretorkey",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":664,"title":{},"body":{"index.html":{}}}],["sell",{"_index":898,"title":{},"body":{"license.html":{}}}],["server",{"_index":650,"title":{},"body":{"index.html":{}}}],["service",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{}}}],["set",{"_index":339,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["setdescription(swagger_api_description",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setschemes(...swagger_api_schemes",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":709,"title":{},"body":{"index.html":{}}}],["settitle(swagger_api_name",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":687,"title":{},"body":{"index.html":{}}}],["setversion(swagger_api_current_version",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":907,"title":{},"body":{"license.html":{}}}],["short",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showcase",{"_index":746,"title":{},"body":{"index.html":{}}}],["side",{"_index":651,"title":{},"body":{"index.html":{}}}],["signed",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["simply",{"_index":830,"title":{},"body":{"index.html":{}}}],["software",{"_index":888,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{}}}],["specification",{"_index":842,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":867,"title":{},"body":{"index.html":{}}}],["src/.../app.roles.ts",{"_index":639,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.hmr.ts",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profile.model.ts",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston.constants.ts",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston.interfaces.ts",{"_index":945,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../winston.providers.ts",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.hmr.ts",{"_index":564,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/modules/app/app.controller.ts:32",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.controller.ts:46",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.controller.ts:63",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.module.ts",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/app/app.roles.ts",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/modules/app/app.service.ts",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/app/app.service.ts:24",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/app/app.service.ts:9",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:32",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:45",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:17",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:37",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:49",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:64",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:12",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:33",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/payload/login.payload.ts",{"_index":428,"title":{},"body":{"classes/LoginPayload.html":{},"coverage.html":{}}}],["src/modules/auth/payload/login.payload.ts:16",{"_index":435,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/payload/login.payload.ts:26",{"_index":432,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts",{"_index":519,"title":{},"body":{"classes/RegisterPayload.html":{},"coverage.html":{}}}],["src/modules/auth/payload/register.payload.ts:22",{"_index":521,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:32",{"_index":527,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:42",{"_index":525,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:52",{"_index":526,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/config/config.module.ts",{"_index":311,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/modules/config/config.service.ts",{"_index":317,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["src/modules/config/config.service.ts:19",{"_index":323,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:34",{"_index":346,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:68",{"_index":330,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:77",{"_index":337,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:8",{"_index":395,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["src/modules/profile/profile.model.ts",{"_index":396,"title":{},"body":{"interfaces/IProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/profile/profile.module.ts",{"_index":445,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/modules/profile/profile.service.ts",{"_index":449,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/modules/profile/profile.service.ts:19",{"_index":455,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:32",{"_index":464,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:40",{"_index":468,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:49",{"_index":470,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:62",{"_index":458,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:89",{"_index":460,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/winston/winston.constants.ts",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/winston/winston.interfaces.ts",{"_index":552,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/winston/winston.module.ts",{"_index":530,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.module.ts:21",{"_index":534,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.module.ts:35",{"_index":541,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.providers.ts",{"_index":578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/constants.ts",{"_index":579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/index.ts",{"_index":587,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv",{"_index":710,"title":{},"body":{"index.html":{}}}],["stack",{"_index":735,"title":{},"body":{"index.html":{}}}],["start",{"_index":715,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":720,"title":{},"body":{"index.html":{}}}],["started",{"_index":643,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":734,"title":{},"body":{"index.html":{}}}],["statements",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":320,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"modules/WinstonModule.html":{}}}],["status",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["steps",{"_index":695,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":903,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":896,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":909,"title":{},"body":{"license.html":{}}}],["super",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":797,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":672,"title":{},"body":{"index.html":{}}}],["svg",{"_index":934,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":615,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swagger_api_auth_location",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_auth_name",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_current_version",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_description",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_name",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_root",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_schemes",{"_index":586,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(swagger_api_root",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":690,"title":{},"body":{"index.html":{}}}],["table",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":817,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":821,"title":{},"body":{"index.html":{}}}],["test:covnon",{"_index":820,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":819,"title":{},"body":{"index.html":{}}}],["testing",{"_index":814,"title":{},"body":{"index.html":{}}}],["tests",{"_index":816,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":866,"title":{},"body":{"index.html":{}}}],["then(profile",{"_index":514,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.appservice.root",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.createtoken(user",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get(\"app_url",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["this.configservice.get(\"webtoken_expiration_time",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.envconfig",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.envconfig.app_env",{"_index":392,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.envconfig[key",{"_index":391,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.expiration",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbyusername(payload.username",{"_index":489,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.jwtservice.sign",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.info(\"logging",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["this.prettyprintseconds(this.expiration",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.profilemodel",{"_index":485,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.deleteone",{"_index":513,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.findbyid(id).exec",{"_index":482,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilemodel.findone",{"_index":483,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profileservice.create(payload",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.profileservice.delete(username",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["this.profileservice.getbyusernameandpass",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/ProfileService.html":{}}}],["thus",{"_index":803,"title":{},"body":{"index.html":{}}}],["time",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["timediff",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["timewindow",{"_index":786,"title":{},"body":{"index.html":{}}}],["token",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":750,"title":{},"body":{"index.html":{}}}],["tort",{"_index":929,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["true})@isalphanumeric()@isnotempty",{"_index":434,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@isemail()@isnotempty",{"_index":520,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["true})@isnotempty()@minlength(8",{"_index":431,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@matches(/^[a",{"_index":522,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["try",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["two",{"_index":771,"title":{},"body":{"index.html":{}}}],["type",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":943,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedocs",{"_index":823,"title":{},"body":{"index.html":{}}}],["typeorm",{"_index":633,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["types",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/express",{"_index":811,"title":{},"body":{"index.html":{}}}],["typing",{"_index":831,"title":{},"body":{"index.html":{}}}],["ui",{"_index":631,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unit",{"_index":815,"title":{},"body":{"index.html":{}}}],["unused",{"_index":806,"title":{},"body":{"index.html":{}}}],["up",{"_index":731,"title":{},"body":{"index.html":{}}}],["uri",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["use",{"_index":766,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":748,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["usenewurlparser",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["username",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["useroles",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["useunifiedtopology",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":314,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":702,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":675,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":465,"title":{},"body":{"injectables/ProfileService.html":{}}}],["valid",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["valid(\"dev",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validate",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["validate(undefined",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":349,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validatedenvconfig",{"_index":387,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validateinput",{"_index":321,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput(envconfig",{"_index":345,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validates",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(payload",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":385,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["validator",{"_index":440,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"dependencies.html":{}}}],["value",{"_index":334,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":354,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["variable",{"_index":344,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{},"index.html":{}}}],["variables",{"_index":328,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":856,"title":{},"body":{"index.html":{}}}],["vue",{"_index":726,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":915,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":911,"title":{},"body":{"license.html":{}}}],["web",{"_index":693,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpack",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webtoken_expiration_time",{"_index":380,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["webtoken_secret_key",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["whether",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["windowms",{"_index":791,"title":{},"body":{"index.html":{}}}],["winson",{"_index":535,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["winston.format.json",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.simple",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.interfaces",{"_index":544,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston.providers",{"_index":547,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston.transports.console",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["winston/winston.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_options",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["winston_module_provider",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmodule",{"_index":110,"title":{"modules/WinstonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["winstonmodule.forrootasync",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmoduleasyncoptions",{"_index":540,"title":{"interfaces/WinstonModuleAsyncOptions.html":{}},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmoduleoptions",{"_index":533,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":701,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":848,"title":{},"body":{"index.html":{}}}],["x1f3d7",{"_index":759,"title":{},"body":{"index.html":{}}}],["x1f433",{"_index":685,"title":{},"body":{"index.html":{}}}],["x1f465",{"_index":862,"title":{},"body":{"index.html":{}}}],["x1f4a1",{"_index":822,"title":{},"body":{"index.html":{}}}],["x1f4da",{"_index":656,"title":{},"body":{"index.html":{}}}],["x1f4dd",{"_index":839,"title":{},"body":{"index.html":{}}}],["x1f50a",{"_index":859,"title":{},"body":{"index.html":{}}}],["x1f512",{"_index":739,"title":{},"body":{"index.html":{}}}],["x1f680",{"_index":698,"title":{},"body":{"index.html":{}}}],["x1f6e0",{"_index":667,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":714,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":870,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["z",{"_index":524,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["za",{"_index":523,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["zippedarchive",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                App Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                getProfile\n                            \n                            \n                                getString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, ACGuard)@UseRoles({resource: 'profiles', action: 'delete', possession: 'any'})@Delete('/api/profile/:username')@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:63\n                \n            \n\n\n            \n                \n                    Delete route to remove profiles from app\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the username to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/api/profile')@UseGuards(undefined)@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:46\n                \n            \n\n\n            \n                \n                    Debug route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request body\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getString\n                        \n                        \n                    \n                \n            \n            \n                \ngetString()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:32\n                \n            \n\n\n            \n                \n                    Main route\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the application environment url\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, Req, UseGuards } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\nimport { ApiBearerAuth, ApiResponse } from \"@nestjs/swagger\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { ProfileService } from \"../profile/profile.service\";\nimport { ACGuard, UseRoles } from \"nest-access-control\";\n\n/**\n * App Controller\n */\n@Controller()\n@ApiBearerAuth()\nexport class AppController {\n  /**\n   * Constructor\n   * @param appService\n   * @param profileService\n   */\n  constructor(\n    private readonly appService: AppService,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  /**\n   * Main route\n   * @returns {string} the application environment url\n   */\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  getString(): string {\n    return this.appService.root();\n  }\n\n  // These routes can be moved to the profile module.\n\n  /**\n   * Debug route\n   * @param{Req} req the request body\n   */\n  @Get(\"/api/profile\")\n  @UseGuards(AuthGuard())\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  getProfile(@Req() req) {\n    return req.user;\n  }\n\n  /**\n   * Delete route to remove profiles from app\n   * @param {string} username the username to remove\n   */\n  @UseGuards(AuthGuard(), ACGuard)\n  @UseRoles({\n    resource: \"profiles\",\n    action: \"delete\",\n    possession: \"any\",\n  })\n  @Delete(\"/api/profile/:username\")\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  async delete(@Param(\"username\") username: string) {\n    return await this.profileService.delete(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            WinstonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as winston from \"winston\";\nimport * as rotateFile from \"winston-daily-rotate-file\";\nimport { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { MongooseModule, MongooseModuleAsyncOptions } from \"@nestjs/mongoose\";\nimport { ConfigModule } from \"../config/config.module\";\nimport { ConfigService } from \"../config/config.service\";\nimport { AuthModule } from \"../auth/auth.module\";\nimport { ProfileModule } from \"../profile/profile.module\";\nimport { WinstonModule } from \"../winston/winston.module\";\nimport { AccessControlModule } from \"nest-access-control\";\nimport { roles } from \"./app.roles\";\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) =>\n        ({\n          uri: configService.get(\"DB_URL\"),\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n        } as MongooseModuleAsyncOptions),\n    }),\n    WinstonModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return configService.isEnv(\"dev\")\n          ? {\n              level: \"info\",\n              format: winston.format.json(),\n              defaultMeta: { service: \"user-service\" },\n              transports: [\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n              ],\n            }\n          : {\n              level: \"info\",\n              format: winston.format.json(),\n              defaultMeta: { service: \"user-service\" },\n              transports: [\n                new winston.transports.File({\n                  filename: \"logs/error.log\",\n                  level: \"error\",\n                }),\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n                new rotateFile({\n                  filename: \"logs/application-%DATE%.log\",\n                  datePattern: \"YYYY-MM-DD\",\n                  zippedArchive: true,\n                  maxSize: \"20m\",\n                  maxFiles: \"14d\",\n                }),\n              ],\n            };\n      },\n    }),\n    AccessControlModule.forRoles(roles),\n    ConfigModule,\n    AuthModule,\n    ProfileModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Application Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/modules/app/app.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration service\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                logger service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/app/app.service.ts:24\n                \n            \n\n\n            \n                \n                    Main application method\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the application url\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigService } from \"../config/config.service\";\nimport { Logger } from \"winston\";\n\n/**\n * Application Service\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Constructor\n   * @param {ConfigService} config configuration service\n   * @param {Logger} logger logger service\n   */\n  constructor(\n    private config: ConfigService,\n    @Inject(\"winston\") private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Main application method\n   * @returns {string} the application url\n   */\n  root(): string {\n    const appURL = this.config.get(\"APP_URL\");\n    this.logger.info(\"Logging the APP_URL -> \" + appURL);\n    return appURL;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n            \n                Description\n            \n            \n                Authentication Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: LoginPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiResponse({status: 201, description: 'Login Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n                    Authentication route to login\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the login dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiResponse({status: 201, description: 'Registration Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:45\n                \n            \n\n\n            \n                \n                    Authentication route to register\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the registration dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Body, Post } from \"@nestjs/common\";\nimport { ApiResponse, ApiUseTags } from \"@nestjs/swagger\";\nimport { AuthService } from \"./auth.service\";\nimport { LoginPayload } from \"./payload/login.payload\";\nimport { RegisterPayload } from \"./payload/register.payload\";\nimport { ProfileService } from \"../profile/profile.service\";\n\n/**\n * Authentication Controller\n */\n@Controller(\"api/auth\")\n@ApiUseTags(\"authentication\")\nexport class AuthController {\n  /**\n   * Constructor\n   * @param {AuthService} authService authentication service\n   * @param {ProfileService} profileService profile service\n   */\n  constructor(\n    private readonly authService: AuthService,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  /**\n   * Authentication route to login\n   * @param {LoginPayload} payload the login dto\n   */\n  @Post(\"login\")\n  @ApiResponse({ status: 201, description: \"Login Completed\" })\n  @ApiResponse({ status: 400, description: \"Bad Request\" })\n  @ApiResponse({ status: 401, description: \"Unauthorized\" })\n  async login(@Body() payload: LoginPayload) {\n    const user = await this.authService.validateUser(payload);\n    return await this.authService.createToken(user);\n  }\n\n  /**\n   * Authentication route to register\n   * @param {RegisterPayload} payload the registration dto\n   */\n  @Post(\"register\")\n  @ApiResponse({ status: 201, description: \"Registration Completed\" })\n  @ApiResponse({ status: 400, description: \"Bad Request\" })\n  @ApiResponse({ status: 401, description: \"Unauthorized\" })\n  async register(@Body() payload: RegisterPayload) {\n    const user = await this.profileService.create(payload);\n    return await this.authService.createToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            ProfileModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { ConfigModule } from \"../config/config.module\";\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileModule } from \"../profile/profile.module\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtStrategy } from \"./jwt.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [\n    ProfileModule,\n    ConfigModule,\n    PassportModule.register({ defaultStrategy: \"jwt\" }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get(\"WEBTOKEN_SECRET_KEY\"),\n          signOptions: {\n            ...(configService.get(\"WEBTOKEN_EXPIRATION_TIME\")\n              ? {\n                  expiresIn: Number(\n                    configService.get(\"WEBTOKEN_EXPIRATION_TIME\"),\n                  ),\n                }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule.register({ defaultStrategy: \"jwt\" })],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Authentication Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                expiration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Private\n                                prettyPrintSeconds\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                jwt service\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                profile service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(undefined: IProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:37\n                \n            \n\n\n            \n                \n                    Creates a signed jwt token based on payload\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            prettyPrintSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    prettyPrintSeconds(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:49\n                \n            \n\n\n            \n                \n                    Formats the time in seconds into human-readable format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(payload: LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:64\n                \n            \n\n\n            \n                \n                    Validates whether or not the profile exists in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        login payload to authenticate with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                        Time in seconds when the token is to expire\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileService } from \"../profile/profile.service\";\nimport { IProfile } from \"../profile/profile.model\";\nimport { LoginPayload } from \"./payload/login.payload\";\n\n/**\n * Authentication Service\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Time in seconds when the token is to expire\n   * @type {string}\n   */\n  private readonly expiration: string;\n\n  /**\n   * Constructor\n   * @param {JwtService} jwtService jwt service\n   * @param {ConfigService} configService\n   * @param {ProfileService} profileService profile service\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly profileService: ProfileService,\n  ) {\n    this.expiration = this.configService.get(\"WEBTOKEN_EXPIRATION_TIME\");\n  }\n\n  /**\n   * Creates a signed jwt token based on payload\n   * @param {Profile} param dto to generate token from\n   */\n  async createToken({ _id, username, email, avatar }: IProfile) {\n    return {\n      expires: this.expiration,\n      expiresPrettyPrint: this.prettyPrintSeconds(this.expiration),\n      token: this.jwtService.sign({ _id, username, email, avatar }),\n    };\n  }\n\n  /**\n   * Formats the time in seconds into human-readable format\n   * @param {string} time\n   */\n  private prettyPrintSeconds(time: string) {\n    const ntime = Number(time);\n    const hours = Math.floor(ntime / 3600);\n    const minutes = Math.floor((ntime % 3600) / 60);\n    const seconds = Math.floor((ntime % 3600) % 60);\n\n    return `${hours > 0 ? hours + (hours === 1 ? \" hour,\" : \" hours,\") : \"\"} ${\n      minutes > 0 ? minutes + (minutes === 1 ? \" minute\" : \" minutes\") : \"\"\n    } ${seconds > 0 ? seconds + (seconds === 1 ? \" second\" : \" seconds\") : \"\"}`;\n  }\n\n  /**\n   * Validates whether or not the profile exists in the database\n   * @param {LoginPayload} payload login payload to authenticate with\n   */\n  async validateUser(payload: LoginPayload) {\n    const user = await this.profileService.getByUsernameAndPass(\n      payload.username,\n      payload.password,\n    );\n    if (!user) {\n      throw new UnauthorizedException(\n        \"Could not authenticate. Please try again.\",\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(\".env\"),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Config Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                isEnv\n                            \n                            \n                                    Private\n                                    Static\n                                validateInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/config/config.service.ts:19\n                            \n                        \n\n                \n                    \n                        Object that will contain the injected environment variables\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:68\n                \n            \n\n\n            \n                \n                    Fetches the key from the configuration file\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the associated value for a given key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnv\n                        \n                        \n                    \n                \n            \n            \n                \nisEnv(env: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:77\n                \n            \n\n\n            \n                \n                    Checks whether the application environment set in the configuration file matches the environment parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    env\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether or not the environment variable matches the application environment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            validateInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateInput(envConfig: EnvConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:34\n                \n            \n\n\n            \n                \n                    Ensures all needed variables are set, and returns the validated JavaScript object\nincluding the applied default values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    envConfig\n                                    \n                                                EnvConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EnvConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { parse } from \"dotenv\";\nimport * as joi from \"@hapi/joi\";\nimport * as fs from \"fs\";\n\n/**\n * Key-value mapping\n */\nexport interface EnvConfig {\n  [key: string]: string;\n}\n\n/**\n * Config Service\n */\nexport class ConfigService {\n  /**\n   * Object that will contain the injected environment variables\n   */\n  private readonly envConfig: EnvConfig;\n\n  /**\n   * Constructor\n   * @param {string} filePath\n   */\n  constructor(filePath: string) {\n    const config = parse(fs.readFileSync(filePath));\n    this.envConfig = ConfigService.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private static validateInput(envConfig: EnvConfig): EnvConfig {\n    /**\n     * A schema to validate envConfig against\n     */\n    const envVarsSchema: joi.ObjectSchema = joi.object({\n      APP_ENV: joi\n        .string()\n        .valid(\"dev\", \"prod\")\n        .default(\"dev\"),\n      APP_URL: joi.string().uri({\n        scheme: [/https?/],\n      }),\n      WEBTOKEN_SECRET_KEY: joi.string().required(),\n      WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n      DB_URL: joi.string().regex(/^mongodb/),\n    });\n\n    /**\n     * Represents the status of validation check on the configuration file\n     */\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(\n      envConfig,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n\n  /**\n   * Fetches the key from the configuration file\n   * @param {string} key\n   * @returns {string} the associated value for a given key\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Checks whether the application environment set in the configuration file matches the environment parameter\n   * @param {string} env\n   * @returns {boolean} Whether or not the environment variable matches the application environment\n   */\n  isEnv(env: string): boolean {\n    return this.envConfig.APP_ENV === env;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvConfig.html":{"url":"interfaces/EnvConfig.html","title":"interface - EnvConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnvConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Key-value mapping\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { parse } from \"dotenv\";\nimport * as joi from \"@hapi/joi\";\nimport * as fs from \"fs\";\n\n/**\n * Key-value mapping\n */\nexport interface EnvConfig {\n  [key: string]: string;\n}\n\n/**\n * Config Service\n */\nexport class ConfigService {\n  /**\n   * Object that will contain the injected environment variables\n   */\n  private readonly envConfig: EnvConfig;\n\n  /**\n   * Constructor\n   * @param {string} filePath\n   */\n  constructor(filePath: string) {\n    const config = parse(fs.readFileSync(filePath));\n    this.envConfig = ConfigService.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private static validateInput(envConfig: EnvConfig): EnvConfig {\n    /**\n     * A schema to validate envConfig against\n     */\n    const envVarsSchema: joi.ObjectSchema = joi.object({\n      APP_ENV: joi\n        .string()\n        .valid(\"dev\", \"prod\")\n        .default(\"dev\"),\n      APP_URL: joi.string().uri({\n        scheme: [/https?/],\n      }),\n      WEBTOKEN_SECRET_KEY: joi.string().required(),\n      WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n      DB_URL: joi.string().regex(/^mongodb/),\n    });\n\n    /**\n     * Represents the status of validation check on the configuration file\n     */\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(\n      envConfig,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n\n  /**\n   * Fetches the key from the configuration file\n   * @param {string} key\n   * @returns {string} the associated value for a given key\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Checks whether the application environment set in the configuration file matches the environment parameter\n   * @param {string} env\n   * @returns {boolean} Whether or not the environment variable matches the application environment\n   */\n  isEnv(env: string): boolean {\n    return this.envConfig.APP_ENV === env;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProfile.html":{"url":"interfaces/IProfile.html","title":"interface - IProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.model.ts\n        \n\n            \n                Description\n            \n            \n                Mongoose Profile Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        avatar\n                                \n                                \n                                        date\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                        roles\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     Schema.Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema.Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Schema, Document } from \"mongoose\";\n\n/**\n * Mongoose Profile Schema\n */\nexport const Profile = new Schema({\n  username: { type: String, required: true },\n  email: { type: String, required: true },\n  name: { type: String, required: true },\n  password: { type: String, required: true },\n  avatar: { type: String, required: true },\n  roles: [{ type: String }],\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\n/**\n * Mongoose Profile Document\n */\nexport interface IProfile extends Document {\n  readonly _id: Schema.Types.ObjectId;\n  readonly username: string;\n  readonly email: string;\n  readonly name: string;\n  password: string;\n  readonly avatar: string;\n  readonly roles: string[];\n  readonly date: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Jwt Strategy Class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: JwtPayload, done)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:33\n                \n            \n\n\n            \n                \n                    Checks if the bearer token is a valid token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    \n                                            JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    done\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        callback to resolve the request user with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, JwtPayload, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileService } from \"../profile/profile.service\";\n\n/**\n * Jwt Strategy Class\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * Constructor\n   * @param {ConfigService} configService\n   * @param {ProfileService} profileService\n   */\n  constructor(\n    readonly configService: ConfigService,\n    private readonly profileService: ProfileService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get(\"WEBTOKEN_SECRET_KEY\"),\n    });\n  }\n\n  /**\n   * Checks if the bearer token is a valid token\n   * @param {JwtPayload} jwtPayload validation method for jwt token\n   * @param {any} done callback to resolve the request user with\n   */\n  async validate({ iat, exp, _id }: JwtPayload, done) {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/payload/login.payload.ts\n        \n\n            \n                Description\n            \n            \n                Login Paylaod Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/login.payload.ts:26\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/login.payload.ts:16\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport { IsAlphanumeric, IsNotEmpty, MinLength } from \"class-validator\";\n\n/**\n * Login Paylaod Class\n */\nexport class LoginPayload {\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nProfileService \n\nProfileService \n\n\n\nProfileModule\n\nProfileModule\n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ProfileService } from \"./profile.service\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { Profile } from \"./profile.model\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: \"Profile\", schema: Profile }])],\n  providers: [ProfileService],\n  exports: [ProfileService],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Profile Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getByUsername\n                            \n                            \n                                getByUsernameAndPass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/profile/profile.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: RegisterPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:62\n                \n            \n\n\n            \n                \n                    Creates a profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        profile payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:89\n                \n            \n\n\n            \n                \n                    Deletes profile from provided username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:32\n                \n            \n\n\n            \n                \n                    Fetches profile from database by UUID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUsername\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:40\n                \n            \n\n\n            \n                \n                    Fetches profile from database by username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUsernameAndPass\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUsernameAndPass(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:49\n                \n            \n\n\n            \n                \n                    Fetches profile by username and hashed password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as crypto from \"crypto\";\nimport * as gravatar from \"gravatar\";\nimport { Model } from \"mongoose\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotAcceptableException,\n} from \"@nestjs/common\";\nimport { IProfile } from \"./profile.model\";\nimport { RegisterPayload } from \"modules/auth/payload/register.payload\";\nimport { AppRoles } from \"../app/app.roles\";\n\n/**\n * Profile Service\n */\n@Injectable()\nexport class ProfileService {\n  /**\n   * Constructor\n   * @param {Model} profileModel\n   */\n  constructor(\n    @InjectModel(\"Profile\") private readonly profileModel: Model,\n  ) {}\n\n  /**\n   * Fetches profile from database by UUID\n   * @param {string} id\n   */\n  get(id: string): Promise {\n    return this.profileModel.findById(id).exec();\n  }\n\n  /**\n   * Fetches profile from database by username\n   * @param {string} username\n   */\n  getByUsername(username: string): Promise {\n    return this.profileModel.findOne({ username }).exec();\n  }\n\n  /**\n   * Fetches profile by username and hashed password\n   * @param {string} username\n   * @param {string} password\n   */\n  getByUsernameAndPass(username: string, password: string) {\n    return this.profileModel\n      .findOne({\n        username,\n        password: crypto.createHmac(\"sha256\", password).digest(\"hex\"),\n      })\n      .exec();\n  }\n\n  /**\n   * Creates a profile\n   * @param {RegisterPayload} payload profile payload\n   */\n  async create(payload: RegisterPayload): Promise {\n    const user = await this.getByUsername(payload.username);\n    if (user) {\n      throw new NotAcceptableException(\n        \"The account with the provided username currently exists. Please choose another one.\",\n      );\n    }\n    // this will auto assign the admin role to each created user\n    const createdProfile = new this.profileModel({\n      ...payload,\n      password: crypto.createHmac(\"sha256\", payload.password).digest(\"hex\"),\n      avatar: gravatar.url(payload.email, {\n        protocol: \"http\",\n        s: \"200\",\n        r: \"pg\",\n        d: \"404\",\n      }),\n      roles: AppRoles.ADMIN_DELETE_PROFILES,\n    });\n\n    return createdProfile.save();\n  }\n\n  /**\n   * Deletes profile from provided username\n   * @param {string} username\n   */\n  delete(username: string) {\n    return this.profileModel.deleteOne({ username }).then(profile => {\n      if (profile.deletedCount === 1) {\n        return { message: `Deleted ${username} from records` };\n      } else {\n        throw new BadRequestException(\n          `Failed to delete a profile by the name of ${username}.`,\n        );\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterPayload.html":{"url":"classes/RegisterPayload.html","title":"class - RegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/payload/register.payload.ts\n        \n\n            \n                Description\n            \n            \n                Register Payload Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:22\n                            \n                        \n\n                \n                    \n                        Email field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:42\n                            \n                        \n\n                \n                    \n                        Name field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:52\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:32\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport {\n  IsEmail,\n  IsNotEmpty,\n  MinLength,\n  IsAlphanumeric,\n  Matches,\n} from \"class-validator\";\n\n/**\n * Register Payload Class\n */\nexport class RegisterPayload {\n  /**\n   * Email field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WinstonModule.html":{"url":"modules/WinstonModule.html","title":"module - WinstonModule","body":"\n                   \n\n\n\n\n    Modules\n    WinstonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/winston/winston.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: WinstonModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/winston/winston.module.ts:21\n                \n            \n\n\n            \n                \n                    Constructor for winson module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                WinstonModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: WinstonModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/winston/winston.module.ts:35\n                \n            \n\n\n            \n                \n                    Asynchronous constructor for winston module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                WinstonModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from \"@nestjs/common\";\nimport {\n  WinstonModuleAsyncOptions,\n  WinstonModuleOptions,\n} from \"./winston.interfaces\";\nimport {\n  createWinstonAsyncProviders,\n  createWinstonProviders,\n} from \"./winston.providers\";\n\n@Global()\n@Module({})\n/**\n * Represents a Winston Module\n */\nexport class WinstonModule {\n  /**\n   * Constructor for winson module\n   * @param options\n   */\n  public static forRoot(options: WinstonModuleOptions): DynamicModule {\n    const providers = createWinstonProviders(options);\n\n    return {\n      module: WinstonModule,\n      providers,\n      exports: providers,\n    };\n  }\n\n  /**\n   * Asynchronous constructor for winston module\n   * @param options\n   */\n  public static forRootAsync(\n    options: WinstonModuleAsyncOptions,\n  ): DynamicModule {\n    const providers = createWinstonAsyncProviders(options);\n\n    return {\n      module: WinstonModule,\n      imports: options.imports,\n      providers,\n      exports: providers,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WinstonModuleAsyncOptions.html":{"url":"interfaces/WinstonModuleAsyncOptions.html","title":"interface - WinstonModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WinstonModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/winston/winston.interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Asynchronous winston module options\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Providers to inject\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default factory method that returns winston module options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport { LoggerOptions } from \"winston\";\n\n/**\n * Logger options\n */\nexport type WinstonModuleOptions = LoggerOptions;\n\n/**\n * Asynchronous winston module options\n */\nexport interface WinstonModuleAsyncOptions\n  extends Pick {\n  /**\n   * Default factory method that returns winston module options\n   */\n  useFactory: (\n    ...args: any[]\n  ) => Promise | WinstonModuleOptions;\n\n  /**\n   * Providers to inject\n   */\n  inject?: any[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.hmr.ts\n            \n            variable\n            module\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/modules/app/app.roles.ts\n            \n            variable\n            roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/payload/login.payload.ts\n            \n            class\n            LoginPayload\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/payload/register.payload.ts\n            \n            class\n            RegisterPayload\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            interface\n            EnvConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.model.ts\n            \n            interface\n            IProfile\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.model.ts\n            \n            variable\n            Profile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.constants.ts\n            \n            variable\n            WINSTON_MODULE_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.constants.ts\n            \n            variable\n            WINSTON_MODULE_PROVIDER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.interfaces.ts\n            \n            interface\n            WinstonModuleAsyncOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.providers.ts\n            \n            variable\n            createWinstonAsyncProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.providers.ts\n            \n            variable\n            createWinstonProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_AUTH_LOCATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_AUTH_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_CURRENT_VERSION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_DESCRIPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_ROOT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_SCHEMES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/index.ts\n            \n            variable\n            configureOpenAPI\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : 16.1.4\n        \n            @nestjs/common : 6.7.2\n        \n            @nestjs/core : 6.7.2\n        \n            @nestjs/jwt : 6.1.1\n        \n            @nestjs/mongoose : 6.1.2\n        \n            @nestjs/passport : 6.1.0\n        \n            @nestjs/platform-express : 6.7.2\n        \n            @nestjs/platform-fastify : 6.7.2\n        \n            @nestjs/swagger : 3.1.0\n        \n            @nestjs/typeorm : 6.1.3\n        \n            class-transformer : 0.2.3\n        \n            class-validator : 0.10.0\n        \n            crypto : 1.0.1\n        \n            dotenv : 8.1.0\n        \n            express-rate-limit : ^5.0.0\n        \n            fastify-helmet : 3.0.1\n        \n            fastify-rate-limit : 2.3.0\n        \n            fastify-swagger : 2.4.0\n        \n            gravatar : 1.8.0\n        \n            mongoose : 5.7.1\n        \n            nodemon : 1.19.2\n        \n            nest-access-control : ^2.0.1\n        \n            passport : 0.4.0\n        \n            passport-jwt : 4.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rimraf : 3.0.0\n        \n            rxjs : 6.5.3\n        \n            swagger-ui-express : 4.1.1\n        \n            typeorm : 0.2.19\n        \n            winston : 3.2.1\n        \n            winston-daily-rotate-file : 4.1.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppRoles   (src/.../app.roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/app/app.roles.ts\n    \n        \n            \n                \n                    \n                        \n                        AppRoles\n                    \n                \n                        \n                            \n                                 DEFAULT_READ\n                            \n                        \n                        \n                            \n                                Value : DEFAULT_READ\n                            \n                        \n                        \n                            \n                                 ADMIN_DELETE_PROFILES\n                            \n                        \n                        \n                            \n                                Value : ADMIN_DELETE_PROFILES\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n  \n\n&#x1F4DA; Description\nThis boilerplate is made to quickly prototype backend applications. It comes with database, logging, security, and authentication features out of the box.\n\n&#x1F6E0;️ Prerequisites\nNon Docker\n\nPlease make sure to have MongoDB locally, or utilize Mongo on the cloud by configuration a cluster in atlas. Then grab the connection string and modify the following line.\n\nDocker &#x1F433;\n\nPlease make sure to have docker desktop setup on any preferred operating system to quickly compose both the MongoDB and web application. Then follow the steps outlined below.\n\n\n&#x1F680; Setup\nManually Deploying without Docker\n\nCreate a .env file using the cp .env.example .env command and replace the existing env variables with personal settings (MongoDB URL either srv or localhost)\n\nInstall dependencies using npm i or yarn\n\nStart the app for pre-production using npm run start or for development using npm run start:dev (the app will be exposed on the port 9000; not to conflict with React, Angular, or Vue)\n\n\nDeploying with Docker &#x1F433;\n\nExecute the following command in-app directory:\n\n# creates and loads the docker container with required configuration\n$ docker-compose up\nThe following command will set up the project for you (building the Docker images, starting docker-compose stack). The Web application and mongo will be exposed to http://localhost:9000 and http://localhost:27017 respectively\n\n&#x1F512; Environment Configuration\nBy default, the application comes with a config module that can inject the ConfigService and read every environment variable from the .env. file.\nAPP_ENV - the application environment it will be executing as, either in development or production. Determines the type of logging options to utilize. Options: dev or prod. \nAPP_URL - the base URL for the application. Made mainly to showcase the ConfigService and can be removed if not used.\nWEBTOKEN_SECRET_KEY - the secret key to encrypt/decrypt web tokens with. Make sure to generate a random alphanumeric string for this. Not \nWEBTOKEN_EXPIRATION_TIME - the time in seconds indicating when the web token will expire; by default, it's 2400 seconds which is 40 mins.\nDB_URL - the URL to the MongoDB collection\n\n&#x1F3D7; Choosing a Web Framework\nThis boilerplate comes with Fastify out of the box as it offers performance benefits over Express. But this can be changed to use Express framework instead of Fastify. Please proceed the steps below to change between the two.\n\nReplace the following lines of code in the main.ts file with the ones detailed below.\n\n// from (fastify):\nimport {\n  FastifyAdapter,\n  NestFastifyApplication,\n} from '@nestjs/platform-fastify';\nimport * as headers from 'fastify-helmet';\nimport * as fastifyRateLimiter from 'fastify-rate-limit';\nconst app = await NestFactory.create(\n  AppModule,\n  new FastifyAdapter({ logger: console }),\n);\napp.register(headers);\napp.register(fastifyRateLimiter, {\n  max: 100,\n  timeWindow: '1 minute',\n});\n\n// to (express):\nimport * as headers from 'helmet';\nimport * as rateLimiter from 'express-rate-limit';\nconst app = await NestFactory.create(AppModule, {\n  logger: console,\n});\napp.use(headers());\napp.use(\n  rateLimiter({\n    windowMs: 60, // 1 minutes\n    max: 100, // limit each IP to 100 requests per windowMs\n  }),\n);Note: The package.jsoncomes with dependencies for both Express and Fastify to support moving between two. But this can leave the project bloated especially when only one web framework is being used. Thus it is recommended that when deploying to production, a purger of unused dependencies occurs. \nIf you choose to use Fastify, this command will purge all of the Express dependencies:\n# removing Express dependencies\n$ npm rm @nestjs/platform-express express-rate-limit helmet swagger-ui-express @types/express --saveIf you choose to use Express, this command will purge all of the Fastify dependencies:\n# removing Fastify dependencies\n$ npm rm @nestjs/platform-fastify fastify-helmet fastify-rate-limit fastify-swagger --save\n✅ Testing\nDocker &#x1F433;\n# unit tests\n$ docker exec -it nest yarn test\n\n# e2e tests\n$ docker exec -it nest yarn test:e2e\n\n# test coverage\n$ docker exec -it nest yarn test:covNon-Docker\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n&#x1F4A1; TypeDocs\nThe documentation for this boilerplate can be found on Github pages.\nThe docs can be generated on-demand, simply, by typing npm run typedocs. This will produce a docs folder with the required front-end files and start hosting on localhost port 8080.\n# generate docs for code\n$ npm run typedocs\n&#x1F4DD; Open API\nOut of the box, the web app comes with an open api specification, that is used to describe RESTful APIs. Nest provides a dedicated module to work with it.\nThe configuration for Swagger can be found at this location.\n\n✨ TypeORM\nTypeORM is an object-relational mapping that acts as an abstraction layer over operations on databases. Please view the documentation for further details.\nThe configuration for TypeORM can be found in the app module.\n\n&#x1F50A; Logs\nThis boilerplate comes with a Winston module for logging, the configurations for Winston can be found in the app module.\n\n&#x1F465; Support\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\n\nLicense\nNest is MIT licensed.\nAuthor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Msanvarov\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WinstonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WinstonModuleOptions   (src/.../winston.interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/winston/winston.interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    WinstonModuleOptions\n                \n            \n            \n                \n                    Logger options\n\n                \n            \n            \n                \n                        LoggerOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configureOpenAPI   (src/.../index.ts)\n                        \n                        \n                            createWinstonAsyncProviders   (src/.../winston.providers.ts)\n                        \n                        \n                            createWinstonProviders   (src/.../winston.providers.ts)\n                        \n                        \n                            module   (src/.../main.hmr.ts)\n                        \n                        \n                            Profile   (src/.../profile.model.ts)\n                        \n                        \n                            roles   (src/.../app.roles.ts)\n                        \n                        \n                            SWAGGER_API_AUTH_LOCATION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_AUTH_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_CURRENT_VERSION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_DESCRIPTION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_ROOT   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_SCHEMES   (src/.../constants.ts)\n                        \n                        \n                            WINSTON_MODULE_OPTIONS   (src/.../winston.constants.ts)\n                        \n                        \n                            WINSTON_MODULE_PROVIDER   (src/.../winston.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configureOpenAPI\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication) => {\n  const options = new DocumentBuilder()\n    .setTitle(SWAGGER_API_NAME)\n    .setDescription(SWAGGER_API_DESCRIPTION)\n    .setVersion(SWAGGER_API_CURRENT_VERSION)\n    .setSchemes(...SWAGGER_API_SCHEMES)\n    .addBearerAuth(SWAGGER_API_AUTH_NAME, SWAGGER_API_AUTH_LOCATION)\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup(SWAGGER_API_ROOT, app, document);\n}\n                        \n                    \n\n                \n                    \n                        Open api configuration to be used as a basis for web application\n\n                    \n                \n\n            \n        \n\n    src/modules/winston/winston.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createWinstonAsyncProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  options: WinstonModuleAsyncOptions,\n): Provider[] => {\n  return [\n    {\n      provide: WINSTON_MODULE_OPTIONS,\n      useFactory: options.useFactory,\n      inject: options.inject || [],\n    },\n    {\n      provide: WINSTON_MODULE_PROVIDER,\n      useFactory: (loggerOpts: LoggerOptions) => createLogger(loggerOpts),\n      inject: [WINSTON_MODULE_OPTIONS],\n    },\n  ];\n}\n                        \n                    \n\n                \n                    \n                        Async constructor for a winston provider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createWinstonProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  loggerOpts: WinstonModuleOptions,\n): Provider[] => {\n  return [\n    {\n      provide: WINSTON_MODULE_PROVIDER,\n      useFactory: () => createLogger(loggerOpts),\n    },\n  ];\n}\n                        \n                    \n\n                \n                    \n                        Constructor a winston provider\n\n                    \n                \n\n            \n        \n\n    src/main.hmr.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Represents the webpack meta data\n\n                    \n                \n\n            \n        \n\n    src/modules/profile/profile.model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  username: { type: String, required: true },\n  email: { type: String, required: true },\n  name: { type: String, required: true },\n  password: { type: String, required: true },\n  avatar: { type: String, required: true },\n  roles: [{ type: String }],\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n})\n                        \n                    \n\n                \n                    \n                        Mongoose Profile Schema\n\n                    \n                \n\n            \n        \n\n    src/modules/app/app.roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RolesBuilder\n\n                        \n                    \n                    \n                        \n                            Default value : new RolesBuilder()\n                        \n                    \n\n                \n                    \n                        Roles Builder\n\n                    \n                \n\n            \n        \n\n    src/swagger/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_AUTH_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"header\"\n                        \n                    \n\n                \n                    \n                        Where the SWAGGER_API_AUTH_NAME will be used in the request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_AUTH_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Authorization\"\n                        \n                    \n\n                \n                    \n                        The default authentication method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_CURRENT_VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"1.0\"\n                        \n                    \n\n                \n                    \n                        Current version of the api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_DESCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"API Description\"\n                        \n                    \n\n                \n                    \n                        A short description for api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"API\"\n                        \n                    \n\n                \n                    \n                        The name given to the api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_ROOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"api/docs\"\n                        \n                    \n\n                \n                    \n                        The endpoint for open api ui\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_SCHEMES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"http\", \"https\"]\n                        \n                    \n\n                \n                    \n                        Types of api schemes\n\n                    \n                \n\n            \n        \n\n    src/modules/winston/winston.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WINSTON_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"WinstonModuleOptions\"\n                        \n                    \n\n                \n                    \n                        Token for the type of configuration to be used when declaring in the app module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WINSTON_MODULE_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"winston\"\n                        \n                    \n\n                \n                    \n                        An identifier to use for injecting the winston provider\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
